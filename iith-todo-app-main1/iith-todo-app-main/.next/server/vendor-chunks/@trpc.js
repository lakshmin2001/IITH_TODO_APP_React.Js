"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@trpc";
exports.ids = ["vendor-chunks/@trpc"];
exports.modules = {

/***/ "(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCClientError)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n\n\n\nfunction isTRPCClientError(cause) {\n    return cause instanceof TRPCClientError || /**\n     * @deprecated\n     * Delete in next major\n     */ cause instanceof Error && cause.name === 'TRPCClientError';\n}\nfunction isTRPCErrorResponse(obj) {\n    return (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.i)(obj) && (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.i)(obj.error) && typeof obj.error.code === 'number' && typeof obj.error.message === 'string';\n}\nclass TRPCClientError extends Error {\n    static from(_cause, opts = {}) {\n        const cause = _cause;\n        if (isTRPCClientError(cause)) {\n            if (opts.meta) {\n                // Decorate with meta error data\n                cause.meta = {\n                    ...cause.meta,\n                    ...opts.meta\n                };\n            }\n            return cause;\n        }\n        if (isTRPCErrorResponse(cause)) {\n            return new TRPCClientError(cause.error.message, {\n                ...opts,\n                result: cause\n            });\n        }\n        if (!(cause instanceof Error)) {\n            return new TRPCClientError('Unknown error', {\n                ...opts,\n                cause: cause\n            });\n        }\n        return new TRPCClientError(cause.message, {\n            ...opts,\n            cause: (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.getCauseFromUnknown)(cause)\n        });\n    }\n    constructor(message, opts){\n        const cause = opts?.cause;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.meta = opts?.meta;\n        this.cause = cause;\n        this.shape = opts?.result?.error;\n        this.data = opts?.result?.error.data;\n        this.name = 'TRPCClientError';\n        Object.setPrototypeOf(this, TRPCClientError.prototype);\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvVFJQQ0NsaWVudEVycm9yLTM4ZjlhMzJhLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEQ7QUFDSzs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFRLFNBQVMsZ0VBQVE7QUFDcEM7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsd0VBQW1CO0FBQ3RDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL2NsaWVudC9kaXN0L1RSUENDbGllbnRFcnJvci0zOGY5YTMyYS5tanM/MDBkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDYXVzZUZyb21Vbmtub3duIH0gZnJvbSAnQHRycGMvc2VydmVyL3NoYXJlZCc7XG5pbXBvcnQgeyBpIGFzIGlzT2JqZWN0IH0gZnJvbSAnLi90cmFuc2Zvcm1SZXN1bHQtYWNlODY0YjgubWpzJztcblxuZnVuY3Rpb24gaXNUUlBDQ2xpZW50RXJyb3IoY2F1c2UpIHtcbiAgICByZXR1cm4gY2F1c2UgaW5zdGFuY2VvZiBUUlBDQ2xpZW50RXJyb3IgfHwgLyoqXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKiBEZWxldGUgaW4gbmV4dCBtYWpvclxuICAgICAqLyBjYXVzZSBpbnN0YW5jZW9mIEVycm9yICYmIGNhdXNlLm5hbWUgPT09ICdUUlBDQ2xpZW50RXJyb3InO1xufVxuZnVuY3Rpb24gaXNUUlBDRXJyb3JSZXNwb25zZShvYmopIHtcbiAgICByZXR1cm4gaXNPYmplY3Qob2JqKSAmJiBpc09iamVjdChvYmouZXJyb3IpICYmIHR5cGVvZiBvYmouZXJyb3IuY29kZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG9iai5lcnJvci5tZXNzYWdlID09PSAnc3RyaW5nJztcbn1cbmNsYXNzIFRSUENDbGllbnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBzdGF0aWMgZnJvbShfY2F1c2UsIG9wdHMgPSB7fSkge1xuICAgICAgICBjb25zdCBjYXVzZSA9IF9jYXVzZTtcbiAgICAgICAgaWYgKGlzVFJQQ0NsaWVudEVycm9yKGNhdXNlKSkge1xuICAgICAgICAgICAgaWYgKG9wdHMubWV0YSkge1xuICAgICAgICAgICAgICAgIC8vIERlY29yYXRlIHdpdGggbWV0YSBlcnJvciBkYXRhXG4gICAgICAgICAgICAgICAgY2F1c2UubWV0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uY2F1c2UubWV0YSxcbiAgICAgICAgICAgICAgICAgICAgLi4ub3B0cy5tZXRhXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjYXVzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNUUlBDRXJyb3JSZXNwb25zZShjYXVzZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVFJQQ0NsaWVudEVycm9yKGNhdXNlLmVycm9yLm1lc3NhZ2UsIHtcbiAgICAgICAgICAgICAgICAuLi5vcHRzLFxuICAgICAgICAgICAgICAgIHJlc3VsdDogY2F1c2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICghKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFRSUENDbGllbnRFcnJvcignVW5rbm93biBlcnJvcicsIHtcbiAgICAgICAgICAgICAgICAuLi5vcHRzLFxuICAgICAgICAgICAgICAgIGNhdXNlOiBjYXVzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBUUlBDQ2xpZW50RXJyb3IoY2F1c2UubWVzc2FnZSwge1xuICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgICAgIGNhdXNlOiBnZXRDYXVzZUZyb21Vbmtub3duKGNhdXNlKVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3B0cyl7XG4gICAgICAgIGNvbnN0IGNhdXNlID0gb3B0cz8uY2F1c2U7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgICAgICAgLy8gQHRzLWlnbm9yZSBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1lcnJvci1jYXVzZVxuICAgICAgICBzdXBlcihtZXNzYWdlLCB7XG4gICAgICAgICAgICBjYXVzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tZXRhID0gb3B0cz8ubWV0YTtcbiAgICAgICAgdGhpcy5jYXVzZSA9IGNhdXNlO1xuICAgICAgICB0aGlzLnNoYXBlID0gb3B0cz8ucmVzdWx0Py5lcnJvcjtcbiAgICAgICAgdGhpcy5kYXRhID0gb3B0cz8ucmVzdWx0Py5lcnJvci5kYXRhO1xuICAgICAgICB0aGlzLm5hbWUgPSAnVFJQQ0NsaWVudEVycm9yJztcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFRSUENDbGllbnRFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgVFJQQ0NsaWVudEVycm9yIGFzIFQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ createHTTPBatchLink),\n/* harmony export */   h: () => (/* binding */ httpBatchLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpUtils-b9d0cb48.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\");\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */ /**\n * A function that should never be called unless we messed something up.\n */ const throwFatalError = ()=>{\n    throw new Error('Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new');\n};\n/**\n * Dataloader that's very inspired by https://github.com/graphql/dataloader\n * Less configuration, no caching, and allows you to cancel requests\n * When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\n */ function dataLoader(batchLoader) {\n    let pendingItems = null;\n    let dispatchTimer = null;\n    const destroyTimerAndPendingItems = ()=>{\n        clearTimeout(dispatchTimer);\n        dispatchTimer = null;\n        pendingItems = null;\n    };\n    /**\n   * Iterate through the items and split them into groups based on the `batchLoader`'s validate function\n   */ function groupItems(items) {\n        const groupedItems = [\n            []\n        ];\n        let index = 0;\n        while(true){\n            const item = items[index];\n            if (!item) {\n                break;\n            }\n            const lastGroup = groupedItems[groupedItems.length - 1];\n            if (item.aborted) {\n                // Item was aborted before it was dispatched\n                item.reject?.(new Error('Aborted'));\n                index++;\n                continue;\n            }\n            const isValid = batchLoader.validate(lastGroup.concat(item).map((it)=>it.key));\n            if (isValid) {\n                lastGroup.push(item);\n                index++;\n                continue;\n            }\n            if (lastGroup.length === 0) {\n                item.reject?.(new Error('Input is too big for a single dispatch'));\n                index++;\n                continue;\n            }\n            // Create new group, next iteration will try to add the item to that\n            groupedItems.push([]);\n        }\n        return groupedItems;\n    }\n    function dispatch() {\n        const groupedItems = groupItems(pendingItems);\n        destroyTimerAndPendingItems();\n        // Create batches for each group of items\n        for (const items of groupedItems){\n            if (!items.length) {\n                continue;\n            }\n            const batch = {\n                items,\n                cancel: throwFatalError\n            };\n            for (const item of items){\n                item.batch = batch;\n            }\n            const unitResolver = (index, value)=>{\n                const item = batch.items[index];\n                item.resolve?.(value);\n                item.batch = null;\n                item.reject = null;\n                item.resolve = null;\n            };\n            const { promise , cancel  } = batchLoader.fetch(batch.items.map((_item)=>_item.key), unitResolver);\n            batch.cancel = cancel;\n            promise.then((result)=>{\n                for(let i = 0; i < result.length; i++){\n                    const value = result[i];\n                    unitResolver(i, value);\n                }\n                for (const item of batch.items){\n                    item.reject?.(new Error('Missing result'));\n                    item.batch = null;\n                }\n            }).catch((cause)=>{\n                for (const item of batch.items){\n                    item.reject?.(cause);\n                    item.batch = null;\n                }\n            });\n        }\n    }\n    function load(key) {\n        const item = {\n            aborted: false,\n            key,\n            batch: null,\n            resolve: throwFatalError,\n            reject: throwFatalError\n        };\n        const promise = new Promise((resolve, reject)=>{\n            item.reject = reject;\n            item.resolve = resolve;\n            if (!pendingItems) {\n                pendingItems = [];\n            }\n            pendingItems.push(item);\n        });\n        if (!dispatchTimer) {\n            dispatchTimer = setTimeout(dispatch);\n        }\n        const cancel = ()=>{\n            item.aborted = true;\n            if (item.batch?.items.every((item)=>item.aborted)) {\n                // All items in the batch have been cancelled\n                item.batch.cancel();\n                item.batch = null;\n            }\n        };\n        return {\n            promise,\n            cancel\n        };\n    }\n    return {\n        load\n    };\n}\n\n/**\n * @internal\n */ function createHTTPBatchLink(requester) {\n    return function httpBatchLink(opts) {\n        const resolvedOpts = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.r)(opts);\n        const maxURLLength = opts.maxURLLength ?? Infinity;\n        // initialized config\n        return (runtime)=>{\n            const batchLoader = (type)=>{\n                const validate = (batchOps)=>{\n                    if (maxURLLength === Infinity) {\n                        // escape hatch for quick calcs\n                        return true;\n                    }\n                    const path = batchOps.map((op)=>op.path).join(',');\n                    const inputs = batchOps.map((op)=>op.input);\n                    const url = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.g)({\n                        ...resolvedOpts,\n                        runtime,\n                        type,\n                        path,\n                        inputs\n                    });\n                    return url.length <= maxURLLength;\n                };\n                const fetch = requester({\n                    ...resolvedOpts,\n                    runtime,\n                    type,\n                    opts\n                });\n                return {\n                    validate,\n                    fetch\n                };\n            };\n            const query = dataLoader(batchLoader('query'));\n            const mutation = dataLoader(batchLoader('mutation'));\n            const subscription = dataLoader(batchLoader('subscription'));\n            const loaders = {\n                query,\n                subscription,\n                mutation\n            };\n            return ({ op  })=>{\n                return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                    const loader = loaders[op.type];\n                    const { promise , cancel  } = loader.load(op);\n                    let _res = undefined;\n                    promise.then((res)=>{\n                        _res = res;\n                        const transformed = (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.t)(res.json, runtime);\n                        if (!transformed.ok) {\n                            observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(transformed.error, {\n                                meta: res.meta\n                            }));\n                            return;\n                        }\n                        observer.next({\n                            context: res.meta,\n                            result: transformed.result\n                        });\n                        observer.complete();\n                    }).catch((err)=>{\n                        observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(err, {\n                            meta: _res?.meta\n                        }));\n                    });\n                    return ()=>{\n                        cancel();\n                    };\n                });\n            };\n        };\n    };\n}\n\nconst batchRequester = (requesterOpts)=>{\n    return (batchOps)=>{\n        const path = batchOps.map((op)=>op.path).join(',');\n        const inputs = batchOps.map((op)=>op.input);\n        const { promise , cancel  } = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.j)({\n            ...requesterOpts,\n            path,\n            inputs,\n            headers () {\n                if (!requesterOpts.opts.headers) {\n                    return {};\n                }\n                if (typeof requesterOpts.opts.headers === 'function') {\n                    return requesterOpts.opts.headers({\n                        opList: batchOps\n                    });\n                }\n                return requesterOpts.opts.headers;\n            }\n        });\n        return {\n            promise: promise.then((res)=>{\n                const resJSON = Array.isArray(res.json) ? res.json : batchOps.map(()=>res.json);\n                const result = resJSON.map((item)=>({\n                        meta: res.meta,\n                        json: item\n                    }));\n                return result;\n            }),\n            cancel\n        };\n    };\n};\nconst httpBatchLink = createHTTPBatchLink(batchRequester);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ getBody),\n/* harmony export */   b: () => (/* binding */ getFetch),\n/* harmony export */   f: () => (/* binding */ fetchHTTPResponse),\n/* harmony export */   g: () => (/* binding */ getUrl),\n/* harmony export */   h: () => (/* binding */ httpRequest),\n/* harmony export */   j: () => (/* binding */ jsonHttpRequester),\n/* harmony export */   r: () => (/* binding */ resolveHTTPLinkOptions)\n/* harmony export */ });\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n\n\nconst isFunction = (fn)=>typeof fn === 'function';\nfunction getFetch(customFetchImpl) {\n    if (customFetchImpl) {\n        return customFetchImpl;\n    }\n    if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n        return window.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n        return globalThis.fetch;\n    }\n    throw new Error('No fetch implementation found');\n}\n\nfunction getAbortController(customAbortControllerImpl) {\n    if (customAbortControllerImpl) {\n        return customAbortControllerImpl;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof window !== 'undefined' && window.AbortController) {\n        return window.AbortController;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\n        return globalThis.AbortController;\n    }\n    return null;\n}\n\nfunction resolveHTTPLinkOptions(opts) {\n    return {\n        url: opts.url.toString().replace(/\\/$/, ''),\n        fetch: opts.fetch,\n        AbortController: getAbortController(opts.AbortController)\n    };\n}\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array) {\n    const dict = {};\n    for(let index = 0; index < array.length; index++){\n        const element = array[index];\n        dict[index] = element;\n    }\n    return dict;\n}\nconst METHOD = {\n    query: 'GET',\n    mutation: 'POST'\n};\nfunction getInput(opts) {\n    return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map((_input)=>opts.runtime.transformer.serialize(_input)));\n}\nconst getUrl = (opts)=>{\n    let url = opts.url + '/' + opts.path;\n    const queryParts = [];\n    if ('inputs' in opts) {\n        queryParts.push('batch=1');\n    }\n    if (opts.type === 'query') {\n        const input = getInput(opts);\n        if (input !== undefined) {\n            queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n        }\n    }\n    if (queryParts.length) {\n        url += '?' + queryParts.join('&');\n    }\n    return url;\n};\nconst getBody = (opts)=>{\n    if (opts.type === 'query') {\n        return undefined;\n    }\n    const input = getInput(opts);\n    return input !== undefined ? JSON.stringify(input) : undefined;\n};\nconst jsonHttpRequester = (opts)=>{\n    return httpRequest({\n        ...opts,\n        contentTypeHeader: 'application/json',\n        getUrl,\n        getBody\n    });\n};\nasync function fetchHTTPResponse(opts, ac) {\n    const url = opts.getUrl(opts);\n    const body = opts.getBody(opts);\n    const { type  } = opts;\n    const resolvedHeaders = await opts.headers();\n    /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n        throw new Error('Subscriptions should use wsLink');\n    }\n    const headers = {\n        ...opts.contentTypeHeader ? {\n            'content-type': opts.contentTypeHeader\n        } : {},\n        ...opts.batchModeHeader ? {\n            'trpc-batch-mode': opts.batchModeHeader\n        } : {},\n        ...resolvedHeaders\n    };\n    return getFetch(opts.fetch)(url, {\n        method: METHOD[type],\n        signal: ac?.signal,\n        body: body,\n        headers\n    });\n}\nfunction httpRequest(opts) {\n    const ac = opts.AbortController ? new opts.AbortController() : null;\n    const meta = {};\n    let done = false;\n    const promise = new Promise((resolve, reject)=>{\n        fetchHTTPResponse(opts, ac).then((_res)=>{\n            meta.response = _res;\n            done = true;\n            return _res.json();\n        }).then((json)=>{\n            meta.responseJSON = json;\n            resolve({\n                json: json,\n                meta\n            });\n        }).catch((err)=>{\n            done = true;\n            reject(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_0__.T.from(err, {\n                meta\n            }));\n        });\n    });\n    const cancel = ()=>{\n        if (!done) {\n            ac?.abort();\n        }\n    };\n    return {\n        promise,\n        cancel\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvaHR0cFV0aWxzLWI5ZDBjYjQ4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRTs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDBDQUEwQztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxJQUFJO0FBQ2Q7QUFDQTtBQUNBLFVBQVUsSUFBSTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLG1CQUFtQiw0REFBZTtBQUNsQztBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtSiIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL2NsaWVudC9kaXN0L2h0dHBVdGlscy1iOWQwY2I0OC5tanM/ZjU0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUIGFzIFRSUENDbGllbnRFcnJvciB9IGZyb20gJy4vVFJQQ0NsaWVudEVycm9yLTM4ZjlhMzJhLm1qcyc7XG5cbmNvbnN0IGlzRnVuY3Rpb24gPSAoZm4pPT50eXBlb2YgZm4gPT09ICdmdW5jdGlvbic7XG5mdW5jdGlvbiBnZXRGZXRjaChjdXN0b21GZXRjaEltcGwpIHtcbiAgICBpZiAoY3VzdG9tRmV0Y2hJbXBsKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaEltcGw7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiBpc0Z1bmN0aW9uKHdpbmRvdy5mZXRjaCkpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5mZXRjaDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyAmJiBpc0Z1bmN0aW9uKGdsb2JhbFRoaXMuZmV0Y2gpKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLmZldGNoO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGZldGNoIGltcGxlbWVudGF0aW9uIGZvdW5kJyk7XG59XG5cbmZ1bmN0aW9uIGdldEFib3J0Q29udHJvbGxlcihjdXN0b21BYm9ydENvbnRyb2xsZXJJbXBsKSB7XG4gICAgaWYgKGN1c3RvbUFib3J0Q29udHJvbGxlckltcGwpIHtcbiAgICAgICAgcmV0dXJuIGN1c3RvbUFib3J0Q29udHJvbGxlckltcGw7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLW9wdGlvbmFsLWNoYWluXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5BYm9ydENvbnRyb2xsZXIpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5BYm9ydENvbnRyb2xsZXI7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLW9wdGlvbmFsLWNoYWluXG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyAmJiBnbG9iYWxUaGlzLkFib3J0Q29udHJvbGxlcikge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5BYm9ydENvbnRyb2xsZXI7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiByZXNvbHZlSFRUUExpbmtPcHRpb25zKG9wdHMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cmw6IG9wdHMudXJsLnRvU3RyaW5nKCkucmVwbGFjZSgvXFwvJC8sICcnKSxcbiAgICAgICAgZmV0Y2g6IG9wdHMuZmV0Y2gsXG4gICAgICAgIEFib3J0Q29udHJvbGxlcjogZ2V0QWJvcnRDb250cm9sbGVyKG9wdHMuQWJvcnRDb250cm9sbGVyKVxuICAgIH07XG59XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdHJwYy90cnBjL3B1bGwvNjY5XG5mdW5jdGlvbiBhcnJheVRvRGljdChhcnJheSkge1xuICAgIGNvbnN0IGRpY3QgPSB7fTtcbiAgICBmb3IobGV0IGluZGV4ID0gMDsgaW5kZXggPCBhcnJheS5sZW5ndGg7IGluZGV4Kyspe1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbaW5kZXhdO1xuICAgICAgICBkaWN0W2luZGV4XSA9IGVsZW1lbnQ7XG4gICAgfVxuICAgIHJldHVybiBkaWN0O1xufVxuY29uc3QgTUVUSE9EID0ge1xuICAgIHF1ZXJ5OiAnR0VUJyxcbiAgICBtdXRhdGlvbjogJ1BPU1QnXG59O1xuZnVuY3Rpb24gZ2V0SW5wdXQob3B0cykge1xuICAgIHJldHVybiAnaW5wdXQnIGluIG9wdHMgPyBvcHRzLnJ1bnRpbWUudHJhbnNmb3JtZXIuc2VyaWFsaXplKG9wdHMuaW5wdXQpIDogYXJyYXlUb0RpY3Qob3B0cy5pbnB1dHMubWFwKChfaW5wdXQpPT5vcHRzLnJ1bnRpbWUudHJhbnNmb3JtZXIuc2VyaWFsaXplKF9pbnB1dCkpKTtcbn1cbmNvbnN0IGdldFVybCA9IChvcHRzKT0+e1xuICAgIGxldCB1cmwgPSBvcHRzLnVybCArICcvJyArIG9wdHMucGF0aDtcbiAgICBjb25zdCBxdWVyeVBhcnRzID0gW107XG4gICAgaWYgKCdpbnB1dHMnIGluIG9wdHMpIHtcbiAgICAgICAgcXVlcnlQYXJ0cy5wdXNoKCdiYXRjaD0xJyk7XG4gICAgfVxuICAgIGlmIChvcHRzLnR5cGUgPT09ICdxdWVyeScpIHtcbiAgICAgICAgY29uc3QgaW5wdXQgPSBnZXRJbnB1dChvcHRzKTtcbiAgICAgICAgaWYgKGlucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHF1ZXJ5UGFydHMucHVzaChgaW5wdXQ9JHtlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoaW5wdXQpKX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocXVlcnlQYXJ0cy5sZW5ndGgpIHtcbiAgICAgICAgdXJsICs9ICc/JyArIHF1ZXJ5UGFydHMuam9pbignJicpO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xufTtcbmNvbnN0IGdldEJvZHkgPSAob3B0cyk9PntcbiAgICBpZiAob3B0cy50eXBlID09PSAncXVlcnknKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0ID0gZ2V0SW5wdXQob3B0cyk7XG4gICAgcmV0dXJuIGlucHV0ICE9PSB1bmRlZmluZWQgPyBKU09OLnN0cmluZ2lmeShpbnB1dCkgOiB1bmRlZmluZWQ7XG59O1xuY29uc3QganNvbkh0dHBSZXF1ZXN0ZXIgPSAob3B0cyk9PntcbiAgICByZXR1cm4gaHR0cFJlcXVlc3Qoe1xuICAgICAgICAuLi5vcHRzLFxuICAgICAgICBjb250ZW50VHlwZUhlYWRlcjogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBnZXRVcmwsXG4gICAgICAgIGdldEJvZHlcbiAgICB9KTtcbn07XG5hc3luYyBmdW5jdGlvbiBmZXRjaEhUVFBSZXNwb25zZShvcHRzLCBhYykge1xuICAgIGNvbnN0IHVybCA9IG9wdHMuZ2V0VXJsKG9wdHMpO1xuICAgIGNvbnN0IGJvZHkgPSBvcHRzLmdldEJvZHkob3B0cyk7XG4gICAgY29uc3QgeyB0eXBlICB9ID0gb3B0cztcbiAgICBjb25zdCByZXNvbHZlZEhlYWRlcnMgPSBhd2FpdCBvcHRzLmhlYWRlcnMoKTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgLS0gQHByZXNlcnZlICovIGlmICh0eXBlID09PSAnc3Vic2NyaXB0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N1YnNjcmlwdGlvbnMgc2hvdWxkIHVzZSB3c0xpbmsnKTtcbiAgICB9XG4gICAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAgICAgLi4ub3B0cy5jb250ZW50VHlwZUhlYWRlciA/IHtcbiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBvcHRzLmNvbnRlbnRUeXBlSGVhZGVyXG4gICAgICAgIH0gOiB7fSxcbiAgICAgICAgLi4ub3B0cy5iYXRjaE1vZGVIZWFkZXIgPyB7XG4gICAgICAgICAgICAndHJwYy1iYXRjaC1tb2RlJzogb3B0cy5iYXRjaE1vZGVIZWFkZXJcbiAgICAgICAgfSA6IHt9LFxuICAgICAgICAuLi5yZXNvbHZlZEhlYWRlcnNcbiAgICB9O1xuICAgIHJldHVybiBnZXRGZXRjaChvcHRzLmZldGNoKSh1cmwsIHtcbiAgICAgICAgbWV0aG9kOiBNRVRIT0RbdHlwZV0sXG4gICAgICAgIHNpZ25hbDogYWM/LnNpZ25hbCxcbiAgICAgICAgYm9keTogYm9keSxcbiAgICAgICAgaGVhZGVyc1xuICAgIH0pO1xufVxuZnVuY3Rpb24gaHR0cFJlcXVlc3Qob3B0cykge1xuICAgIGNvbnN0IGFjID0gb3B0cy5BYm9ydENvbnRyb2xsZXIgPyBuZXcgb3B0cy5BYm9ydENvbnRyb2xsZXIoKSA6IG51bGw7XG4gICAgY29uc3QgbWV0YSA9IHt9O1xuICAgIGxldCBkb25lID0gZmFsc2U7XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpPT57XG4gICAgICAgIGZldGNoSFRUUFJlc3BvbnNlKG9wdHMsIGFjKS50aGVuKChfcmVzKT0+e1xuICAgICAgICAgICAgbWV0YS5yZXNwb25zZSA9IF9yZXM7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBfcmVzLmpzb24oKTtcbiAgICAgICAgfSkudGhlbigoanNvbik9PntcbiAgICAgICAgICAgIG1ldGEucmVzcG9uc2VKU09OID0ganNvbjtcbiAgICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgIGpzb246IGpzb24sXG4gICAgICAgICAgICAgICAgbWV0YVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLmNhdGNoKChlcnIpPT57XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJlamVjdChUUlBDQ2xpZW50RXJyb3IuZnJvbShlcnIsIHtcbiAgICAgICAgICAgICAgICBtZXRhXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIGNvbnN0IGNhbmNlbCA9ICgpPT57XG4gICAgICAgIGlmICghZG9uZSkge1xuICAgICAgICAgICAgYWM/LmFib3J0KCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb21pc2UsXG4gICAgICAgIGNhbmNlbFxuICAgIH07XG59XG5cbmV4cG9ydCB7IGdldEJvZHkgYXMgYSwgZ2V0RmV0Y2ggYXMgYiwgZmV0Y2hIVFRQUmVzcG9uc2UgYXMgZiwgZ2V0VXJsIGFzIGcsIGh0dHBSZXF1ZXN0IGFzIGgsIGpzb25IdHRwUmVxdWVzdGVyIGFzIGosIHJlc29sdmVIVFRQTGlua09wdGlvbnMgYXMgciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@trpc/client/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* reexport safe */ _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T),\n/* harmony export */   TRPCUntypedClient: () => (/* binding */ TRPCUntypedClient),\n/* harmony export */   clientCallTypeToProcedureType: () => (/* binding */ clientCallTypeToProcedureType),\n/* harmony export */   createTRPCClient: () => (/* binding */ createTRPCClient),\n/* harmony export */   createTRPCClientProxy: () => (/* binding */ createTRPCClientProxy),\n/* harmony export */   createTRPCProxyClient: () => (/* binding */ createTRPCProxyClient),\n/* harmony export */   createTRPCUntypedClient: () => (/* binding */ createTRPCUntypedClient),\n/* harmony export */   createWSClient: () => (/* reexport safe */ _links_wsLink_mjs__WEBPACK_IMPORTED_MODULE_8__.createWSClient),\n/* harmony export */   experimental_formDataLink: () => (/* binding */ experimental_formDataLink),\n/* harmony export */   getFetch: () => (/* reexport safe */ _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.b),\n/* harmony export */   getUntypedClient: () => (/* binding */ getUntypedClient),\n/* harmony export */   httpBatchLink: () => (/* reexport safe */ _httpBatchLink_d0f9eac9_mjs__WEBPACK_IMPORTED_MODULE_5__.h),\n/* harmony export */   httpLink: () => (/* reexport safe */ _links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__.httpLink),\n/* harmony export */   httpLinkFactory: () => (/* reexport safe */ _links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__.httpLinkFactory),\n/* harmony export */   loggerLink: () => (/* reexport safe */ _links_loggerLink_mjs__WEBPACK_IMPORTED_MODULE_7__.loggerLink),\n/* harmony export */   splitLink: () => (/* reexport safe */ _splitLink_4c75f7be_mjs__WEBPACK_IMPORTED_MODULE_1__.s),\n/* harmony export */   unstable_httpBatchStreamLink: () => (/* binding */ unstable_httpBatchStreamLink),\n/* harmony export */   wsLink: () => (/* reexport safe */ _links_wsLink_mjs__WEBPACK_IMPORTED_MODULE_8__.wsLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _splitLink_4c75f7be_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./splitLink-4c75f7be.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./httpUtils-b9d0cb48.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\");\n/* harmony import */ var _httpBatchLink_d0f9eac9_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./httpBatchLink-d0f9eac9.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs\");\n/* harmony import */ var _links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./links/httpLink.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/links/httpLink.mjs\");\n/* harmony import */ var _links_loggerLink_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./links/loggerLink.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/links/loggerLink.mjs\");\n/* harmony import */ var _links_wsLink_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./links/wsLink.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/links/wsLink.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass TRPCUntypedClient {\n    $request({ type , input , path , context ={}  }) {\n        const chain$ = (0,_splitLink_4c75f7be_mjs__WEBPACK_IMPORTED_MODULE_1__.c)({\n            links: this.links,\n            op: {\n                id: ++this.requestId,\n                type,\n                path,\n                input,\n                context\n            }\n        });\n        return chain$.pipe((0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.share)());\n    }\n    requestAsPromise(opts) {\n        const req$ = this.$request(opts);\n        const { promise , abort  } = (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observableToPromise)(req$);\n        const abortablePromise = new Promise((resolve, reject)=>{\n            opts.signal?.addEventListener('abort', abort);\n            promise.then((envelope)=>{\n                resolve(envelope.result.data);\n            }).catch((err)=>{\n                reject(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(err));\n            });\n        });\n        return abortablePromise;\n    }\n    query(path, input, opts) {\n        return this.requestAsPromise({\n            type: 'query',\n            path,\n            input,\n            context: opts?.context,\n            signal: opts?.signal\n        });\n    }\n    mutation(path, input, opts) {\n        return this.requestAsPromise({\n            type: 'mutation',\n            path,\n            input,\n            context: opts?.context,\n            signal: opts?.signal\n        });\n    }\n    subscription(path, input, opts) {\n        const observable$ = this.$request({\n            type: 'subscription',\n            path,\n            input,\n            context: opts?.context\n        });\n        return observable$.subscribe({\n            next (envelope) {\n                if (envelope.result.type === 'started') {\n                    opts.onStarted?.();\n                } else if (envelope.result.type === 'stopped') {\n                    opts.onStopped?.();\n                } else {\n                    opts.onData?.(envelope.result.data);\n                }\n            },\n            error (err) {\n                opts.onError?.(err);\n            },\n            complete () {\n                opts.onComplete?.();\n            }\n        });\n    }\n    constructor(opts){\n        this.requestId = 0;\n        const combinedTransformer = (()=>{\n            const transformer = opts.transformer;\n            if (!transformer) {\n                return {\n                    input: {\n                        serialize: (data)=>data,\n                        deserialize: (data)=>data\n                    },\n                    output: {\n                        serialize: (data)=>data,\n                        deserialize: (data)=>data\n                    }\n                };\n            }\n            if ('input' in transformer) {\n                return opts.transformer;\n            }\n            return {\n                input: transformer,\n                output: transformer\n            };\n        })();\n        this.runtime = {\n            transformer: {\n                serialize: (data)=>combinedTransformer.input.serialize(data),\n                deserialize: (data)=>combinedTransformer.output.deserialize(data)\n            },\n            combinedTransformer\n        };\n        // Initialize the links\n        this.links = opts.links.map((link)=>link(this.runtime));\n    }\n}\n\nfunction createTRPCUntypedClient(opts) {\n    return new TRPCUntypedClient(opts);\n}\n\n/**\n * @deprecated use `createTRPCProxyClient` instead\n */ function createTRPCClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    return client;\n}\n\nconst clientCallTypeMap = {\n    query: 'query',\n    mutate: 'mutation',\n    subscribe: 'subscription'\n};\n/** @internal */ const clientCallTypeToProcedureType = (clientCallType)=>{\n    return clientCallTypeMap[clientCallType];\n};\n/**\n * @deprecated use `createTRPCProxyClient` instead\n * @internal\n */ function createTRPCClientProxy(client) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__.createFlatProxy)((key)=>{\n        if (client.hasOwnProperty(key)) {\n            return client[key];\n        }\n        if (key === '__untypedClient') {\n            return client;\n        }\n        return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__.createRecursiveProxy)(({ path , args  })=>{\n            const pathCopy = [\n                key,\n                ...path\n            ];\n            const procedureType = clientCallTypeToProcedureType(pathCopy.pop());\n            const fullPath = pathCopy.join('.');\n            return client[procedureType](fullPath, ...args);\n        });\n    });\n}\nfunction createTRPCProxyClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    const proxy = createTRPCClientProxy(client);\n    return proxy;\n}\n/**\n * Get an untyped client from a proxy client\n * @internal\n */ function getUntypedClient(client) {\n    return client.__untypedClient;\n}\n\nfunction getTextDecoder(customTextDecoder) {\n    if (customTextDecoder) {\n        return customTextDecoder;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof window !== 'undefined' && window.TextDecoder) {\n        return new window.TextDecoder();\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof globalThis !== 'undefined' && globalThis.TextDecoder) {\n        return new globalThis.TextDecoder();\n    }\n    throw new Error('No TextDecoder implementation found');\n}\n\n// Stream parsing adapted from https://www.loginradius.com/blog/engineering/guest-post/http-streaming-with-nodejs-and-fetch-api/\n/**\n * @internal\n * @description Take a stream of bytes and call `onLine` with\n * a JSON object for each line in the stream. Expected stream\n * format is:\n * ```json\n * {\"1\": {...}\n * ,\"0\": {...}\n * }\n * ```\n */ async function parseJSONStream(opts) {\n    const parse = opts.parse ?? JSON.parse;\n    const onLine = (line)=>{\n        if (opts.signal?.aborted) return;\n        if (!line || line === '}') {\n            return;\n        }\n        /**\n     * At this point, `line` can be one of two things:\n     * - The first line of the stream `{\"2\":{...}`\n     * - A line in the middle of the stream `,\"2\":{...}`\n     */ const indexOfColon = line.indexOf(':');\n        const indexAsStr = line.substring(2, indexOfColon - 1);\n        const text = line.substring(indexOfColon + 1);\n        opts.onSingle(Number(indexAsStr), parse(text));\n    };\n    await readLines(opts.readableStream, onLine, opts.textDecoder);\n}\n/**\n * Handle transforming a stream of bytes into lines of text.\n * To avoid using AsyncIterators / AsyncGenerators,\n * we use a callback for each line.\n *\n * @param readableStream can be a NodeJS stream or a WebAPI stream\n * @param onLine will be called for every line ('\\n' delimited) in the stream\n */ async function readLines(readableStream, onLine, textDecoder) {\n    let partOfLine = '';\n    const onChunk = (chunk)=>{\n        const chunkText = textDecoder.decode(chunk);\n        const chunkLines = chunkText.split('\\n');\n        if (chunkLines.length === 1) {\n            partOfLine += chunkLines[0];\n        } else if (chunkLines.length > 1) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\n            onLine(partOfLine + chunkLines[0]);\n            for(let i = 1; i < chunkLines.length - 1; i++){\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\n                onLine(chunkLines[i]);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length doesn't change, so is necessarily > 1\n            partOfLine = chunkLines[chunkLines.length - 1];\n        }\n    };\n    // we handle 2 different types of streams, this if where we figure out which one we have\n    if ('getReader' in readableStream) {\n        await readStandardChunks(readableStream, onChunk);\n    } else {\n        await readNodeChunks(readableStream, onChunk);\n    }\n    onLine(partOfLine);\n}\n/**\n * Handle NodeJS stream\n */ function readNodeChunks(stream, onChunk) {\n    return new Promise((resolve)=>{\n        stream.on('data', onChunk);\n        stream.on('end', resolve);\n    });\n}\n/**\n * Handle WebAPI stream\n */ async function readStandardChunks(stream, onChunk) {\n    const reader = stream.getReader();\n    let readResult = await reader.read();\n    while(!readResult.done){\n        onChunk(readResult.value);\n        readResult = await reader.read();\n    }\n}\nconst streamingJsonHttpRequester = (opts, onSingle)=>{\n    const ac = opts.AbortController ? new opts.AbortController() : null;\n    const responsePromise = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.f)({\n        ...opts,\n        contentTypeHeader: 'application/json',\n        batchModeHeader: 'stream',\n        getUrl: _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.g,\n        getBody: _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.a\n    }, ac);\n    const cancel = ()=>ac?.abort();\n    const promise = responsePromise.then(async (res)=>{\n        if (!res.body) throw new Error('Received response without body');\n        const meta = {\n            response: res\n        };\n        return parseJSONStream({\n            readableStream: res.body,\n            onSingle,\n            parse: (string)=>({\n                    json: JSON.parse(string),\n                    meta\n                }),\n            signal: ac?.signal,\n            textDecoder: opts.textDecoder\n        });\n    });\n    return {\n        cancel,\n        promise\n    };\n};\n\nconst streamRequester = (requesterOpts)=>{\n    const textDecoder = getTextDecoder(requesterOpts.opts.textDecoder);\n    return (batchOps, unitResolver)=>{\n        const path = batchOps.map((op)=>op.path).join(',');\n        const inputs = batchOps.map((op)=>op.input);\n        const { cancel , promise  } = streamingJsonHttpRequester({\n            ...requesterOpts,\n            textDecoder,\n            path,\n            inputs,\n            headers () {\n                if (!requesterOpts.opts.headers) {\n                    return {};\n                }\n                if (typeof requesterOpts.opts.headers === 'function') {\n                    return requesterOpts.opts.headers({\n                        opList: batchOps\n                    });\n                }\n                return requesterOpts.opts.headers;\n            }\n        }, (index, res)=>{\n            unitResolver(index, res);\n        });\n        return {\n            /**\n       * return an empty array because the batchLoader expects an array of results\n       * but we've already called the `unitResolver` for each of them, there's\n       * nothing left to do here.\n       */ promise: promise.then(()=>[]),\n            cancel\n        };\n    };\n};\nconst unstable_httpBatchStreamLink = (0,_httpBatchLink_d0f9eac9_mjs__WEBPACK_IMPORTED_MODULE_5__.c)(streamRequester);\n\nconst getBody = (opts)=>{\n    if (!('input' in opts)) {\n        return undefined;\n    }\n    if (!(opts.input instanceof FormData)) {\n        throw new Error('Input is not FormData');\n    }\n    return opts.input;\n};\nconst formDataRequester = (opts)=>{\n    if (opts.type !== 'mutation') {\n        // TODO(?) handle formdata queries\n        throw new Error('We only handle mutations with formdata');\n    }\n    return (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.h)({\n        ...opts,\n        getUrl () {\n            return `${opts.url}/${opts.path}`;\n        },\n        getBody\n    });\n};\nconst experimental_formDataLink = (0,_links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__.httpLinkFactory)({\n    requester: formDataRequester\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/links/httpLink.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/client/dist/links/httpLink.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   httpLink: () => (/* binding */ httpLink),\n/* harmony export */   httpLinkFactory: () => (/* binding */ httpLinkFactory)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../httpUtils-b9d0cb48.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n\n\n\n\n\n\nfunction httpLinkFactory(factoryOpts) {\n    return (opts)=>{\n        const resolvedOpts = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.r)(opts);\n        return (runtime)=>({ op  })=>(0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                    const { path , input , type  } = op;\n                    const { promise , cancel  } = factoryOpts.requester({\n                        ...resolvedOpts,\n                        runtime,\n                        type,\n                        path,\n                        input,\n                        headers () {\n                            if (!opts.headers) {\n                                return {};\n                            }\n                            if (typeof opts.headers === 'function') {\n                                return opts.headers({\n                                    op\n                                });\n                            }\n                            return opts.headers;\n                        }\n                    });\n                    let meta = undefined;\n                    promise.then((res)=>{\n                        meta = res.meta;\n                        const transformed = (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.t)(res.json, runtime);\n                        if (!transformed.ok) {\n                            observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(transformed.error, {\n                                meta\n                            }));\n                            return;\n                        }\n                        observer.next({\n                            context: res.meta,\n                            result: transformed.result\n                        });\n                        observer.complete();\n                    }).catch((cause)=>{\n                        observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(cause, {\n                            meta\n                        }));\n                    });\n                    return ()=>{\n                        cancel();\n                    };\n                });\n    };\n}\n/**\n * @see https://trpc.io/docs/client/links/httpLink\n */ const httpLink = httpLinkFactory({\n    requester: _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.j\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvbGlua3MvaHR0cExpbmsubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFDa0I7QUFDQTtBQUN5QjtBQUNuRTs7QUFFN0I7QUFDQTtBQUNBLDZCQUE2QiwwREFBc0I7QUFDbkQsNkJBQTZCLEtBQUssR0FBRyxtRUFBVTtBQUMvQyw0QkFBNEIsdUJBQXVCO0FBQ25ELDRCQUE0QixvQkFBb0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsZ0VBQWU7QUFDM0Q7QUFDQSwyQ0FBMkMsNERBQWU7QUFDMUQ7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLHFCQUFxQjtBQUNyQix1Q0FBdUMsNERBQWU7QUFDdEQ7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBaUI7QUFDaEMsQ0FBQzs7QUFFb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90My10dXJzby10b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9AdHJwYy9jbGllbnQvZGlzdC9saW5rcy9odHRwTGluay5tanM/NjMxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBvYnNlcnZhYmxlIH0gZnJvbSAnQHRycGMvc2VydmVyL29ic2VydmFibGUnO1xuaW1wb3J0IHsgdCBhcyB0cmFuc2Zvcm1SZXN1bHQgfSBmcm9tICcuLi90cmFuc2Zvcm1SZXN1bHQtYWNlODY0YjgubWpzJztcbmltcG9ydCB7IFQgYXMgVFJQQ0NsaWVudEVycm9yIH0gZnJvbSAnLi4vVFJQQ0NsaWVudEVycm9yLTM4ZjlhMzJhLm1qcyc7XG5pbXBvcnQgeyByIGFzIHJlc29sdmVIVFRQTGlua09wdGlvbnMsIGogYXMganNvbkh0dHBSZXF1ZXN0ZXIgfSBmcm9tICcuLi9odHRwVXRpbHMtYjlkMGNiNDgubWpzJztcbmltcG9ydCAnQHRycGMvc2VydmVyL3NoYXJlZCc7XG5cbmZ1bmN0aW9uIGh0dHBMaW5rRmFjdG9yeShmYWN0b3J5T3B0cykge1xuICAgIHJldHVybiAob3B0cyk9PntcbiAgICAgICAgY29uc3QgcmVzb2x2ZWRPcHRzID0gcmVzb2x2ZUhUVFBMaW5rT3B0aW9ucyhvcHRzKTtcbiAgICAgICAgcmV0dXJuIChydW50aW1lKT0+KHsgb3AgIH0pPT5vYnNlcnZhYmxlKChvYnNlcnZlcik9PntcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwYXRoICwgaW5wdXQgLCB0eXBlICB9ID0gb3A7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJvbWlzZSAsIGNhbmNlbCAgfSA9IGZhY3RvcnlPcHRzLnJlcXVlc3Rlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5yZXNvbHZlZE9wdHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBydW50aW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnB1dCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnMgKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb3B0cy5oZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRzLmhlYWRlcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuaGVhZGVycyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuaGVhZGVycztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBtZXRhID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICBwcm9taXNlLnRoZW4oKHJlcyk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGEgPSByZXMubWV0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybWVkID0gdHJhbnNmb3JtUmVzdWx0KHJlcy5qc29uLCBydW50aW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdHJhbnNmb3JtZWQub2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcihUUlBDQ2xpZW50RXJyb3IuZnJvbSh0cmFuc2Zvcm1lZC5lcnJvciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IHJlcy5tZXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdDogdHJhbnNmb3JtZWQucmVzdWx0XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKChjYXVzZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmVycm9yKFRSUENDbGllbnRFcnJvci5mcm9tKGNhdXNlLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICB9O1xufVxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vdHJwYy5pby9kb2NzL2NsaWVudC9saW5rcy9odHRwTGlua1xuICovIGNvbnN0IGh0dHBMaW5rID0gaHR0cExpbmtGYWN0b3J5KHtcbiAgICByZXF1ZXN0ZXI6IGpzb25IdHRwUmVxdWVzdGVyXG59KTtcblxuZXhwb3J0IHsgaHR0cExpbmssIGh0dHBMaW5rRmFjdG9yeSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/links/httpLink.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/links/loggerLink.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/links/loggerLink.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loggerLink: () => (/* binding */ loggerLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n\n\n/// <reference lib=\"dom.iterable\" />\nfunction isFormData(value) {\n    if (typeof FormData === 'undefined') {\n        // FormData is not supported\n        return false;\n    }\n    return value instanceof FormData;\n}\nconst palettes = {\n    css: {\n        query: [\n            '72e3ff',\n            '3fb0d8'\n        ],\n        mutation: [\n            'c5a3fc',\n            '904dfc'\n        ],\n        subscription: [\n            'ff49e1',\n            'd83fbe'\n        ]\n    },\n    ansi: {\n        regular: {\n            // Cyan background, black and white text respectively\n            query: [\n                '\\x1b[30;46m',\n                '\\x1b[97;46m'\n            ],\n            // Magenta background, black and white text respectively\n            mutation: [\n                '\\x1b[30;45m',\n                '\\x1b[97;45m'\n            ],\n            // Green background, black and white text respectively\n            subscription: [\n                '\\x1b[30;42m',\n                '\\x1b[97;42m'\n            ]\n        },\n        bold: {\n            query: [\n                '\\x1b[1;30;46m',\n                '\\x1b[1;97;46m'\n            ],\n            mutation: [\n                '\\x1b[1;30;45m',\n                '\\x1b[1;97;45m'\n            ],\n            subscription: [\n                '\\x1b[1;30;42m',\n                '\\x1b[1;97;42m'\n            ]\n        }\n    }\n};\nfunction constructPartsAndArgs(opts) {\n    const { direction , type , path , id , input  } = opts;\n    const parts = [];\n    const args = [];\n    if (opts.colorMode === 'ansi') {\n        const [lightRegular, darkRegular] = palettes.ansi.regular[type];\n        const [lightBold, darkBold] = palettes.ansi.bold[type];\n        const reset = '\\x1b[0m';\n        parts.push(direction === 'up' ? lightRegular : darkRegular, direction === 'up' ? '>>' : '<<', type, direction === 'up' ? lightBold : darkBold, `#${id}`, path, reset);\n        if (direction === 'up') {\n            args.push({\n                input: opts.input\n            });\n        } else {\n            args.push({\n                input: opts.input,\n                // strip context from result cause it's too noisy in terminal wihtout collapse mode\n                result: 'result' in opts.result ? opts.result.result : opts.result,\n                elapsedMs: opts.elapsedMs\n            });\n        }\n        return {\n            parts,\n            args\n        };\n    }\n    const [light, dark] = palettes.css[type];\n    const css = `\n    background-color: #${direction === 'up' ? light : dark}; \n    color: ${direction === 'up' ? 'black' : 'white'};\n    padding: 2px;\n  `;\n    parts.push('%c', direction === 'up' ? '>>' : '<<', type, `#${id}`, `%c${path}%c`, '%O');\n    args.push(css, `${css}; font-weight: bold;`, `${css}; font-weight: normal;`);\n    if (direction === 'up') {\n        args.push({\n            input,\n            context: opts.context\n        });\n    } else {\n        args.push({\n            input,\n            result: opts.result,\n            elapsedMs: opts.elapsedMs,\n            context: opts.context\n        });\n    }\n    return {\n        parts,\n        args\n    };\n}\n// maybe this should be moved to it's own package\nconst defaultLogger = ({ c =console , colorMode ='css'  })=>(props)=>{\n        const rawInput = props.input;\n        const input = isFormData(rawInput) ? Object.fromEntries(rawInput) : rawInput;\n        const { parts , args  } = constructPartsAndArgs({\n            ...props,\n            colorMode,\n            input\n        });\n        const fn = props.direction === 'down' && props.result && (props.result instanceof Error || 'error' in props.result.result) ? 'error' : 'log';\n        c[fn].apply(null, [\n            parts.join(' ')\n        ].concat(args));\n    };\n/**\n * @see https://trpc.io/docs/client/links/loggerLink\n */ function loggerLink(opts = {}) {\n    const { enabled =()=>true  } = opts;\n    const colorMode = opts.colorMode ?? (typeof window === 'undefined' ? 'ansi' : 'css');\n    const { logger =defaultLogger({\n        c: opts.console,\n        colorMode\n    })  } = opts;\n    return ()=>{\n        return ({ op , next  })=>{\n            return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                // ->\n                enabled({\n                    ...op,\n                    direction: 'up'\n                }) && logger({\n                    ...op,\n                    direction: 'up'\n                });\n                const requestStartTime = Date.now();\n                function logResult(result) {\n                    const elapsedMs = Date.now() - requestStartTime;\n                    enabled({\n                        ...op,\n                        direction: 'down',\n                        result\n                    }) && logger({\n                        ...op,\n                        direction: 'down',\n                        elapsedMs,\n                        result\n                    });\n                }\n                return next(op).pipe((0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.tap)({\n                    next (result) {\n                        logResult(result);\n                    },\n                    error (result) {\n                        logResult(result);\n                    }\n                })).subscribe(observer);\n            });\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/links/loggerLink.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/links/wsLink.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@trpc/client/dist/links/wsLink.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWSClient: () => (/* binding */ createWSClient),\n/* harmony export */   wsLink: () => (/* binding */ wsLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n\n\n\n\n\n/* istanbul ignore next -- @preserve */ const retryDelay = (attemptIndex)=>attemptIndex === 0 ? 0 : Math.min(1000 * 2 ** attemptIndex, 30000);\n\nfunction createWSClient(opts) {\n    const { url , WebSocket: WebSocketImpl = WebSocket , retryDelayMs: retryDelayFn = retryDelay , onOpen , onClose ,  } = opts;\n    /* istanbul ignore next -- @preserve */ if (!WebSocketImpl) {\n        throw new Error(\"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\");\n    }\n    /**\n   * outgoing messages buffer whilst not open\n   */ let outgoing = [];\n    const pendingRequests = Object.create(null);\n    let connectAttempt = 0;\n    let dispatchTimer = null;\n    let connectTimer = null;\n    let activeConnection = createWS();\n    let state = 'connecting';\n    /**\n   * tries to send the list of messages\n   */ function dispatch() {\n        if (state !== 'open' || dispatchTimer) {\n            return;\n        }\n        dispatchTimer = setTimeout(()=>{\n            dispatchTimer = null;\n            if (outgoing.length === 1) {\n                // single send\n                activeConnection.send(JSON.stringify(outgoing.pop()));\n            } else {\n                // batch send\n                activeConnection.send(JSON.stringify(outgoing));\n            }\n            // clear\n            outgoing = [];\n        });\n    }\n    function tryReconnect() {\n        if (connectTimer !== null || state === 'closed') {\n            return;\n        }\n        const timeout = retryDelayFn(connectAttempt++);\n        reconnectInMs(timeout);\n    }\n    function reconnect() {\n        state = 'connecting';\n        const oldConnection = activeConnection;\n        activeConnection = createWS();\n        closeIfNoPending(oldConnection);\n    }\n    function reconnectInMs(ms) {\n        if (connectTimer) {\n            return;\n        }\n        state = 'connecting';\n        connectTimer = setTimeout(reconnect, ms);\n    }\n    function closeIfNoPending(conn) {\n        // disconnect as soon as there are are no pending result\n        const hasPendingRequests = Object.values(pendingRequests).some((p)=>p.ws === conn);\n        if (!hasPendingRequests) {\n            conn.close();\n        }\n    }\n    function closeActiveSubscriptions() {\n        Object.values(pendingRequests).forEach((req)=>{\n            if (req.type === 'subscription') {\n                req.callbacks.complete();\n            }\n        });\n    }\n    function resumeSubscriptionOnReconnect(req) {\n        if (outgoing.some((r)=>r.id === req.op.id)) {\n            return;\n        }\n        request(req.op, req.callbacks);\n    }\n    function createWS() {\n        const urlString = typeof url === 'function' ? url() : url;\n        const conn = new WebSocketImpl(urlString);\n        clearTimeout(connectTimer);\n        connectTimer = null;\n        conn.addEventListener('open', ()=>{\n            /* istanbul ignore next -- @preserve */ if (conn !== activeConnection) {\n                return;\n            }\n            connectAttempt = 0;\n            state = 'open';\n            onOpen?.();\n            dispatch();\n        });\n        conn.addEventListener('error', ()=>{\n            if (conn === activeConnection) {\n                tryReconnect();\n            }\n        });\n        const handleIncomingRequest = (req)=>{\n            if (req.method === 'reconnect' && conn === activeConnection) {\n                if (state === 'open') {\n                    onClose?.();\n                }\n                reconnect();\n                // notify subscribers\n                for (const pendingReq of Object.values(pendingRequests)){\n                    if (pendingReq.type === 'subscription') {\n                        resumeSubscriptionOnReconnect(pendingReq);\n                    }\n                }\n            }\n        };\n        const handleIncomingResponse = (data)=>{\n            const req = data.id !== null && pendingRequests[data.id];\n            if (!req) {\n                // do something?\n                return;\n            }\n            req.callbacks.next?.(data);\n            if (req.ws !== activeConnection && conn === activeConnection) {\n                const oldWs = req.ws;\n                // gracefully replace old connection with this\n                req.ws = activeConnection;\n                closeIfNoPending(oldWs);\n            }\n            if ('result' in data && data.result.type === 'stopped' && conn === activeConnection) {\n                req.callbacks.complete();\n            }\n        };\n        conn.addEventListener('message', ({ data  })=>{\n            const msg = JSON.parse(data);\n            if ('method' in msg) {\n                handleIncomingRequest(msg);\n            } else {\n                handleIncomingResponse(msg);\n            }\n            if (conn !== activeConnection || state === 'closed') {\n                // when receiving a message, we close old connection that has no pending requests\n                closeIfNoPending(conn);\n            }\n        });\n        conn.addEventListener('close', ({ code  })=>{\n            if (state === 'open') {\n                onClose?.({\n                    code\n                });\n            }\n            if (activeConnection === conn) {\n                // connection might have been replaced already\n                tryReconnect();\n            }\n            for (const [key, req] of Object.entries(pendingRequests)){\n                if (req.ws !== conn) {\n                    continue;\n                }\n                if (state === 'closed') {\n                    // If the connection was closed, we just call `complete()` on the request\n                    delete pendingRequests[key];\n                    req.callbacks.complete?.();\n                    continue;\n                }\n                // The connection was closed either unexpectedly or because of a reconnect\n                if (req.type === 'subscription') {\n                    // Subscriptions will resume after we've reconnected\n                    resumeSubscriptionOnReconnect(req);\n                } else {\n                    // Queries and mutations will error if interrupted\n                    delete pendingRequests[key];\n                    req.callbacks.error?.(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(new TRPCWebSocketClosedError('WebSocket closed prematurely')));\n                }\n            }\n        });\n        return conn;\n    }\n    function request(op, callbacks) {\n        const { type , input , path , id  } = op;\n        const envelope = {\n            id,\n            method: type,\n            params: {\n                input,\n                path\n            }\n        };\n        pendingRequests[id] = {\n            ws: activeConnection,\n            type,\n            callbacks,\n            op\n        };\n        // enqueue message\n        outgoing.push(envelope);\n        dispatch();\n        return ()=>{\n            const callbacks = pendingRequests[id]?.callbacks;\n            delete pendingRequests[id];\n            outgoing = outgoing.filter((msg)=>msg.id !== id);\n            callbacks?.complete?.();\n            if (activeConnection.readyState === WebSocketImpl.OPEN && op.type === 'subscription') {\n                outgoing.push({\n                    id,\n                    method: 'subscription.stop'\n                });\n                dispatch();\n            }\n        };\n    }\n    return {\n        close: ()=>{\n            state = 'closed';\n            onClose?.();\n            closeActiveSubscriptions();\n            closeIfNoPending(activeConnection);\n            clearTimeout(connectTimer);\n            connectTimer = null;\n        },\n        request,\n        getConnection () {\n            return activeConnection;\n        }\n    };\n}\nclass TRPCWebSocketClosedError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'TRPCWebSocketClosedError';\n        Object.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\n    }\n}\n/**\n * @see https://trpc.io/docs/client/links/wsLink\n */ function wsLink(opts) {\n    return (runtime)=>{\n        const { client  } = opts;\n        return ({ op  })=>{\n            return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                const { type , path , id , context  } = op;\n                const input = runtime.transformer.serialize(op.input);\n                const unsub = client.request({\n                    type,\n                    path,\n                    input,\n                    id,\n                    context\n                }, {\n                    error (err) {\n                        observer.error(err);\n                        unsub();\n                    },\n                    complete () {\n                        observer.complete();\n                    },\n                    next (message) {\n                        const transformed = (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.t)(message, runtime);\n                        if (!transformed.ok) {\n                            observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(transformed.error));\n                            return;\n                        }\n                        observer.next({\n                            result: transformed.result\n                        });\n                        if (op.type !== 'subscription') {\n                            // if it isn't a subscription we don't care about next response\n                            unsub();\n                            observer.complete();\n                        }\n                    }\n                });\n                return ()=>{\n                    unsub();\n                };\n            });\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/links/wsLink.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ createChain),\n/* harmony export */   s: () => (/* binding */ splitLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n\n\n/** @internal */ function createChain(opts) {\n    return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n        function execute(index = 0, op = opts.op) {\n            const next = opts.links[index];\n            if (!next) {\n                throw new Error('No more links to execute - did you forget to add an ending link?');\n            }\n            const subscription = next({\n                op,\n                next (nextOp) {\n                    const nextObserver = execute(index + 1, nextOp);\n                    return nextObserver;\n                }\n            });\n            return subscription;\n        }\n        const obs$ = execute();\n        return obs$.subscribe(observer);\n    });\n}\n\nfunction asArray(value) {\n    return Array.isArray(value) ? value : [\n        value\n    ];\n}\nfunction splitLink(opts) {\n    return (runtime)=>{\n        const yes = asArray(opts.true).map((link)=>link(runtime));\n        const no = asArray(opts.false).map((link)=>link(runtime));\n        return (props)=>{\n            return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                const links = opts.condition(props.op) ? yes : no;\n                return createChain({\n                    op: props.op,\n                    links\n                }).subscribe(observer);\n            });\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3Qvc3BsaXRMaW5rLTRjNzVmN2JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7O0FBRXJEO0FBQ0EsV0FBVyxtRUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1FQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3Qvc3BsaXRMaW5rLTRjNzVmN2JlLm1qcz83Y2IyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9ic2VydmFibGUgfSBmcm9tICdAdHJwYy9zZXJ2ZXIvb2JzZXJ2YWJsZSc7XG5cbi8qKiBAaW50ZXJuYWwgKi8gZnVuY3Rpb24gY3JlYXRlQ2hhaW4ob3B0cykge1xuICAgIHJldHVybiBvYnNlcnZhYmxlKChvYnNlcnZlcik9PntcbiAgICAgICAgZnVuY3Rpb24gZXhlY3V0ZShpbmRleCA9IDAsIG9wID0gb3B0cy5vcCkge1xuICAgICAgICAgICAgY29uc3QgbmV4dCA9IG9wdHMubGlua3NbaW5kZXhdO1xuICAgICAgICAgICAgaWYgKCFuZXh0KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBtb3JlIGxpbmtzIHRvIGV4ZWN1dGUgLSBkaWQgeW91IGZvcmdldCB0byBhZGQgYW4gZW5kaW5nIGxpbms/Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBuZXh0KHtcbiAgICAgICAgICAgICAgICBvcCxcbiAgICAgICAgICAgICAgICBuZXh0IChuZXh0T3ApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV4dE9ic2VydmVyID0gZXhlY3V0ZShpbmRleCArIDEsIG5leHRPcCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXh0T2JzZXJ2ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gc3Vic2NyaXB0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9icyQgPSBleGVjdXRlKCk7XG4gICAgICAgIHJldHVybiBvYnMkLnN1YnNjcmliZShvYnNlcnZlcik7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGFzQXJyYXkodmFsdWUpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFtcbiAgICAgICAgdmFsdWVcbiAgICBdO1xufVxuZnVuY3Rpb24gc3BsaXRMaW5rKG9wdHMpIHtcbiAgICByZXR1cm4gKHJ1bnRpbWUpPT57XG4gICAgICAgIGNvbnN0IHllcyA9IGFzQXJyYXkob3B0cy50cnVlKS5tYXAoKGxpbmspPT5saW5rKHJ1bnRpbWUpKTtcbiAgICAgICAgY29uc3Qgbm8gPSBhc0FycmF5KG9wdHMuZmFsc2UpLm1hcCgobGluayk9PmxpbmsocnVudGltZSkpO1xuICAgICAgICByZXR1cm4gKHByb3BzKT0+e1xuICAgICAgICAgICAgcmV0dXJuIG9ic2VydmFibGUoKG9ic2VydmVyKT0+e1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpbmtzID0gb3B0cy5jb25kaXRpb24ocHJvcHMub3ApID8geWVzIDogbm87XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNoYWluKHtcbiAgICAgICAgICAgICAgICAgICAgb3A6IHByb3BzLm9wLFxuICAgICAgICAgICAgICAgICAgICBsaW5rc1xuICAgICAgICAgICAgICAgIH0pLnN1YnNjcmliZShvYnNlcnZlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICB9O1xufVxuXG5leHBvcnQgeyBjcmVhdGVDaGFpbiBhcyBjLCBzcGxpdExpbmsgYXMgcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ isObject),\n/* harmony export */   t: () => (/* binding */ transformResult)\n/* harmony export */ });\nfunction isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\n// FIXME:\n// - the generics here are probably unnecessary\n// - the RPC-spec could probably be simplified to combine HTTP + WS\n/** @internal */ function transformResultInner(response, runtime) {\n    if ('error' in response) {\n        const error = runtime.transformer.deserialize(response.error);\n        return {\n            ok: false,\n            error: {\n                ...response,\n                error\n            }\n        };\n    }\n    const result = {\n        ...response.result,\n        ...(!response.result.type || response.result.type === 'data') && {\n            type: 'data',\n            data: runtime.transformer.deserialize(response.result.data)\n        }\n    };\n    return {\n        ok: true,\n        result\n    };\n}\nclass TransformResultError extends Error {\n    constructor(){\n        super('Unable to transform response from server');\n    }\n}\n/**\n * Transforms and validates that the result is a valid TRPCResponse\n * @internal\n */ function transformResult(response, runtime) {\n    let result;\n    try {\n        // Use the data transformers on the JSON-response\n        result = transformResultInner(response, runtime);\n    } catch (err) {\n        throw new TransformResultError();\n    }\n    // check that output of the transformers is a valid TRPCResponse\n    if (!result.ok && (!isObject(result.error.error) || typeof result.error.error.code !== 'number')) {\n        throw new TransformResultError();\n    }\n    if (result.ok && !isObject(result.result)) {\n        throw new TransformResultError();\n    }\n    return result;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvdHJhbnNmb3JtUmVzdWx0LWFjZTg2NGI4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL2NsaWVudC9kaXN0L3RyYW5zZm9ybVJlc3VsdC1hY2U4NjRiOC5tanM/NDY2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgIC8vIGNoZWNrIHRoYXQgdmFsdWUgaXMgb2JqZWN0XG4gICAgcmV0dXJuICEhdmFsdWUgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCc7XG59XG5cbi8vIEZJWE1FOlxuLy8gLSB0aGUgZ2VuZXJpY3MgaGVyZSBhcmUgcHJvYmFibHkgdW5uZWNlc3Nhcnlcbi8vIC0gdGhlIFJQQy1zcGVjIGNvdWxkIHByb2JhYmx5IGJlIHNpbXBsaWZpZWQgdG8gY29tYmluZSBIVFRQICsgV1Ncbi8qKiBAaW50ZXJuYWwgKi8gZnVuY3Rpb24gdHJhbnNmb3JtUmVzdWx0SW5uZXIocmVzcG9uc2UsIHJ1bnRpbWUpIHtcbiAgICBpZiAoJ2Vycm9yJyBpbiByZXNwb25zZSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IHJ1bnRpbWUudHJhbnNmb3JtZXIuZGVzZXJpYWxpemUocmVzcG9uc2UuZXJyb3IpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb2s6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgICAgICAuLi5yZXNwb25zZSxcbiAgICAgICAgICAgICAgICBlcnJvclxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgIC4uLnJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgLi4uKCFyZXNwb25zZS5yZXN1bHQudHlwZSB8fCByZXNwb25zZS5yZXN1bHQudHlwZSA9PT0gJ2RhdGEnKSAmJiB7XG4gICAgICAgICAgICB0eXBlOiAnZGF0YScsXG4gICAgICAgICAgICBkYXRhOiBydW50aW1lLnRyYW5zZm9ybWVyLmRlc2VyaWFsaXplKHJlc3BvbnNlLnJlc3VsdC5kYXRhKVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvazogdHJ1ZSxcbiAgICAgICAgcmVzdWx0XG4gICAgfTtcbn1cbmNsYXNzIFRyYW5zZm9ybVJlc3VsdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKCdVbmFibGUgdG8gdHJhbnNmb3JtIHJlc3BvbnNlIGZyb20gc2VydmVyJyk7XG4gICAgfVxufVxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFuZCB2YWxpZGF0ZXMgdGhhdCB0aGUgcmVzdWx0IGlzIGEgdmFsaWQgVFJQQ1Jlc3BvbnNlXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiB0cmFuc2Zvcm1SZXN1bHQocmVzcG9uc2UsIHJ1bnRpbWUpIHtcbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIC8vIFVzZSB0aGUgZGF0YSB0cmFuc2Zvcm1lcnMgb24gdGhlIEpTT04tcmVzcG9uc2VcbiAgICAgICAgcmVzdWx0ID0gdHJhbnNmb3JtUmVzdWx0SW5uZXIocmVzcG9uc2UsIHJ1bnRpbWUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICB0aHJvdyBuZXcgVHJhbnNmb3JtUmVzdWx0RXJyb3IoKTtcbiAgICB9XG4gICAgLy8gY2hlY2sgdGhhdCBvdXRwdXQgb2YgdGhlIHRyYW5zZm9ybWVycyBpcyBhIHZhbGlkIFRSUENSZXNwb25zZVxuICAgIGlmICghcmVzdWx0Lm9rICYmICghaXNPYmplY3QocmVzdWx0LmVycm9yLmVycm9yKSB8fCB0eXBlb2YgcmVzdWx0LmVycm9yLmVycm9yLmNvZGUgIT09ICdudW1iZXInKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHJhbnNmb3JtUmVzdWx0RXJyb3IoKTtcbiAgICB9XG4gICAgaWYgKHJlc3VsdC5vayAmJiAhaXNPYmplY3QocmVzdWx0LnJlc3VsdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRyYW5zZm9ybVJlc3VsdEVycm9yKCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCB7IGlzT2JqZWN0IGFzIGksIHRyYW5zZm9ybVJlc3VsdCBhcyB0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCContext),\n/* harmony export */   a: () => (/* binding */ createReactQueryUtilsProxy),\n/* harmony export */   b: () => (/* binding */ createReactProxyDecoration),\n/* harmony export */   c: () => (/* binding */ createHooksInternal),\n/* harmony export */   d: () => (/* binding */ getClientArgs),\n/* harmony export */   e: () => (/* binding */ createUseQueriesProxy),\n/* harmony export */   f: () => (/* binding */ createRootHooks),\n/* harmony export */   g: () => (/* binding */ getQueryKey),\n/* harmony export */   h: () => (/* binding */ contextProps)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var _getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getArrayQueryKey-86134f8b.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs\");\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/./node_modules/@trpc/client/dist/index.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useQuery.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useMutation.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useQueries.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n\n\n\n/**\n * We treat `undefined` as an input the same as omitting an `input`\n * https://github.com/trpc/trpc/issues/2290\n */ function getQueryKeyInternal(path, input) {\n    if (path.length) return input === undefined ? [\n        path\n    ] : [\n        path,\n        input\n    ];\n    return [];\n}\n/**\n * Method to extract the query key for a procedure\n * @param procedureOrRouter - procedure or AnyRouter\n * @param input - input to procedureOrRouter\n * @param type - defaults to `any`\n * @link https://trpc.io/docs/getQueryKey\n */ function getQueryKey(..._params) {\n    const [procedureOrRouter, input, type] = _params;\n    // @ts-expect-error - we don't expose _def on the type layer\n    const path = procedureOrRouter._def().path;\n    const dotPath = path.join('.');\n    const queryKey = (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(getQueryKeyInternal(dotPath, input), type ?? 'any');\n    return queryKey;\n}\n\n/**\n * Create proxy for decorating procedures\n * @internal\n */ function createReactProxyDecoration(name, hooks) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)((opts)=>{\n        const args = opts.args;\n        const pathCopy = [\n            name,\n            ...opts.path\n        ];\n        // The last arg is for instance `.useMutation` or `.useQuery()`\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const lastArg = pathCopy.pop();\n        // The `path` ends up being something like `post.byId`\n        const path = pathCopy.join('.');\n        if (lastArg === 'useMutation') {\n            return hooks[lastArg](path, ...args);\n        }\n        const [input, ...rest] = args;\n        const queryKey = getQueryKeyInternal(path, input);\n        // Expose queryKey helper\n        if (lastArg === 'getQueryKey') {\n            return (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, rest[0] ?? 'any');\n        }\n        if (lastArg === '_def') {\n            return {\n                path: pathCopy\n            };\n        }\n        if (lastArg.startsWith('useSuspense')) {\n            const opts1 = rest[0] || {};\n            const fn = lastArg === 'useSuspenseQuery' ? 'useQuery' : 'useInfiniteQuery';\n            const result = hooks[fn](queryKey, {\n                ...opts1,\n                suspense: true,\n                enabled: true\n            });\n            return [\n                result.data,\n                result\n            ];\n        }\n        return hooks[lastArg](queryKey, ...rest);\n    });\n}\n\nconst contextProps = [\n    'client',\n    'ssrContext',\n    'ssrState',\n    'abortOnUnmount'\n];\nconst TRPCContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\n\n/**\n * @internal\n */ function createReactQueryUtilsProxy(context) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createFlatProxy)((key)=>{\n        const contextName = key;\n        if (contextName === 'client') {\n            return (0,_trpc_client__WEBPACK_IMPORTED_MODULE_2__.createTRPCClientProxy)(context.client);\n        }\n        if (contextProps.includes(contextName)) {\n            return context[contextName];\n        }\n        return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)(({ path , args  })=>{\n            const pathCopy = [\n                key,\n                ...path\n            ];\n            const utilName = pathCopy.pop();\n            const fullPath = pathCopy.join('.');\n            const getOpts = (name)=>{\n                if ([\n                    'setData',\n                    'setInfiniteData'\n                ].includes(name)) {\n                    const [input, updater, ...rest] = args;\n                    const queryKey = getQueryKeyInternal(fullPath, input);\n                    return {\n                        queryKey,\n                        updater,\n                        rest\n                    };\n                }\n                const [input1, ...rest1] = args;\n                const queryKey1 = getQueryKeyInternal(fullPath, input1);\n                return {\n                    queryKey: queryKey1,\n                    rest: rest1\n                };\n            };\n            const { queryKey , rest , updater  } = getOpts(utilName);\n            const contextMap = {\n                fetch: ()=>context.fetchQuery(queryKey, ...rest),\n                fetchInfinite: ()=>context.fetchInfiniteQuery(queryKey, ...rest),\n                prefetch: ()=>context.prefetchQuery(queryKey, ...rest),\n                prefetchInfinite: ()=>context.prefetchInfiniteQuery(queryKey, ...rest),\n                ensureData: ()=>context.ensureQueryData(queryKey, ...rest),\n                invalidate: ()=>context.invalidateQueries(queryKey, ...rest),\n                reset: ()=>context.resetQueries(queryKey, ...rest),\n                refetch: ()=>context.refetchQueries(queryKey, ...rest),\n                cancel: ()=>context.cancelQuery(queryKey, ...rest),\n                setData: ()=>{\n                    context.setQueryData(queryKey, updater, ...rest);\n                },\n                setInfiniteData: ()=>{\n                    context.setInfiniteQueryData(queryKey, updater, ...rest);\n                },\n                getData: ()=>context.getQueryData(queryKey),\n                getInfiniteData: ()=>context.getInfiniteQueryData(queryKey)\n            };\n            return contextMap[utilName]();\n        });\n    });\n}\n\n/**\n * Create proxy for `useQueries` options\n * @internal\n */ function createUseQueriesProxy(client) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)((opts)=>{\n        const path = opts.path.join('.');\n        const [input, _opts] = opts.args;\n        const queryKey = getQueryKeyInternal(path, input);\n        const options = {\n            queryKey,\n            queryFn: ()=>{\n                return client.query(path, input, _opts?.trpc);\n            },\n            ..._opts\n        };\n        return options;\n    });\n}\n\nfunction getClientArgs(pathAndInput, opts) {\n    const [path, input] = pathAndInput;\n    return [\n        path,\n        input,\n        opts?.trpc\n    ];\n}\n\n/**\n * Makes a stable reference of the `trpc` prop\n */ function useHookResult(value) {\n    const { path  } = value;\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>({\n            path\n        }), [\n        path\n    ]);\n}\n\n/**\n * @internal\n */ function createRootHooks(config) {\n    const mutationSuccessOverride = (config?.overrides ?? config?.unstable_overrides)?.useMutation?.onSuccess ?? ((options)=>options.originalFn());\n    const Context = config?.context ?? TRPCContext;\n    const ReactQueryContext = config?.reactQueryContext;\n    const createClient = (opts)=>{\n        return (0,_trpc_client__WEBPACK_IMPORTED_MODULE_2__.createTRPCClient)(opts);\n    };\n    const TRPCProvider = (props)=>{\n        const { abortOnUnmount =false , client , queryClient , ssrContext  } = props;\n        const [ssrState, setSSRState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(props.ssrState ?? false);\n        (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n            // Only updating state to `mounted` if we are using SSR.\n            // This makes it so we don't have an unnecessary re-render when opting out of SSR.\n            setSSRState((state)=>state ? 'mounted' : false);\n        }, []);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(Context.Provider, {\n            value: {\n                abortOnUnmount,\n                queryClient,\n                client,\n                ssrContext: ssrContext ?? null,\n                ssrState,\n                fetchQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.fetchQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n                        queryFn: ()=>client.query(...getClientArgs(pathAndInput, opts))\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                fetchInfiniteQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.fetchInfiniteQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'),\n                        queryFn: ({ pageParam  })=>{\n                            const [path, input] = pathAndInput;\n                            const actualInput = {\n                                ...input,\n                                cursor: pageParam\n                            };\n                            return client.query(...getClientArgs([\n                                path,\n                                actualInput\n                            ], opts));\n                        }\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                prefetchQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.prefetchQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n                        queryFn: ()=>client.query(...getClientArgs(pathAndInput, opts))\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                prefetchInfiniteQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.prefetchInfiniteQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'),\n                        queryFn: ({ pageParam  })=>{\n                            const [path, input] = pathAndInput;\n                            const actualInput = {\n                                ...input,\n                                cursor: pageParam\n                            };\n                            return client.query(...getClientArgs([\n                                path,\n                                actualInput\n                            ], opts));\n                        }\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                ensureQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.ensureQueryData({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n                        queryFn: ()=>client.query(...getClientArgs(pathAndInput, opts))\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                invalidateQueries: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((queryKey, filters, options)=>{\n                    return queryClient.invalidateQueries({\n                        ...filters,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'any')\n                    }, options);\n                }, [\n                    queryClient\n                ]),\n                resetQueries: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, filters, options] = args;\n                    return queryClient.resetQueries({\n                        ...filters,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'any')\n                    }, options);\n                }, [\n                    queryClient\n                ]),\n                refetchQueries: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, filters, options] = args;\n                    return queryClient.refetchQueries({\n                        ...filters,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'any')\n                    }, options);\n                }, [\n                    queryClient\n                ]),\n                cancelQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput)=>{\n                    return queryClient.cancelQueries({\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'any')\n                    });\n                }, [\n                    queryClient\n                ]),\n                setQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.setQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'query'), ...rest);\n                }, [\n                    queryClient\n                ]),\n                getQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.getQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'query'), ...rest);\n                }, [\n                    queryClient\n                ]),\n                setInfiniteQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.setQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'infinite'), ...rest);\n                }, [\n                    queryClient\n                ]),\n                getInfiniteQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.getQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'infinite'), ...rest);\n                }, [\n                    queryClient\n                ])\n            }\n        }, props.children);\n    };\n    function useContext() {\n        return react__WEBPACK_IMPORTED_MODULE_3__.useContext(Context);\n    }\n    /**\n   * Hack to make sure errors return `status`='error` when doing SSR\n   * @link https://github.com/trpc/trpc/pull/1645\n   */ function useSSRQueryOptionsIfNeeded(pathAndInput, type, opts) {\n        const { queryClient , ssrState  } = useContext();\n        return ssrState && ssrState !== 'mounted' && queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, type))?.state.status === 'error' ? {\n            retryOnMount: false,\n            ...opts\n        } : opts;\n    }\n    function useQuery$1(// FIXME path should be a tuple in next major\n    pathAndInput, opts) {\n        const context = useContext();\n        if (!context) {\n            throw new Error('Unable to retrieve application context. Did you forget to wrap your App inside `withTRPC` HoC?');\n        }\n        const { abortOnUnmount , client , ssrState , queryClient , prefetchQuery  } = context;\n        const defaultOpts = queryClient.getQueryDefaults((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'));\n        if (typeof window === 'undefined' && ssrState === 'prepass' && opts?.trpc?.ssr !== false && (opts?.enabled ?? defaultOpts?.enabled) !== false && !queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'))) {\n            void prefetchQuery(pathAndInput, opts);\n        }\n        const ssrOpts = useSSRQueryOptionsIfNeeded(pathAndInput, 'query', {\n            ...defaultOpts,\n            ...opts\n        });\n        const shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? config?.abortOnUnmount ?? abortOnUnmount;\n        const hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.useQuery)({\n            ...ssrOpts,\n            queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n            queryFn: (queryFunctionContext)=>{\n                const actualOpts = {\n                    ...ssrOpts,\n                    trpc: {\n                        ...ssrOpts?.trpc,\n                        ...shouldAbortOnUnmount ? {\n                            signal: queryFunctionContext.signal\n                        } : {}\n                    }\n                };\n                return client.query(...getClientArgs(pathAndInput, actualOpts));\n            },\n            context: ReactQueryContext\n        });\n        hook.trpc = useHookResult({\n            path: pathAndInput[0]\n        });\n        return hook;\n    }\n    function useMutation$1(// FIXME: this should only be a tuple path in next major\n    path, opts) {\n        const { client  } = useContext();\n        const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.useQueryClient)({\n            context: ReactQueryContext\n        });\n        const actualPath = Array.isArray(path) ? path[0] : path;\n        const defaultOpts = queryClient.getMutationDefaults([\n            actualPath.split('.')\n        ]);\n        const hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__.useMutation)({\n            ...opts,\n            mutationKey: [\n                actualPath.split('.')\n            ],\n            mutationFn: (input)=>{\n                return client.mutation(...getClientArgs([\n                    actualPath,\n                    input\n                ], opts));\n            },\n            context: ReactQueryContext,\n            onSuccess (...args) {\n                const originalFn = ()=>opts?.onSuccess?.(...args) ?? defaultOpts?.onSuccess?.(...args);\n                return mutationSuccessOverride({\n                    originalFn,\n                    queryClient,\n                    meta: opts?.meta ?? defaultOpts?.meta ?? {}\n                });\n            }\n        });\n        hook.trpc = useHookResult({\n            path: actualPath\n        });\n        return hook;\n    }\n    /* istanbul ignore next -- @preserve */ function useSubscription(pathAndInput, opts) {\n        const enabled = opts?.enabled ?? true;\n        const queryKey = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.hashQueryKey)(pathAndInput);\n        const { client  } = useContext();\n        const optsRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(opts);\n        optsRef.current = opts;\n        (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n            if (!enabled) {\n                return;\n            }\n            const [path, input] = pathAndInput;\n            let isStopped = false;\n            const subscription = client.subscription(path, input ?? undefined, {\n                onStarted: ()=>{\n                    if (!isStopped) {\n                        optsRef.current.onStarted?.();\n                    }\n                },\n                onData: (data)=>{\n                    if (!isStopped) {\n                        // FIXME this shouldn't be needed as both should be `unknown` in next major\n                        optsRef.current.onData(data);\n                    }\n                },\n                onError: (err)=>{\n                    if (!isStopped) {\n                        optsRef.current.onError?.(err);\n                    }\n                }\n            });\n            return ()=>{\n                isStopped = true;\n                subscription.unsubscribe();\n            };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            queryKey,\n            enabled\n        ]);\n    }\n    function useInfiniteQuery$1(pathAndInput, opts) {\n        const [path, input] = pathAndInput;\n        const { client , ssrState , prefetchInfiniteQuery , queryClient , abortOnUnmount ,  } = useContext();\n        const defaultOpts = queryClient.getQueryDefaults((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'));\n        if (typeof window === 'undefined' && ssrState === 'prepass' && opts?.trpc?.ssr !== false && (opts?.enabled ?? defaultOpts?.enabled) !== false && !queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'))) {\n            void prefetchInfiniteQuery(pathAndInput, {\n                ...defaultOpts,\n                ...opts\n            });\n        }\n        const ssrOpts = useSSRQueryOptionsIfNeeded(pathAndInput, 'infinite', {\n            ...defaultOpts,\n            ...opts\n        });\n        // request option should take priority over global\n        const shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? abortOnUnmount;\n        const hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__.useInfiniteQuery)({\n            ...ssrOpts,\n            queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'),\n            queryFn: (queryFunctionContext)=>{\n                const actualOpts = {\n                    ...ssrOpts,\n                    trpc: {\n                        ...ssrOpts?.trpc,\n                        ...shouldAbortOnUnmount ? {\n                            signal: queryFunctionContext.signal\n                        } : {}\n                    }\n                };\n                const actualInput = {\n                    ...input ?? {},\n                    cursor: queryFunctionContext.pageParam ?? opts?.initialCursor\n                };\n                // FIXME as any shouldn't be needed as client should be untyped too\n                return client.query(...getClientArgs([\n                    path,\n                    actualInput\n                ], actualOpts));\n            },\n            context: ReactQueryContext\n        });\n        hook.trpc = useHookResult({\n            path\n        });\n        return hook;\n    }\n    const useQueries$1 = (queriesCallback, context)=>{\n        const { ssrState , queryClient , prefetchQuery , client  } = useContext();\n        const proxy = createUseQueriesProxy(client);\n        const queries = queriesCallback(proxy);\n        if (typeof window === 'undefined' && ssrState === 'prepass') {\n            for (const query of queries){\n                const queryOption = query;\n                if (queryOption.trpc?.ssr !== false && !queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryOption.queryKey, 'query'))) {\n                    void prefetchQuery(queryOption.queryKey, queryOption);\n                }\n            }\n        }\n        return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.useQueries)({\n            queries: queries.map((query)=>({\n                    ...query,\n                    queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(query.queryKey, 'query')\n                })),\n            context\n        });\n    };\n    const useDehydratedState = (client, trpcState)=>{\n        const transformed = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>{\n            if (!trpcState) {\n                return trpcState;\n            }\n            return client.runtime.transformer.deserialize(trpcState);\n        }, [\n            trpcState,\n            client\n        ]);\n        return transformed;\n    };\n    return {\n        Provider: TRPCProvider,\n        createClient,\n        useContext,\n        useUtils: useContext,\n        useQuery: useQuery$1,\n        useQueries: useQueries$1,\n        useMutation: useMutation$1,\n        useSubscription,\n        useDehydratedState,\n        useInfiniteQuery: useInfiniteQuery$1\n    };\n}\n\n/**\n * Create strongly typed react hooks\n * @internal\n * @deprecated\n */ function createHooksInternal(config) {\n    return createRootHooks(config);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getArrayQueryKey)\n/* harmony export */ });\n/**\n * To allow easy interactions with groups of related queries, such as\n * invalidating all queries of a router, we use an array as the path when\n * storing in tanstack query. This function converts from the `.` separated\n * path passed around internally by both the legacy and proxy implementation.\n * https://github.com/trpc/trpc/issues/2611\n **/ function getArrayQueryKey(queryKey, type) {\n    const queryKeyArrayed = Array.isArray(queryKey) ? queryKey : [\n        queryKey\n    ];\n    const [path, input] = queryKeyArrayed;\n    const arrayPath = typeof path !== 'string' || path === '' ? [] : path.split('.');\n    // Construct a query key that is easy to destructure and flexible for\n    // partial selecting etc.\n    // https://github.com/trpc/trpc/issues/3128\n    if (!input && (!type || type === 'any')) // for `utils.invalidate()` to match all queries (including vanilla react-query)\n    // we don't want nested array if path is empty, i.e. `[]` instead of `[[]]`\n    return arrayPath.length ? [\n        arrayPath\n    ] : [];\n    return [\n        arrayPath,\n        {\n            ...typeof input !== 'undefined' && {\n                input: input\n            },\n            ...type && type !== 'any' && {\n                type: type\n            }\n        }\n    ];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvcmVhY3QtcXVlcnkvZGlzdC9nZXRBcnJheVF1ZXJ5S2V5LTg2MTM0ZjhiLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3JlYWN0LXF1ZXJ5L2Rpc3QvZ2V0QXJyYXlRdWVyeUtleS04NjEzNGY4Yi5tanM/ZGMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRvIGFsbG93IGVhc3kgaW50ZXJhY3Rpb25zIHdpdGggZ3JvdXBzIG9mIHJlbGF0ZWQgcXVlcmllcywgc3VjaCBhc1xuICogaW52YWxpZGF0aW5nIGFsbCBxdWVyaWVzIG9mIGEgcm91dGVyLCB3ZSB1c2UgYW4gYXJyYXkgYXMgdGhlIHBhdGggd2hlblxuICogc3RvcmluZyBpbiB0YW5zdGFjayBxdWVyeS4gVGhpcyBmdW5jdGlvbiBjb252ZXJ0cyBmcm9tIHRoZSBgLmAgc2VwYXJhdGVkXG4gKiBwYXRoIHBhc3NlZCBhcm91bmQgaW50ZXJuYWxseSBieSBib3RoIHRoZSBsZWdhY3kgYW5kIHByb3h5IGltcGxlbWVudGF0aW9uLlxuICogaHR0cHM6Ly9naXRodWIuY29tL3RycGMvdHJwYy9pc3N1ZXMvMjYxMVxuICoqLyBmdW5jdGlvbiBnZXRBcnJheVF1ZXJ5S2V5KHF1ZXJ5S2V5LCB0eXBlKSB7XG4gICAgY29uc3QgcXVlcnlLZXlBcnJheWVkID0gQXJyYXkuaXNBcnJheShxdWVyeUtleSkgPyBxdWVyeUtleSA6IFtcbiAgICAgICAgcXVlcnlLZXlcbiAgICBdO1xuICAgIGNvbnN0IFtwYXRoLCBpbnB1dF0gPSBxdWVyeUtleUFycmF5ZWQ7XG4gICAgY29uc3QgYXJyYXlQYXRoID0gdHlwZW9mIHBhdGggIT09ICdzdHJpbmcnIHx8IHBhdGggPT09ICcnID8gW10gOiBwYXRoLnNwbGl0KCcuJyk7XG4gICAgLy8gQ29uc3RydWN0IGEgcXVlcnkga2V5IHRoYXQgaXMgZWFzeSB0byBkZXN0cnVjdHVyZSBhbmQgZmxleGlibGUgZm9yXG4gICAgLy8gcGFydGlhbCBzZWxlY3RpbmcgZXRjLlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90cnBjL3RycGMvaXNzdWVzLzMxMjhcbiAgICBpZiAoIWlucHV0ICYmICghdHlwZSB8fCB0eXBlID09PSAnYW55JykpIC8vIGZvciBgdXRpbHMuaW52YWxpZGF0ZSgpYCB0byBtYXRjaCBhbGwgcXVlcmllcyAoaW5jbHVkaW5nIHZhbmlsbGEgcmVhY3QtcXVlcnkpXG4gICAgLy8gd2UgZG9uJ3Qgd2FudCBuZXN0ZWQgYXJyYXkgaWYgcGF0aCBpcyBlbXB0eSwgaS5lLiBgW11gIGluc3RlYWQgb2YgYFtbXV1gXG4gICAgcmV0dXJuIGFycmF5UGF0aC5sZW5ndGggPyBbXG4gICAgICAgIGFycmF5UGF0aFxuICAgIF0gOiBbXTtcbiAgICByZXR1cm4gW1xuICAgICAgICBhcnJheVBhdGgsXG4gICAgICAgIHtcbiAgICAgICAgICAgIC4uLnR5cGVvZiBpbnB1dCAhPT0gJ3VuZGVmaW5lZCcgJiYge1xuICAgICAgICAgICAgICAgIGlucHV0OiBpbnB1dFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC4uLnR5cGUgJiYgdHlwZSAhPT0gJ2FueScgJiYge1xuICAgICAgICAgICAgICAgIHR5cGU6IHR5cGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF07XG59XG5cbmV4cG9ydCB7IGdldEFycmF5UXVlcnlLZXkgYXMgZyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.TRPCClientError),\n/* harmony export */   TRPCUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.TRPCUntypedClient),\n/* harmony export */   clientCallTypeToProcedureType: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.clientCallTypeToProcedureType),\n/* harmony export */   createReactQueryHooks: () => (/* binding */ createReactQueryHooks),\n/* harmony export */   createTRPCClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCClient),\n/* harmony export */   createTRPCClientProxy: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCClientProxy),\n/* harmony export */   createTRPCProxyClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCProxyClient),\n/* harmony export */   createTRPCReact: () => (/* binding */ createTRPCReact),\n/* harmony export */   createTRPCUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCUntypedClient),\n/* harmony export */   createWSClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createWSClient),\n/* harmony export */   experimental_formDataLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.experimental_formDataLink),\n/* harmony export */   getFetch: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.getFetch),\n/* harmony export */   getQueryKey: () => (/* reexport safe */ _createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   getUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.getUntypedClient),\n/* harmony export */   httpBatchLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpBatchLink),\n/* harmony export */   httpLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpLink),\n/* harmony export */   httpLinkFactory: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpLinkFactory),\n/* harmony export */   loggerLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.loggerLink),\n/* harmony export */   splitLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.splitLink),\n/* harmony export */   unstable_httpBatchStreamLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.unstable_httpBatchStreamLink),\n/* harmony export */   wsLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.wsLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/./node_modules/@trpc/client/dist/index.mjs\");\n/* harmony import */ var _createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createHooksInternal-063195fc.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getArrayQueryKey-86134f8b.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs\");\n\n\n\n\n\n\n\n\n/**\n * @internal\n */ function createHooksInternalProxy(trpc) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_2__.createFlatProxy)((key)=>{\n        if (key === 'useContext' || key === 'useUtils') {\n            return ()=>{\n                const context = trpc.useUtils();\n                // create a stable reference of the utils context\n                return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>{\n                    return (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(context);\n                }, [\n                    context\n                ]);\n            };\n        }\n        if (trpc.hasOwnProperty(key)) {\n            return trpc[key];\n        }\n        return (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(key, trpc);\n    });\n}\nfunction createTRPCReact(opts) {\n    const hooks = (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.c)(opts);\n    const proxy = createHooksInternalProxy(hooks);\n    return proxy;\n}\n\n// interop:\n/**\n * @deprecated use `createTRPCReact` instead\n */ function createReactQueryHooks(opts) {\n    const trpc = (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.c)(opts);\n    const proxy = createHooksInternalProxy(trpc);\n    return {\n        ...trpc,\n        proxy\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvcmVhY3QtcXVlcnkvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDbUg7QUFDMUU7QUFDaEI7QUFDdEI7QUFDRDtBQUNVOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLG9FQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhDQUFPO0FBQzlCLDJCQUEyQixvRUFBMEI7QUFDckQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvRUFBMEI7QUFDekMsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQkFBa0Isb0VBQW1CO0FBQ3JDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBbUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrRCIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3JlYWN0LXF1ZXJ5L2Rpc3QvaW5kZXgubWpzP2E4YjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnQHRycGMvY2xpZW50JztcbmltcG9ydCB7IGMgYXMgY3JlYXRlSG9va3NJbnRlcm5hbCwgYSBhcyBjcmVhdGVSZWFjdFF1ZXJ5VXRpbHNQcm94eSwgYiBhcyBjcmVhdGVSZWFjdFByb3h5RGVjb3JhdGlvbiB9IGZyb20gJy4vY3JlYXRlSG9va3NJbnRlcm5hbC0wNjMxOTVmYy5tanMnO1xuZXhwb3J0IHsgZyBhcyBnZXRRdWVyeUtleSB9IGZyb20gJy4vY3JlYXRlSG9va3NJbnRlcm5hbC0wNjMxOTVmYy5tanMnO1xuaW1wb3J0IHsgY3JlYXRlRmxhdFByb3h5IH0gZnJvbSAnQHRycGMvc2VydmVyL3NoYXJlZCc7XG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0ICdAdGFuc3RhY2svcmVhY3QtcXVlcnknO1xuaW1wb3J0ICcuL2dldEFycmF5UXVlcnlLZXktODYxMzRmOGIubWpzJztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiBjcmVhdGVIb29rc0ludGVybmFsUHJveHkodHJwYykge1xuICAgIHJldHVybiBjcmVhdGVGbGF0UHJveHkoKGtleSk9PntcbiAgICAgICAgaWYgKGtleSA9PT0gJ3VzZUNvbnRleHQnIHx8IGtleSA9PT0gJ3VzZVV0aWxzJykge1xuICAgICAgICAgICAgcmV0dXJuICgpPT57XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGV4dCA9IHRycGMudXNlVXRpbHMoKTtcbiAgICAgICAgICAgICAgICAvLyBjcmVhdGUgYSBzdGFibGUgcmVmZXJlbmNlIG9mIHRoZSB1dGlscyBjb250ZXh0XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVzZU1lbW8oKCk9PntcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVJlYWN0UXVlcnlVdGlsc1Byb3h5KGNvbnRleHQpO1xuICAgICAgICAgICAgICAgIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJwYy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJwY1trZXldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjcmVhdGVSZWFjdFByb3h5RGVjb3JhdGlvbihrZXksIHRycGMpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlVFJQQ1JlYWN0KG9wdHMpIHtcbiAgICBjb25zdCBob29rcyA9IGNyZWF0ZUhvb2tzSW50ZXJuYWwob3B0cyk7XG4gICAgY29uc3QgcHJveHkgPSBjcmVhdGVIb29rc0ludGVybmFsUHJveHkoaG9va3MpO1xuICAgIHJldHVybiBwcm94eTtcbn1cblxuLy8gaW50ZXJvcDpcbi8qKlxuICogQGRlcHJlY2F0ZWQgdXNlIGBjcmVhdGVUUlBDUmVhY3RgIGluc3RlYWRcbiAqLyBmdW5jdGlvbiBjcmVhdGVSZWFjdFF1ZXJ5SG9va3Mob3B0cykge1xuICAgIGNvbnN0IHRycGMgPSBjcmVhdGVIb29rc0ludGVybmFsKG9wdHMpO1xuICAgIGNvbnN0IHByb3h5ID0gY3JlYXRlSG9va3NJbnRlcm5hbFByb3h5KHRycGMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnRycGMsXG4gICAgICAgIHByb3h5XG4gICAgfTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlUmVhY3RRdWVyeUhvb2tzLCBjcmVhdGVUUlBDUmVhY3QgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/codes-c924c3db.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_KEY),\n/* harmony export */   a: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   i: () => (/* binding */ invert)\n/* harmony export */ });\n/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtYzkyNGMzZGIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRiIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvZGVzLWM5MjRjM2RiLm1qcz8zYzYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gaW52ZXJ0KG9iaikge1xuICAgIGNvbnN0IG5ld09iaiA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgZm9yKGNvbnN0IGtleSBpbiBvYmope1xuICAgICAgICBjb25zdCB2ID0gb2JqW2tleV07XG4gICAgICAgIG5ld09ialt2XSA9IGtleTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld09iajtcbn1cblxuLy8gcmVmZXJlbmNlOiBodHRwczovL3d3dy5qc29ucnBjLm9yZy9zcGVjaWZpY2F0aW9uXG4vKipcbiAqIEpTT04tUlBDIDIuMCBFcnJvciBjb2Rlc1xuICpcbiAqIGAtMzIwMDBgIHRvIGAtMzIwOTlgIGFyZSByZXNlcnZlZCBmb3IgaW1wbGVtZW50YXRpb24tZGVmaW5lZCBzZXJ2ZXItZXJyb3JzLlxuICogRm9yIHRSUEMgd2UncmUgY29weWluZyB0aGUgbGFzdCBkaWdpdHMgb2YgSFRUUCA0WFggZXJyb3JzLlxuICovIGNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfS0VZID0ge1xuICAgIC8qKlxuICAgKiBJbnZhbGlkIEpTT04gd2FzIHJlY2VpdmVkIGJ5IHRoZSBzZXJ2ZXIuXG4gICAqIEFuIGVycm9yIG9jY3VycmVkIG9uIHRoZSBzZXJ2ZXIgd2hpbGUgcGFyc2luZyB0aGUgSlNPTiB0ZXh0LlxuICAgKi8gUEFSU0VfRVJST1I6IC0zMjcwMCxcbiAgICAvKipcbiAgICogVGhlIEpTT04gc2VudCBpcyBub3QgYSB2YWxpZCBSZXF1ZXN0IG9iamVjdC5cbiAgICovIEJBRF9SRVFVRVNUOiAtMzI2MDAsXG4gICAgLy8gSW50ZXJuYWwgSlNPTi1SUEMgZXJyb3JcbiAgICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IC0zMjYwMyxcbiAgICBOT1RfSU1QTEVNRU5URUQ6IC0zMjYwMyxcbiAgICAvLyBJbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyBlcnJvcnNcbiAgICBVTkFVVEhPUklaRUQ6IC0zMjAwMSxcbiAgICBGT1JCSURERU46IC0zMjAwMyxcbiAgICBOT1RfRk9VTkQ6IC0zMjAwNCxcbiAgICBNRVRIT0RfTk9UX1NVUFBPUlRFRDogLTMyMDA1LFxuICAgIFRJTUVPVVQ6IC0zMjAwOCxcbiAgICBDT05GTElDVDogLTMyMDA5LFxuICAgIFBSRUNPTkRJVElPTl9GQUlMRUQ6IC0zMjAxMixcbiAgICBQQVlMT0FEX1RPT19MQVJHRTogLTMyMDEzLFxuICAgIFVOUFJPQ0VTU0FCTEVfQ09OVEVOVDogLTMyMDIyLFxuICAgIFRPT19NQU5ZX1JFUVVFU1RTOiAtMzIwMjksXG4gICAgQ0xJRU5UX0NMT1NFRF9SRVFVRVNUOiAtMzIwOTlcbn07XG5jb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiA9IGludmVydChUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSk7XG5cbmV4cG9ydCB7IFRSUENfRVJST1JfQ09ERVNfQllfS0VZIGFzIFQsIFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSIGFzIGEsIGludmVydCBhcyBpIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getCauseFromUnknown)\n/* harmony export */ });\n/**\n * @internal\n */ function isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\nclass UnknownCauseError extends Error {\n}\nfunction getCauseFromUnknown(cause) {\n    if (cause instanceof Error) {\n        return cause;\n    }\n    const type = typeof cause;\n    if (type === 'undefined' || type === 'function' || cause === null) {\n        return undefined;\n    }\n    // Primitive types just get wrapped in an error\n    if (type !== 'object') {\n        return new Error(String(cause));\n    }\n    // If it's an object, we'll create a synthetic error\n    if (isObject(cause)) {\n        const err = new UnknownCauseError();\n        for(const key in cause){\n            err[key] = cause[key];\n        }\n        return err;\n    }\n    return undefined;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanM/NDE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gICAgLy8gY2hlY2sgdGhhdCB2YWx1ZSBpcyBvYmplY3RcbiAgICByZXR1cm4gISF2YWx1ZSAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jztcbn1cblxuY2xhc3MgVW5rbm93bkNhdXNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5mdW5jdGlvbiBnZXRDYXVzZUZyb21Vbmtub3duKGNhdXNlKSB7XG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGNhdXNlO1xuICAgIH1cbiAgICBjb25zdCB0eXBlID0gdHlwZW9mIGNhdXNlO1xuICAgIGlmICh0eXBlID09PSAndW5kZWZpbmVkJyB8fCB0eXBlID09PSAnZnVuY3Rpb24nIHx8IGNhdXNlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIFByaW1pdGl2ZSB0eXBlcyBqdXN0IGdldCB3cmFwcGVkIGluIGFuIGVycm9yXG4gICAgaWYgKHR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoU3RyaW5nKGNhdXNlKSk7XG4gICAgfVxuICAgIC8vIElmIGl0J3MgYW4gb2JqZWN0LCB3ZSdsbCBjcmVhdGUgYSBzeW50aGV0aWMgZXJyb3JcbiAgICBpZiAoaXNPYmplY3QoY2F1c2UpKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBVbmtub3duQ2F1c2VFcnJvcigpO1xuICAgICAgICBmb3IoY29uc3Qga2V5IGluIGNhdXNlKXtcbiAgICAgICAgICAgIGVycltrZXldID0gY2F1c2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgeyBnZXRDYXVzZUZyb21Vbmtub3duIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/index-f91d720c.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   a: () => (/* binding */ createRecursiveProxy),\n/* harmony export */   b: () => (/* binding */ getHTTPStatusCode),\n/* harmony export */   c: () => (/* binding */ createFlatProxy),\n/* harmony export */   g: () => (/* binding */ getHTTPStatusCodeFromError)\n/* harmony export */ });\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\nconst TRPC_ERROR_CODES_BY_NUMBER = (0,_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.i)(_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.T);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgtZjkxZDcyMGMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRjs7QUFFakYsbUNBQW1DLHNEQUFNLENBQUMsa0RBQXVCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRXFKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgtZjkxZDcyMGMubWpzP2Y0ODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaSBhcyBpbnZlcnQsIFQgYXMgVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgfSBmcm9tICcuL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG5cbmNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSID0gaW52ZXJ0KFRSUENfRVJST1JfQ09ERVNfQllfS0VZKTtcbmNvbnN0IEpTT05SUEMyX1RPX0hUVFBfQ09ERSA9IHtcbiAgICBQQVJTRV9FUlJPUjogNDAwLFxuICAgIEJBRF9SRVFVRVNUOiA0MDAsXG4gICAgVU5BVVRIT1JJWkVEOiA0MDEsXG4gICAgTk9UX0ZPVU5EOiA0MDQsXG4gICAgRk9SQklEREVOOiA0MDMsXG4gICAgTUVUSE9EX05PVF9TVVBQT1JURUQ6IDQwNSxcbiAgICBUSU1FT1VUOiA0MDgsXG4gICAgQ09ORkxJQ1Q6IDQwOSxcbiAgICBQUkVDT05ESVRJT05fRkFJTEVEOiA0MTIsXG4gICAgUEFZTE9BRF9UT09fTEFSR0U6IDQxMyxcbiAgICBVTlBST0NFU1NBQkxFX0NPTlRFTlQ6IDQyMixcbiAgICBUT09fTUFOWV9SRVFVRVNUUzogNDI5LFxuICAgIENMSUVOVF9DTE9TRURfUkVRVUVTVDogNDk5LFxuICAgIElOVEVSTkFMX1NFUlZFUl9FUlJPUjogNTAwLFxuICAgIE5PVF9JTVBMRU1FTlRFRDogNTAxXG59O1xuZnVuY3Rpb24gZ2V0U3RhdHVzQ29kZUZyb21LZXkoY29kZSkge1xuICAgIHJldHVybiBKU09OUlBDMl9UT19IVFRQX0NPREVbY29kZV0gPz8gNTAwO1xufVxuZnVuY3Rpb24gZ2V0SFRUUFN0YXR1c0NvZGUoanNvbikge1xuICAgIGNvbnN0IGFyciA9IEFycmF5LmlzQXJyYXkoanNvbikgPyBqc29uIDogW1xuICAgICAgICBqc29uXG4gICAgXTtcbiAgICBjb25zdCBodHRwU3RhdHVzZXMgPSBuZXcgU2V0KGFyci5tYXAoKHJlcyk9PntcbiAgICAgICAgaWYgKCdlcnJvcicgaW4gcmVzKSB7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmVycm9yLmRhdGE7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGRhdGEuaHR0cFN0YXR1cyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5odHRwU3RhdHVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgY29kZSA9IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSW3Jlcy5lcnJvci5jb2RlXTtcbiAgICAgICAgICAgIHJldHVybiBnZXRTdGF0dXNDb2RlRnJvbUtleShjb2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMjAwO1xuICAgIH0pKTtcbiAgICBpZiAoaHR0cFN0YXR1c2VzLnNpemUgIT09IDEpIHtcbiAgICAgICAgcmV0dXJuIDIwNztcbiAgICB9XG4gICAgY29uc3QgaHR0cFN0YXR1cyA9IGh0dHBTdGF0dXNlcy52YWx1ZXMoKS5uZXh0KCkudmFsdWU7XG4gICAgcmV0dXJuIGh0dHBTdGF0dXM7XG59XG5mdW5jdGlvbiBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvcihlcnJvcikge1xuICAgIHJldHVybiBnZXRTdGF0dXNDb2RlRnJvbUtleShlcnJvci5jb2RlKTtcbn1cblxuY29uc3Qgbm9vcCA9ICgpPT57XG4vLyBub29wXG59O1xuZnVuY3Rpb24gY3JlYXRlSW5uZXJQcm94eShjYWxsYmFjaywgcGF0aCkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KG5vb3AsIHtcbiAgICAgICAgZ2V0IChfb2JqLCBrZXkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJyB8fCBrZXkgPT09ICd0aGVuJykge1xuICAgICAgICAgICAgICAgIC8vIHNwZWNpYWwgY2FzZSBmb3IgaWYgdGhlIHByb3h5IGlzIGFjY2lkZW50YWxseSB0cmVhdGVkXG4gICAgICAgICAgICAgICAgLy8gbGlrZSBhIFByb21pc2VMaWtlIChsaWtlIGluIGBQcm9taXNlLnJlc29sdmUocHJveHkpYClcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIFtcbiAgICAgICAgICAgICAgICAuLi5wYXRoLFxuICAgICAgICAgICAgICAgIGtleVxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFwcGx5IChfMSwgXzIsIGFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzQXBwbHkgPSBwYXRoW3BhdGgubGVuZ3RoIC0gMV0gPT09ICdhcHBseSc7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIGFyZ3M6IGlzQXBwbHkgPyBhcmdzLmxlbmd0aCA+PSAyID8gYXJnc1sxXSA6IFtdIDogYXJncyxcbiAgICAgICAgICAgICAgICBwYXRoOiBpc0FwcGx5ID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBwcm94eTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIHByb3h5IHRoYXQgY2FsbHMgdGhlIGNhbGxiYWNrIHdpdGggdGhlIHBhdGggYW5kIGFyZ3VtZW50c1xuICpcbiAqIEBpbnRlcm5hbFxuICovIGNvbnN0IGNyZWF0ZVJlY3Vyc2l2ZVByb3h5ID0gKGNhbGxiYWNrKT0+Y3JlYXRlSW5uZXJQcm94eShjYWxsYmFjaywgW10pO1xuLyoqXG4gKiBVc2VkIGluIHBsYWNlIG9mIGBuZXcgUHJveHlgIHdoZXJlIGVhY2ggaGFuZGxlciB3aWxsIG1hcCAxIGxldmVsIGRlZXAgdG8gYW5vdGhlciB2YWx1ZS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqLyBjb25zdCBjcmVhdGVGbGF0UHJveHkgPSAoY2FsbGJhY2spPT57XG4gICAgcmV0dXJuIG5ldyBQcm94eShub29wLCB7XG4gICAgICAgIGdldCAoX29iaiwgbmFtZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyB8fCBuYW1lID09PSAndGhlbicpIHtcbiAgICAgICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgZm9yIGlmIHRoZSBwcm94eSBpcyBhY2NpZGVudGFsbHkgdHJlYXRlZFxuICAgICAgICAgICAgICAgIC8vIGxpa2UgYSBQcm9taXNlTGlrZSAobGlrZSBpbiBgUHJvbWlzZS5yZXNvbHZlKHByb3h5KWApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhuYW1lKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxuZXhwb3J0IHsgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgYXMgVCwgY3JlYXRlUmVjdXJzaXZlUHJveHkgYXMgYSwgZ2V0SFRUUFN0YXR1c0NvZGUgYXMgYiwgY3JlYXRlRmxhdFByb3h5IGFzIGMsIGdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/observable-ade1bad8.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/observable-ade1bad8.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ isObservable),\n/* harmony export */   o: () => (/* binding */ observable)\n/* harmony export */ });\nfunction identity(x) {\n    return x;\n}\n\n/** @internal */ function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn)=>fn(prev), input);\n    };\n}\n\nfunction isObservable(x) {\n    return typeof x === 'object' && x !== null && 'subscribe' in x;\n}\nfunction observable(subscribe) {\n    const self = {\n        subscribe (observer) {\n            let teardownRef = null;\n            let isDone = false;\n            let unsubscribed = false;\n            let teardownImmediately = false;\n            function unsubscribe() {\n                if (teardownRef === null) {\n                    teardownImmediately = true;\n                    return;\n                }\n                if (unsubscribed) {\n                    return;\n                }\n                unsubscribed = true;\n                if (typeof teardownRef === 'function') {\n                    teardownRef();\n                } else if (teardownRef) {\n                    teardownRef.unsubscribe();\n                }\n            }\n            teardownRef = subscribe({\n                next (value) {\n                    if (isDone) {\n                        return;\n                    }\n                    observer.next?.(value);\n                },\n                error (err) {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n                    observer.error?.(err);\n                    unsubscribe();\n                },\n                complete () {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n                    observer.complete?.();\n                    unsubscribe();\n                }\n            });\n            if (teardownImmediately) {\n                unsubscribe();\n            }\n            return {\n                unsubscribe\n            };\n        },\n        pipe (...operations) {\n            return pipeFromArray(operations)(self);\n        }\n    };\n    return self;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvb2JzZXJ2YWJsZS1hZGUxYmFkOC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L29ic2VydmFibGUtYWRlMWJhZDgubWpzP2M1NzEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaWRlbnRpdHkoeCkge1xuICAgIHJldHVybiB4O1xufVxuXG4vKiogQGludGVybmFsICovIGZ1bmN0aW9uIHBpcGVGcm9tQXJyYXkoZm5zKSB7XG4gICAgaWYgKGZucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGlkZW50aXR5O1xuICAgIH1cbiAgICBpZiAoZm5zLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICByZXR1cm4gZm5zWzBdO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24gcGlwZWQoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIGZucy5yZWR1Y2UoKHByZXYsIGZuKT0+Zm4ocHJldiksIGlucHV0KTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc09ic2VydmFibGUoeCkge1xuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gJ29iamVjdCcgJiYgeCAhPT0gbnVsbCAmJiAnc3Vic2NyaWJlJyBpbiB4O1xufVxuZnVuY3Rpb24gb2JzZXJ2YWJsZShzdWJzY3JpYmUpIHtcbiAgICBjb25zdCBzZWxmID0ge1xuICAgICAgICBzdWJzY3JpYmUgKG9ic2VydmVyKSB7XG4gICAgICAgICAgICBsZXQgdGVhcmRvd25SZWYgPSBudWxsO1xuICAgICAgICAgICAgbGV0IGlzRG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgbGV0IHVuc3Vic2NyaWJlZCA9IGZhbHNlO1xuICAgICAgICAgICAgbGV0IHRlYXJkb3duSW1tZWRpYXRlbHkgPSBmYWxzZTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgICAgICAgICAgIGlmICh0ZWFyZG93blJlZiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0ZWFyZG93bkltbWVkaWF0ZWx5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodW5zdWJzY3JpYmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdW5zdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRlYXJkb3duUmVmID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlYXJkb3duUmVmKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0ZWFyZG93blJlZikge1xuICAgICAgICAgICAgICAgICAgICB0ZWFyZG93blJlZi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRlYXJkb3duUmVmID0gc3Vic2NyaWJlKHtcbiAgICAgICAgICAgICAgICBuZXh0ICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNEb25lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dD8uKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzRG9uZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmVycm9yPy4oZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbXBsZXRlICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzRG9uZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlPy4oKTtcbiAgICAgICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICh0ZWFyZG93bkltbWVkaWF0ZWx5KSB7XG4gICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdW5zdWJzY3JpYmVcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIHBpcGUgKC4uLm9wZXJhdGlvbnMpIHtcbiAgICAgICAgICAgIHJldHVybiBwaXBlRnJvbUFycmF5KG9wZXJhdGlvbnMpKHNlbGYpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gc2VsZjtcbn1cblxuZXhwb3J0IHsgaXNPYnNlcnZhYmxlIGFzIGksIG9ic2VydmFibGUgYXMgbyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/observable-ade1bad8.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/observable/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObservable: () => (/* reexport safe */ _observable_ade1bad8_mjs__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   observable: () => (/* reexport safe */ _observable_ade1bad8_mjs__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   observableToPromise: () => (/* binding */ observableToPromise),\n/* harmony export */   share: () => (/* binding */ share),\n/* harmony export */   tap: () => (/* binding */ tap)\n/* harmony export */ });\n/* harmony import */ var _observable_ade1bad8_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable-ade1bad8.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/observable-ade1bad8.mjs\");\n\n\nfunction share(_opts) {\n    return (originalObserver)=>{\n        let refCount = 0;\n        let subscription = null;\n        const observers = [];\n        function startIfNeeded() {\n            if (subscription) {\n                return;\n            }\n            subscription = originalObserver.subscribe({\n                next (value) {\n                    for (const observer of observers){\n                        observer.next?.(value);\n                    }\n                },\n                error (error) {\n                    for (const observer of observers){\n                        observer.error?.(error);\n                    }\n                },\n                complete () {\n                    for (const observer of observers){\n                        observer.complete?.();\n                    }\n                }\n            });\n        }\n        function resetIfNeeded() {\n            // \"resetOnRefCountZero\"\n            if (refCount === 0 && subscription) {\n                const _sub = subscription;\n                subscription = null;\n                _sub.unsubscribe();\n            }\n        }\n        return {\n            subscribe (observer) {\n                refCount++;\n                observers.push(observer);\n                startIfNeeded();\n                return {\n                    unsubscribe () {\n                        refCount--;\n                        resetIfNeeded();\n                        const index = observers.findIndex((v)=>v === observer);\n                        if (index > -1) {\n                            observers.splice(index, 1);\n                        }\n                    }\n                };\n            }\n        };\n    };\n}\n\nfunction map(project) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer) {\n                let index = 0;\n                const subscription = originalObserver.subscribe({\n                    next (value) {\n                        observer.next?.(project(value, index++));\n                    },\n                    error (error) {\n                        observer.error?.(error);\n                    },\n                    complete () {\n                        observer.complete?.();\n                    }\n                });\n                return subscription;\n            }\n        };\n    };\n}\n\nfunction tap(observer) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer2) {\n                return originalObserver.subscribe({\n                    next (v) {\n                        observer.next?.(v);\n                        observer2.next?.(v);\n                    },\n                    error (v) {\n                        observer.error?.(v);\n                        observer2.error?.(v);\n                    },\n                    complete () {\n                        observer.complete?.();\n                        observer2.complete?.();\n                    }\n                });\n            }\n        };\n    };\n}\n\nclass ObservableAbortError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'ObservableAbortError';\n        Object.setPrototypeOf(this, ObservableAbortError.prototype);\n    }\n}\n/** @internal */ function observableToPromise(observable) {\n    let abort;\n    const promise = new Promise((resolve, reject)=>{\n        let isDone = false;\n        function onDone() {\n            if (isDone) {\n                return;\n            }\n            isDone = true;\n            reject(new ObservableAbortError('This operation was aborted.'));\n            obs$.unsubscribe();\n        }\n        const obs$ = observable.subscribe({\n            next (data) {\n                isDone = true;\n                resolve(data);\n                onDone();\n            },\n            error (data) {\n                isDone = true;\n                reject(data);\n                onDone();\n            },\n            complete () {\n                isDone = true;\n                onDone();\n            }\n        });\n        abort = onDone;\n    });\n    return {\n        promise,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        abort: abort\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvb2JzZXJ2YWJsZS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnRjs7QUFFaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L29ic2VydmFibGUvaW5kZXgubWpzPzVhM2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgaSBhcyBpc09ic2VydmFibGUsIG8gYXMgb2JzZXJ2YWJsZSB9IGZyb20gJy4uL29ic2VydmFibGUtYWRlMWJhZDgubWpzJztcblxuZnVuY3Rpb24gc2hhcmUoX29wdHMpIHtcbiAgICByZXR1cm4gKG9yaWdpbmFsT2JzZXJ2ZXIpPT57XG4gICAgICAgIGxldCByZWZDb3VudCA9IDA7XG4gICAgICAgIGxldCBzdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICBjb25zdCBvYnNlcnZlcnMgPSBbXTtcbiAgICAgICAgZnVuY3Rpb24gc3RhcnRJZk5lZWRlZCgpIHtcbiAgICAgICAgICAgIGlmIChzdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdWJzY3JpcHRpb24gPSBvcmlnaW5hbE9ic2VydmVyLnN1YnNjcmliZSh7XG4gICAgICAgICAgICAgICAgbmV4dCAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBvYnNlcnZlciBvZiBvYnNlcnZlcnMpe1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dD8uKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgb2JzZXJ2ZXIgb2Ygb2JzZXJ2ZXJzKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmVycm9yPy4oZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZSAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgb2JzZXJ2ZXIgb2Ygb2JzZXJ2ZXJzKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlPy4oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlc2V0SWZOZWVkZWQoKSB7XG4gICAgICAgICAgICAvLyBcInJlc2V0T25SZWZDb3VudFplcm9cIlxuICAgICAgICAgICAgaWYgKHJlZkNvdW50ID09PSAwICYmIHN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9zdWIgPSBzdWJzY3JpcHRpb247XG4gICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uID0gbnVsbDtcbiAgICAgICAgICAgICAgICBfc3ViLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1YnNjcmliZSAob2JzZXJ2ZXIpIHtcbiAgICAgICAgICAgICAgICByZWZDb3VudCsrO1xuICAgICAgICAgICAgICAgIG9ic2VydmVycy5wdXNoKG9ic2VydmVyKTtcbiAgICAgICAgICAgICAgICBzdGFydElmTmVlZGVkKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUgKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVmQ291bnQtLTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0SWZOZWVkZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gb2JzZXJ2ZXJzLmZpbmRJbmRleCgodik9PnYgPT09IG9ic2VydmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIG1hcChwcm9qZWN0KSB7XG4gICAgcmV0dXJuIChvcmlnaW5hbE9ic2VydmVyKT0+e1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlIChvYnNlcnZlcikge1xuICAgICAgICAgICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gb3JpZ2luYWxPYnNlcnZlci5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICAgICAgICBuZXh0ICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dD8uKHByb2plY3QodmFsdWUsIGluZGV4KyspKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcj8uKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGU/LigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiB0YXAob2JzZXJ2ZXIpIHtcbiAgICByZXR1cm4gKG9yaWdpbmFsT2JzZXJ2ZXIpPT57XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWJzY3JpYmUgKG9ic2VydmVyMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbE9ic2VydmVyLnN1YnNjcmliZSh7XG4gICAgICAgICAgICAgICAgICAgIG5leHQgKHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQ/Lih2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyMi5uZXh0Py4odik7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGVycm9yICh2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcj8uKHYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIyLmVycm9yPy4odik7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlPy4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyMi5jb21wbGV0ZT8uKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xufVxuXG5jbGFzcyBPYnNlcnZhYmxlQWJvcnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKXtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdPYnNlcnZhYmxlQWJvcnRFcnJvcic7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBPYnNlcnZhYmxlQWJvcnRFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cbi8qKiBAaW50ZXJuYWwgKi8gZnVuY3Rpb24gb2JzZXJ2YWJsZVRvUHJvbWlzZShvYnNlcnZhYmxlKSB7XG4gICAgbGV0IGFib3J0O1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+e1xuICAgICAgICBsZXQgaXNEb25lID0gZmFsc2U7XG4gICAgICAgIGZ1bmN0aW9uIG9uRG9uZSgpIHtcbiAgICAgICAgICAgIGlmIChpc0RvbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpc0RvbmUgPSB0cnVlO1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBPYnNlcnZhYmxlQWJvcnRFcnJvcignVGhpcyBvcGVyYXRpb24gd2FzIGFib3J0ZWQuJykpO1xuICAgICAgICAgICAgb2JzJC51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9icyQgPSBvYnNlcnZhYmxlLnN1YnNjcmliZSh7XG4gICAgICAgICAgICBuZXh0IChkYXRhKSB7XG4gICAgICAgICAgICAgICAgaXNEb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xuICAgICAgICAgICAgICAgIG9uRG9uZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgaXNEb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZWplY3QoZGF0YSk7XG4gICAgICAgICAgICAgICAgb25Eb25lKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcGxldGUgKCkge1xuICAgICAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgb25Eb25lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBhYm9ydCA9IG9uRG9uZTtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9taXNlLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICBhYm9ydDogYWJvcnRcbiAgICB9O1xufVxuXG5leHBvcnQgeyBtYXAsIG9ic2VydmFibGVUb1Byb21pc2UsIHNoYXJlLCB0YXAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/shared/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFlatProxy: () => (/* reexport safe */ _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   createRecursiveProxy: () => (/* reexport safe */ _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   getCauseFromUnknown: () => (/* reexport safe */ _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_2__.g),\n/* harmony export */   getErrorShape: () => (/* reexport safe */ _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   transformTRPCResponse: () => (/* reexport safe */ _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_1__.t)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index-f91d720c.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transformTRPCResponse-1153b421.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../getCauseFromUnknown-2d66414a.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../codes-c924c3db.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvc2hhcmVkL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBd0Y7QUFDZTtBQUN4QjtBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3NoYXJlZC9pbmRleC5tanM/NDg1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBjIGFzIGNyZWF0ZUZsYXRQcm94eSwgYSBhcyBjcmVhdGVSZWN1cnNpdmVQcm94eSB9IGZyb20gJy4uL2luZGV4LWY5MWQ3MjBjLm1qcyc7XG5leHBvcnQgeyBnIGFzIGdldEVycm9yU2hhcGUsIHQgYXMgdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlIH0gZnJvbSAnLi4vdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTExNTNiNDIxLm1qcyc7XG5leHBvcnQgeyBnIGFzIGdldENhdXNlRnJvbVVua25vd24gfSBmcm9tICcuLi9nZXRDYXVzZUZyb21Vbmtub3duLTJkNjY0MTRhLm1qcyc7XG5pbXBvcnQgJy4uL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getErrorShape),\n/* harmony export */   t: () => (/* binding */ transformTRPCResponse)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n/**\n * @internal\n */ function getErrorShape(opts) {\n    const { path , error , config  } = opts;\n    const { code  } = opts.error;\n    const shape = {\n        message: error.message,\n        code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__.T[code],\n        data: {\n            code,\n            httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(error)\n        }\n    };\n    if (config.isDev && typeof opts.error.stack === 'string') {\n        shape.data.stack = opts.error.stack;\n    }\n    if (typeof path === 'string') {\n        shape.data.path = path;\n    }\n    return config.errorFormatter({\n        ...opts,\n        shape\n    });\n}\n\nfunction transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n        return {\n            ...item,\n            error: config.transformer.output.serialize(item.error)\n        };\n    }\n    if ('data' in item.result) {\n        return {\n            ...item,\n            result: {\n                ...item.result,\n                data: config.transformer.output.serialize(item.result.data)\n            }\n        };\n    }\n    return item;\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/ function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map((item)=>transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTExNTNiNDIxLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ0g7O0FBRXBFO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0EsY0FBYyxrREFBdUI7QUFDckM7QUFDQTtBQUNBLHdCQUF3QixzREFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRCIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3RyYW5zZm9ybVRSUENSZXNwb25zZS0xMTUzYjQyMS5tanM/NTIyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnIGFzIGdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yIH0gZnJvbSAnLi9pbmRleC1mOTFkNzIwYy5tanMnO1xuaW1wb3J0IHsgVCBhcyBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSB9IGZyb20gJy4vY29kZXMtYzkyNGMzZGIubWpzJztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiBnZXRFcnJvclNoYXBlKG9wdHMpIHtcbiAgICBjb25zdCB7IHBhdGggLCBlcnJvciAsIGNvbmZpZyAgfSA9IG9wdHM7XG4gICAgY29uc3QgeyBjb2RlICB9ID0gb3B0cy5lcnJvcjtcbiAgICBjb25zdCBzaGFwZSA9IHtcbiAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgY29kZTogVFJQQ19FUlJPUl9DT0RFU19CWV9LRVlbY29kZV0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGNvZGUsXG4gICAgICAgICAgICBodHRwU3RhdHVzOiBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvcihlcnJvcilcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKGNvbmZpZy5pc0RldiAmJiB0eXBlb2Ygb3B0cy5lcnJvci5zdGFjayA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2hhcGUuZGF0YS5zdGFjayA9IG9wdHMuZXJyb3Iuc3RhY2s7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2hhcGUuZGF0YS5wYXRoID0gcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZy5lcnJvckZvcm1hdHRlcih7XG4gICAgICAgIC4uLm9wdHMsXG4gICAgICAgIHNoYXBlXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVRSUENSZXNwb25zZUl0ZW0oY29uZmlnLCBpdGVtKSB7XG4gICAgaWYgKCdlcnJvcicgaW4gaXRlbSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIGVycm9yOiBjb25maWcudHJhbnNmb3JtZXIub3V0cHV0LnNlcmlhbGl6ZShpdGVtLmVycm9yKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoJ2RhdGEnIGluIGl0ZW0ucmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5pdGVtLFxuICAgICAgICAgICAgcmVzdWx0OiB7XG4gICAgICAgICAgICAgICAgLi4uaXRlbS5yZXN1bHQsXG4gICAgICAgICAgICAgICAgZGF0YTogY29uZmlnLnRyYW5zZm9ybWVyLm91dHB1dC5zZXJpYWxpemUoaXRlbS5yZXN1bHQuZGF0YSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW07XG59XG4vKipcbiAqIFRha2VzIGEgdW5zZXJpYWxpemVkIGBUUlBDUmVzcG9uc2VgIGFuZCBzZXJpYWxpemVzIGl0IHdpdGggdGhlIHJvdXRlcidzIHRyYW5zZm9ybWVyc1xuICoqLyBmdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UoY29uZmlnLCBpdGVtT3JJdGVtcykge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGl0ZW1Pckl0ZW1zKSA/IGl0ZW1Pckl0ZW1zLm1hcCgoaXRlbSk9PnRyYW5zZm9ybVRSUENSZXNwb25zZUl0ZW0oY29uZmlnLCBpdGVtKSkgOiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbU9ySXRlbXMpO1xufVxuXG5leHBvcnQgeyBnZXRFcnJvclNoYXBlIGFzIGcsIHRyYW5zZm9ybVRSUENSZXNwb25zZSBhcyB0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCError),\n/* harmony export */   g: () => (/* binding */ getTRPCErrorFromUnknown)\n/* harmony export */ });\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n\n\nfunction getTRPCErrorFromUnknown(cause) {\n    if (cause instanceof TRPCError) {\n        return cause;\n    }\n    if (cause instanceof Error && cause.name === 'TRPCError') {\n        // https://github.com/trpc/trpc/pull/4848\n        return cause;\n    }\n    const trpcError = new TRPCError({\n        code: 'INTERNAL_SERVER_ERROR',\n        cause\n    });\n    // Inherit stack from error\n    if (cause instanceof Error && cause.stack) {\n        trpcError.stack = cause.stack;\n    }\n    return trpcError;\n}\nclass TRPCError extends Error {\n    constructor(opts){\n        const cause = (0,_getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(opts.cause);\n        const message = opts.message ?? cause?.message ?? opts.code;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.code = opts.code;\n        this.name = 'TRPCError';\n        if (!this.cause) {\n            // < ES2022 / < Node 16.9.0 compatability\n            this.cause = cause;\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvVFJQQ0Vycm9yLTk4ZDQ0NzU4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEU7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvRUFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L1RSUENFcnJvci05OGQ0NDc1OC5tanM/YTM5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnIGFzIGdldENhdXNlRnJvbVVua25vd24gfSBmcm9tICcuL2dldENhdXNlRnJvbVVua25vd24tMmQ2NjQxNGEubWpzJztcblxuZnVuY3Rpb24gZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24oY2F1c2UpIHtcbiAgICBpZiAoY2F1c2UgaW5zdGFuY2VvZiBUUlBDRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGNhdXNlO1xuICAgIH1cbiAgICBpZiAoY2F1c2UgaW5zdGFuY2VvZiBFcnJvciAmJiBjYXVzZS5uYW1lID09PSAnVFJQQ0Vycm9yJykge1xuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdHJwYy90cnBjL3B1bGwvNDg0OFxuICAgICAgICByZXR1cm4gY2F1c2U7XG4gICAgfVxuICAgIGNvbnN0IHRycGNFcnJvciA9IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICBjb2RlOiAnSU5URVJOQUxfU0VSVkVSX0VSUk9SJyxcbiAgICAgICAgY2F1c2VcbiAgICB9KTtcbiAgICAvLyBJbmhlcml0IHN0YWNrIGZyb20gZXJyb3JcbiAgICBpZiAoY2F1c2UgaW5zdGFuY2VvZiBFcnJvciAmJiBjYXVzZS5zdGFjaykge1xuICAgICAgICB0cnBjRXJyb3Iuc3RhY2sgPSBjYXVzZS5zdGFjaztcbiAgICB9XG4gICAgcmV0dXJuIHRycGNFcnJvcjtcbn1cbmNsYXNzIFRSUENFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKXtcbiAgICAgICAgY29uc3QgY2F1c2UgPSBnZXRDYXVzZUZyb21Vbmtub3duKG9wdHMuY2F1c2UpO1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gb3B0cy5tZXNzYWdlID8/IGNhdXNlPy5tZXNzYWdlID8/IG9wdHMuY29kZTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuICAgICAgICAvLyBAdHMtaWdub3JlIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWVycm9yLWNhdXNlXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHtcbiAgICAgICAgICAgIGNhdXNlXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNvZGUgPSBvcHRzLmNvZGU7XG4gICAgICAgIHRoaXMubmFtZSA9ICdUUlBDRXJyb3InO1xuICAgICAgICBpZiAoIXRoaXMuY2F1c2UpIHtcbiAgICAgICAgICAgIC8vIDwgRVMyMDIyIC8gPCBOb2RlIDE2LjkuMCBjb21wYXRhYmlsaXR5XG4gICAgICAgICAgICB0aGlzLmNhdXNlID0gY2F1c2U7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IFRSUENFcnJvciBhcyBULCBnZXRUUlBDRXJyb3JGcm9tVW5rbm93biBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/adapters/fetch/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/adapters/fetch/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchRequestHandler: () => (/* binding */ fetchRequestHandler)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _resolveHTTPResponse_2fc435bb_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../resolveHTTPResponse-2fc435bb.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs\");\n/* harmony import */ var _batchStreamFormatter_fc1ffb26_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../batchStreamFormatter-fc1ffb26.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs\");\n/* harmony import */ var _toURL_8f0ea228_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../toURL-8f0ea228.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../config-d5fdbd39.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../transformTRPCResponse-1153b421.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../contentType-9fd995d3.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nconst trimSlashes = (path)=>{\n    path = path.startsWith('/') ? path.slice(1) : path;\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    return path;\n};\nasync function fetchRequestHandler(opts) {\n    const resHeaders = new Headers();\n    const createContext = async ()=>{\n        return opts.createContext?.({\n            req: opts.req,\n            resHeaders\n        });\n    };\n    const url = (0,_toURL_8f0ea228_mjs__WEBPACK_IMPORTED_MODULE_3__.t)(opts.req.url);\n    const pathname = trimSlashes(url.pathname);\n    const endpoint = trimSlashes(opts.endpoint);\n    const path = trimSlashes(pathname.slice(endpoint.length));\n    const req = {\n        query: url.searchParams,\n        method: opts.req.method,\n        headers: Object.fromEntries(opts.req.headers),\n        body: opts.req.headers.get('content-type')?.startsWith('application/json') ? await opts.req.text() : ''\n    };\n    let resolve;\n    const promise = new Promise((r)=>resolve = r);\n    let status = 200;\n    let isStream = false;\n    let controller;\n    let encoder;\n    let formatter;\n    const unstable_onHead = (head, isStreaming)=>{\n        for (const [key, value] of Object.entries(head.headers ?? {})){\n            /* istanbul ignore if -- @preserve */ if (typeof value === 'undefined') {\n                continue;\n            }\n            if (typeof value === 'string') {\n                resHeaders.set(key, value);\n                continue;\n            }\n            for (const v of value){\n                resHeaders.append(key, v);\n            }\n        }\n        status = head.status;\n        if (isStreaming) {\n            resHeaders.set('Transfer-Encoding', 'chunked');\n            resHeaders.append('Vary', 'trpc-batch-mode');\n            const stream = new ReadableStream({\n                start (c) {\n                    controller = c;\n                }\n            });\n            const response = new Response(stream, {\n                status,\n                headers: resHeaders\n            });\n            resolve(response);\n            encoder = new TextEncoder();\n            formatter = (0,_batchStreamFormatter_fc1ffb26_mjs__WEBPACK_IMPORTED_MODULE_2__.g)();\n            isStream = true;\n        }\n    };\n    const unstable_onChunk = ([index, string])=>{\n        if (index === -1) {\n            // full response, no streaming\n            const response = new Response(string || null, {\n                status,\n                headers: resHeaders\n            });\n            resolve(response);\n        } else {\n            controller.enqueue(encoder.encode(formatter(index, string)));\n        }\n    };\n    (0,_resolveHTTPResponse_2fc435bb_mjs__WEBPACK_IMPORTED_MODULE_1__.r)({\n        req,\n        createContext,\n        path,\n        router: opts.router,\n        batching: opts.batching,\n        responseMeta: opts.responseMeta,\n        onError (o) {\n            opts?.onError?.({\n                ...o,\n                req: opts.req\n            });\n        },\n        unstable_onHead,\n        unstable_onChunk\n    }).then(()=>{\n        if (isStream) {\n            controller.enqueue(encoder.encode(formatter.end()));\n            controller.close();\n        }\n    }).catch(()=>{\n        if (isStream) {\n            controller.close();\n        }\n    });\n    return promise;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYWRhcHRlcnMvZmV0Y2gvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ2dEO0FBQ0s7QUFDakM7QUFDcEI7QUFDQztBQUNHO0FBQ1U7QUFDRTtBQUNWOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsZ0JBQWdCLHNEQUFLO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx3QkFBd0IscUVBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxJQUFJLG9FQUFtQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90My10dXJzby10b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9hZGFwdGVycy9mZXRjaC9pbmRleC5tanM/ZTI5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uLy4uL2luZGV4LWY5MWQ3MjBjLm1qcyc7XG5pbXBvcnQgeyByIGFzIHJlc29sdmVIVFRQUmVzcG9uc2UgfSBmcm9tICcuLi8uLi9yZXNvbHZlSFRUUFJlc3BvbnNlLTJmYzQzNWJiLm1qcyc7XG5pbXBvcnQgeyBnIGFzIGdldEJhdGNoU3RyZWFtRm9ybWF0dGVyIH0gZnJvbSAnLi4vLi4vYmF0Y2hTdHJlYW1Gb3JtYXR0ZXItZmMxZmZiMjYubWpzJztcbmltcG9ydCB7IHQgYXMgdG9VUkwgfSBmcm9tICcuLi8uLi90b1VSTC04ZjBlYTIyOC5tanMnO1xuaW1wb3J0ICcuLi8uLi9jb2Rlcy1jOTI0YzNkYi5tanMnO1xuaW1wb3J0ICcuLi8uLi9jb25maWctZDVmZGJkMzkubWpzJztcbmltcG9ydCAnLi4vLi4vVFJQQ0Vycm9yLTk4ZDQ0NzU4Lm1qcyc7XG5pbXBvcnQgJy4uLy4uL2dldENhdXNlRnJvbVVua25vd24tMmQ2NjQxNGEubWpzJztcbmltcG9ydCAnLi4vLi4vdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTExNTNiNDIxLm1qcyc7XG5pbXBvcnQgJy4uLy4uL2NvbnRlbnRUeXBlLTlmZDk5NWQzLm1qcyc7XG5cbmNvbnN0IHRyaW1TbGFzaGVzID0gKHBhdGgpPT57XG4gICAgcGF0aCA9IHBhdGguc3RhcnRzV2l0aCgnLycpID8gcGF0aC5zbGljZSgxKSA6IHBhdGg7XG4gICAgcGF0aCA9IHBhdGguZW5kc1dpdGgoJy8nKSA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbiAgICByZXR1cm4gcGF0aDtcbn07XG5hc3luYyBmdW5jdGlvbiBmZXRjaFJlcXVlc3RIYW5kbGVyKG9wdHMpIHtcbiAgICBjb25zdCByZXNIZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICBjb25zdCBjcmVhdGVDb250ZXh0ID0gYXN5bmMgKCk9PntcbiAgICAgICAgcmV0dXJuIG9wdHMuY3JlYXRlQ29udGV4dD8uKHtcbiAgICAgICAgICAgIHJlcTogb3B0cy5yZXEsXG4gICAgICAgICAgICByZXNIZWFkZXJzXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgdXJsID0gdG9VUkwob3B0cy5yZXEudXJsKTtcbiAgICBjb25zdCBwYXRobmFtZSA9IHRyaW1TbGFzaGVzKHVybC5wYXRobmFtZSk7XG4gICAgY29uc3QgZW5kcG9pbnQgPSB0cmltU2xhc2hlcyhvcHRzLmVuZHBvaW50KTtcbiAgICBjb25zdCBwYXRoID0gdHJpbVNsYXNoZXMocGF0aG5hbWUuc2xpY2UoZW5kcG9pbnQubGVuZ3RoKSk7XG4gICAgY29uc3QgcmVxID0ge1xuICAgICAgICBxdWVyeTogdXJsLnNlYXJjaFBhcmFtcyxcbiAgICAgICAgbWV0aG9kOiBvcHRzLnJlcS5tZXRob2QsXG4gICAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyhvcHRzLnJlcS5oZWFkZXJzKSxcbiAgICAgICAgYm9keTogb3B0cy5yZXEuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpPy5zdGFydHNXaXRoKCdhcHBsaWNhdGlvbi9qc29uJykgPyBhd2FpdCBvcHRzLnJlcS50ZXh0KCkgOiAnJ1xuICAgIH07XG4gICAgbGV0IHJlc29sdmU7XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyKT0+cmVzb2x2ZSA9IHIpO1xuICAgIGxldCBzdGF0dXMgPSAyMDA7XG4gICAgbGV0IGlzU3RyZWFtID0gZmFsc2U7XG4gICAgbGV0IGNvbnRyb2xsZXI7XG4gICAgbGV0IGVuY29kZXI7XG4gICAgbGV0IGZvcm1hdHRlcjtcbiAgICBjb25zdCB1bnN0YWJsZV9vbkhlYWQgPSAoaGVhZCwgaXNTdHJlYW1pbmcpPT57XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGhlYWQuaGVhZGVycyA/PyB7fSkpe1xuICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0tIEBwcmVzZXJ2ZSAqLyBpZiAodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICByZXNIZWFkZXJzLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgdiBvZiB2YWx1ZSl7XG4gICAgICAgICAgICAgICAgcmVzSGVhZGVycy5hcHBlbmQoa2V5LCB2KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdGF0dXMgPSBoZWFkLnN0YXR1cztcbiAgICAgICAgaWYgKGlzU3RyZWFtaW5nKSB7XG4gICAgICAgICAgICByZXNIZWFkZXJzLnNldCgnVHJhbnNmZXItRW5jb2RpbmcnLCAnY2h1bmtlZCcpO1xuICAgICAgICAgICAgcmVzSGVhZGVycy5hcHBlbmQoJ1ZhcnknLCAndHJwYy1iYXRjaC1tb2RlJyk7XG4gICAgICAgICAgICBjb25zdCBzdHJlYW0gPSBuZXcgUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICAgICAgICAgIHN0YXJ0IChjKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIgPSBjO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2Uoc3RyZWFtLCB7XG4gICAgICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHJlc0hlYWRlcnNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gICAgICAgICAgICBmb3JtYXR0ZXIgPSBnZXRCYXRjaFN0cmVhbUZvcm1hdHRlcigpO1xuICAgICAgICAgICAgaXNTdHJlYW0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCB1bnN0YWJsZV9vbkNodW5rID0gKFtpbmRleCwgc3RyaW5nXSk9PntcbiAgICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgLy8gZnVsbCByZXNwb25zZSwgbm8gc3RyZWFtaW5nXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IG5ldyBSZXNwb25zZShzdHJpbmcgfHwgbnVsbCwge1xuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNIZWFkZXJzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGVuY29kZXIuZW5jb2RlKGZvcm1hdHRlcihpbmRleCwgc3RyaW5nKSkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXNvbHZlSFRUUFJlc3BvbnNlKHtcbiAgICAgICAgcmVxLFxuICAgICAgICBjcmVhdGVDb250ZXh0LFxuICAgICAgICBwYXRoLFxuICAgICAgICByb3V0ZXI6IG9wdHMucm91dGVyLFxuICAgICAgICBiYXRjaGluZzogb3B0cy5iYXRjaGluZyxcbiAgICAgICAgcmVzcG9uc2VNZXRhOiBvcHRzLnJlc3BvbnNlTWV0YSxcbiAgICAgICAgb25FcnJvciAobykge1xuICAgICAgICAgICAgb3B0cz8ub25FcnJvcj8uKHtcbiAgICAgICAgICAgICAgICAuLi5vLFxuICAgICAgICAgICAgICAgIHJlcTogb3B0cy5yZXFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICB1bnN0YWJsZV9vbkhlYWQsXG4gICAgICAgIHVuc3RhYmxlX29uQ2h1bmtcbiAgICB9KS50aGVuKCgpPT57XG4gICAgICAgIGlmIChpc1N0cmVhbSkge1xuICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGVuY29kZXIuZW5jb2RlKGZvcm1hdHRlci5lbmQoKSkpO1xuICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfSkuY2F0Y2goKCk9PntcbiAgICAgICAgaWYgKGlzU3RyZWFtKSB7XG4gICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcHJvbWlzZTtcbn1cblxuZXhwb3J0IHsgZmV0Y2hSZXF1ZXN0SGFuZGxlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/adapters/fetch/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getBatchStreamFormatter)\n/* harmony export */ });\n/**\n * Format a batch response as a line-delimited JSON stream\n * that the `unstable_httpBatchStreamLink` can parse:\n *\n * @example\n * ```ts\n * const formatter = getBatchStreamFormatter();\n * res.send(formatter(1, 'response #2'));\n * res.send(formatter(0, 'response #1'));\n * res.send(formatter.end());\n * ```\n *\n * Expected format:\n * ```json\n * {\"1\":\"response #2\"\n * ,\"0\":\"response #1\"\n * }\n * ```\n */ function getBatchStreamFormatter() {\n    let first = true;\n    function format(index, string) {\n        const prefix = first ? '{' : ',';\n        first = false;\n        return `${prefix}\"${index}\":${string}\\n`;\n    }\n    format.end = ()=>'}';\n    return format;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYmF0Y2hTdHJlYW1Gb3JtYXR0ZXItZmMxZmZiMjYubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBLGtCQUFrQixPQUFPLEdBQUcsTUFBTSxJQUFJLE9BQU87QUFDN0M7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTs7QUFFd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90My10dXJzby10b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9iYXRjaFN0cmVhbUZvcm1hdHRlci1mYzFmZmIyNi5tanM/YWFiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvcm1hdCBhIGJhdGNoIHJlc3BvbnNlIGFzIGEgbGluZS1kZWxpbWl0ZWQgSlNPTiBzdHJlYW1cbiAqIHRoYXQgdGhlIGB1bnN0YWJsZV9odHRwQmF0Y2hTdHJlYW1MaW5rYCBjYW4gcGFyc2U6XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zdCBmb3JtYXR0ZXIgPSBnZXRCYXRjaFN0cmVhbUZvcm1hdHRlcigpO1xuICogcmVzLnNlbmQoZm9ybWF0dGVyKDEsICdyZXNwb25zZSAjMicpKTtcbiAqIHJlcy5zZW5kKGZvcm1hdHRlcigwLCAncmVzcG9uc2UgIzEnKSk7XG4gKiByZXMuc2VuZChmb3JtYXR0ZXIuZW5kKCkpO1xuICogYGBgXG4gKlxuICogRXhwZWN0ZWQgZm9ybWF0OlxuICogYGBganNvblxuICoge1wiMVwiOlwicmVzcG9uc2UgIzJcIlxuICogLFwiMFwiOlwicmVzcG9uc2UgIzFcIlxuICogfVxuICogYGBgXG4gKi8gZnVuY3Rpb24gZ2V0QmF0Y2hTdHJlYW1Gb3JtYXR0ZXIoKSB7XG4gICAgbGV0IGZpcnN0ID0gdHJ1ZTtcbiAgICBmdW5jdGlvbiBmb3JtYXQoaW5kZXgsIHN0cmluZykge1xuICAgICAgICBjb25zdCBwcmVmaXggPSBmaXJzdCA/ICd7JyA6ICcsJztcbiAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIGAke3ByZWZpeH1cIiR7aW5kZXh9XCI6JHtzdHJpbmd9XFxuYDtcbiAgICB9XG4gICAgZm9ybWF0LmVuZCA9ICgpPT4nfSc7XG4gICAgcmV0dXJuIGZvcm1hdDtcbn1cblxuZXhwb3J0IHsgZ2V0QmF0Y2hTdHJlYW1Gb3JtYXR0ZXIgYXMgZyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/codes-c924c3db.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_KEY),\n/* harmony export */   a: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   i: () => (/* binding */ invert)\n/* harmony export */ });\n/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtYzkyNGMzZGIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRiIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvZGVzLWM5MjRjM2RiLm1qcz9kZTM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gaW52ZXJ0KG9iaikge1xuICAgIGNvbnN0IG5ld09iaiA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgZm9yKGNvbnN0IGtleSBpbiBvYmope1xuICAgICAgICBjb25zdCB2ID0gb2JqW2tleV07XG4gICAgICAgIG5ld09ialt2XSA9IGtleTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld09iajtcbn1cblxuLy8gcmVmZXJlbmNlOiBodHRwczovL3d3dy5qc29ucnBjLm9yZy9zcGVjaWZpY2F0aW9uXG4vKipcbiAqIEpTT04tUlBDIDIuMCBFcnJvciBjb2Rlc1xuICpcbiAqIGAtMzIwMDBgIHRvIGAtMzIwOTlgIGFyZSByZXNlcnZlZCBmb3IgaW1wbGVtZW50YXRpb24tZGVmaW5lZCBzZXJ2ZXItZXJyb3JzLlxuICogRm9yIHRSUEMgd2UncmUgY29weWluZyB0aGUgbGFzdCBkaWdpdHMgb2YgSFRUUCA0WFggZXJyb3JzLlxuICovIGNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfS0VZID0ge1xuICAgIC8qKlxuICAgKiBJbnZhbGlkIEpTT04gd2FzIHJlY2VpdmVkIGJ5IHRoZSBzZXJ2ZXIuXG4gICAqIEFuIGVycm9yIG9jY3VycmVkIG9uIHRoZSBzZXJ2ZXIgd2hpbGUgcGFyc2luZyB0aGUgSlNPTiB0ZXh0LlxuICAgKi8gUEFSU0VfRVJST1I6IC0zMjcwMCxcbiAgICAvKipcbiAgICogVGhlIEpTT04gc2VudCBpcyBub3QgYSB2YWxpZCBSZXF1ZXN0IG9iamVjdC5cbiAgICovIEJBRF9SRVFVRVNUOiAtMzI2MDAsXG4gICAgLy8gSW50ZXJuYWwgSlNPTi1SUEMgZXJyb3JcbiAgICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IC0zMjYwMyxcbiAgICBOT1RfSU1QTEVNRU5URUQ6IC0zMjYwMyxcbiAgICAvLyBJbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyBlcnJvcnNcbiAgICBVTkFVVEhPUklaRUQ6IC0zMjAwMSxcbiAgICBGT1JCSURERU46IC0zMjAwMyxcbiAgICBOT1RfRk9VTkQ6IC0zMjAwNCxcbiAgICBNRVRIT0RfTk9UX1NVUFBPUlRFRDogLTMyMDA1LFxuICAgIFRJTUVPVVQ6IC0zMjAwOCxcbiAgICBDT05GTElDVDogLTMyMDA5LFxuICAgIFBSRUNPTkRJVElPTl9GQUlMRUQ6IC0zMjAxMixcbiAgICBQQVlMT0FEX1RPT19MQVJHRTogLTMyMDEzLFxuICAgIFVOUFJPQ0VTU0FCTEVfQ09OVEVOVDogLTMyMDIyLFxuICAgIFRPT19NQU5ZX1JFUVVFU1RTOiAtMzIwMjksXG4gICAgQ0xJRU5UX0NMT1NFRF9SRVFVRVNUOiAtMzIwOTlcbn07XG5jb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiA9IGludmVydChUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSk7XG5cbmV4cG9ydCB7IFRSUENfRVJST1JfQ09ERVNfQllfS0VZIGFzIFQsIFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSIGFzIGEsIGludmVydCBhcyBpIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/config-d5fdbd39.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ defaultTransformer),\n/* harmony export */   b: () => (/* binding */ createCallerFactory),\n/* harmony export */   c: () => (/* binding */ createRouterFactory),\n/* harmony export */   d: () => (/* binding */ defaultFormatter),\n/* harmony export */   e: () => (/* binding */ callProcedure),\n/* harmony export */   g: () => (/* binding */ getDataTransformer),\n/* harmony export */   i: () => (/* binding */ isServerDefault),\n/* harmony export */   p: () => (/* binding */ procedureTypes)\n/* harmony export */ });\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n\n/**\n * @public\n */ /**\n * @internal\n */ function getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\n/**\n * @internal\n */ const defaultTransformer = {\n    _default: true,\n    input: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    },\n    output: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    }\n};\n\nconst defaultFormatter = ({ shape  })=>{\n    return shape;\n};\n\n/**\n * Create an object without inheriting anything from `Object.prototype`\n * @internal\n */ function omitPrototype(obj) {\n    return Object.assign(Object.create(null), obj);\n}\n\nconst procedureTypes = [\n    'query',\n    'mutation',\n    'subscription'\n];\n\nfunction isRouter(procedureOrRouter) {\n    return 'router' in procedureOrRouter._def;\n}\nconst emptyRouter = {\n    _ctx: null,\n    _errorShape: null,\n    _meta: null,\n    queries: {},\n    mutations: {},\n    subscriptions: {},\n    errorFormatter: defaultFormatter,\n    transformer: defaultTransformer\n};\n/**\n * Reserved words that can't be used as router or procedure names\n */ const reservedWords = [\n    /**\n   * Then is a reserved word because otherwise we can't return a promise that returns a Proxy\n   * since JS will think that `.then` is something that exists\n   */ 'then'\n];\n/**\n * @internal\n */ function createRouterFactory(config) {\n    return function createRouterInner(procedures) {\n        const reservedWordsUsed = new Set(Object.keys(procedures).filter((v)=>reservedWords.includes(v)));\n        if (reservedWordsUsed.size > 0) {\n            throw new Error('Reserved words used in `router({})` call: ' + Array.from(reservedWordsUsed).join(', '));\n        }\n        const routerProcedures = omitPrototype({});\n        function recursiveGetPaths(procedures, path = '') {\n            for (const [key, procedureOrRouter] of Object.entries(procedures ?? {})){\n                const newPath = `${path}${key}`;\n                if (isRouter(procedureOrRouter)) {\n                    recursiveGetPaths(procedureOrRouter._def.procedures, `${newPath}.`);\n                    continue;\n                }\n                if (routerProcedures[newPath]) {\n                    throw new Error(`Duplicate key: ${newPath}`);\n                }\n                routerProcedures[newPath] = procedureOrRouter;\n            }\n        }\n        recursiveGetPaths(procedures);\n        const _def = {\n            _config: config,\n            router: true,\n            procedures: routerProcedures,\n            ...emptyRouter,\n            record: procedures,\n            queries: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.query).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            mutations: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.mutation).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            subscriptions: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.subscription).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {})\n        };\n        const router = {\n            ...procedures,\n            _def,\n            createCaller (ctx) {\n                return createCallerFactory()(router)(ctx);\n            },\n            getErrorShape (opts) {\n                const { path , error  } = opts;\n                const { code  } = opts.error;\n                const shape = {\n                    message: error.message,\n                    code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_2__.T[code],\n                    data: {\n                        code,\n                        httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(error)\n                    }\n                };\n                if (config.isDev && typeof opts.error.stack === 'string') {\n                    shape.data.stack = opts.error.stack;\n                }\n                if (typeof path === 'string') {\n                    shape.data.path = path;\n                }\n                return this._def._config.errorFormatter({\n                    ...opts,\n                    shape\n                });\n            }\n        };\n        return router;\n    };\n}\n/**\n * @internal\n */ function callProcedure(opts) {\n    const { type , path  } = opts;\n    if (!(path in opts.procedures) || !opts.procedures[path]?._def[type]) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'NOT_FOUND',\n            message: `No \"${type}\"-procedure on path \"${path}\"`\n        });\n    }\n    const procedure = opts.procedures[path];\n    return procedure(opts);\n}\nfunction createCallerFactory() {\n    return function createCallerInner(router) {\n        const def = router._def;\n        return function createCaller(ctx) {\n            const proxy = (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(({ path , args  })=>{\n                // interop mode\n                if (path.length === 1 && procedureTypes.includes(path[0])) {\n                    return callProcedure({\n                        procedures: def.procedures,\n                        path: args[0],\n                        rawInput: args[1],\n                        ctx,\n                        type: path[0]\n                    });\n                }\n                const fullPath = path.join('.');\n                const procedure = def.procedures[fullPath];\n                let type = 'query';\n                if (procedure._def.mutation) {\n                    type = 'mutation';\n                } else if (procedure._def.subscription) {\n                    type = 'subscription';\n                }\n                return procedure({\n                    path: fullPath,\n                    rawInput: args[0],\n                    ctx,\n                    type\n                });\n            });\n            return proxy;\n        };\n    };\n}\n\n/**\n * The default check to see if we're in a server\n */ const isServerDefault = typeof window === 'undefined' || 'Deno' in window || globalThis.process?.env?.NODE_ENV === 'test' || !!globalThis.process?.env?.JEST_WORKER_ID || !!globalThis.process?.env?.VITEST_WORKER_ID;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getJsonContentTypeInputs)\n/* harmony export */ });\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n\n\nfunction getRawProcedureInputOrThrow(opts) {\n    const { req  } = opts;\n    try {\n        if (req.method === 'GET') {\n            if (!req.query.has('input')) {\n                return undefined;\n            }\n            const raw = req.query.get('input');\n            return JSON.parse(raw);\n        }\n        if (!opts.preprocessedBody && typeof req.body === 'string') {\n            // A mutation with no inputs will have req.body === ''\n            return req.body.length === 0 ? undefined : JSON.parse(req.body);\n        }\n        return req.body;\n    } catch (cause) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'PARSE_ERROR',\n            cause\n        });\n    }\n}\nconst deserializeInputValue = (rawValue, transformer)=>{\n    return typeof rawValue !== 'undefined' ? transformer.input.deserialize(rawValue) : rawValue;\n};\nconst getJsonContentTypeInputs = (opts)=>{\n    const rawInput = getRawProcedureInputOrThrow(opts);\n    const transformer = opts.router._def._config.transformer;\n    if (!opts.isBatchCall) {\n        return {\n            0: deserializeInputValue(rawInput, transformer)\n        };\n    }\n    /* istanbul ignore if  */ if (rawInput == null || typeof rawInput !== 'object' || Array.isArray(rawInput)) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'BAD_REQUEST',\n            message: '\"input\" needs to be an object when doing a batch call'\n        });\n    }\n    const input = {};\n    for(const key in rawInput){\n        const k = key;\n        const rawValue = rawInput[k];\n        const value = deserializeInputValue(rawValue, transformer);\n        input[k] = value;\n    }\n    return input;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29udGVudFR5cGUtOWZkOTk1ZDMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBEOztBQUUxRDtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixrQkFBa0Isc0RBQVM7QUFDM0I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFTO0FBQzNCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29udGVudFR5cGUtOWZkOTk1ZDMubWpzPzcwMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVCBhcyBUUlBDRXJyb3IgfSBmcm9tICcuL1RSUENFcnJvci05OGQ0NDc1OC5tanMnO1xuXG5mdW5jdGlvbiBnZXRSYXdQcm9jZWR1cmVJbnB1dE9yVGhyb3cob3B0cykge1xuICAgIGNvbnN0IHsgcmVxICB9ID0gb3B0cztcbiAgICB0cnkge1xuICAgICAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ0dFVCcpIHtcbiAgICAgICAgICAgIGlmICghcmVxLnF1ZXJ5LmhhcygnaW5wdXQnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByYXcgPSByZXEucXVlcnkuZ2V0KCdpbnB1dCcpO1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UocmF3KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW9wdHMucHJlcHJvY2Vzc2VkQm9keSAmJiB0eXBlb2YgcmVxLmJvZHkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAvLyBBIG11dGF0aW9uIHdpdGggbm8gaW5wdXRzIHdpbGwgaGF2ZSByZXEuYm9keSA9PT0gJydcbiAgICAgICAgICAgIHJldHVybiByZXEuYm9keS5sZW5ndGggPT09IDAgPyB1bmRlZmluZWQgOiBKU09OLnBhcnNlKHJlcS5ib2R5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVxLmJvZHk7XG4gICAgfSBjYXRjaCAoY2F1c2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICAgICAgICBjb2RlOiAnUEFSU0VfRVJST1InLFxuICAgICAgICAgICAgY2F1c2VcbiAgICAgICAgfSk7XG4gICAgfVxufVxuY29uc3QgZGVzZXJpYWxpemVJbnB1dFZhbHVlID0gKHJhd1ZhbHVlLCB0cmFuc2Zvcm1lcik9PntcbiAgICByZXR1cm4gdHlwZW9mIHJhd1ZhbHVlICE9PSAndW5kZWZpbmVkJyA/IHRyYW5zZm9ybWVyLmlucHV0LmRlc2VyaWFsaXplKHJhd1ZhbHVlKSA6IHJhd1ZhbHVlO1xufTtcbmNvbnN0IGdldEpzb25Db250ZW50VHlwZUlucHV0cyA9IChvcHRzKT0+e1xuICAgIGNvbnN0IHJhd0lucHV0ID0gZ2V0UmF3UHJvY2VkdXJlSW5wdXRPclRocm93KG9wdHMpO1xuICAgIGNvbnN0IHRyYW5zZm9ybWVyID0gb3B0cy5yb3V0ZXIuX2RlZi5fY29uZmlnLnRyYW5zZm9ybWVyO1xuICAgIGlmICghb3B0cy5pc0JhdGNoQ2FsbCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgMDogZGVzZXJpYWxpemVJbnB1dFZhbHVlKHJhd0lucHV0LCB0cmFuc2Zvcm1lcilcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqLyBpZiAocmF3SW5wdXQgPT0gbnVsbCB8fCB0eXBlb2YgcmF3SW5wdXQgIT09ICdvYmplY3QnIHx8IEFycmF5LmlzQXJyYXkocmF3SW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgICAgY29kZTogJ0JBRF9SRVFVRVNUJyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdcImlucHV0XCIgbmVlZHMgdG8gYmUgYW4gb2JqZWN0IHdoZW4gZG9pbmcgYSBiYXRjaCBjYWxsJ1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgaW5wdXQgPSB7fTtcbiAgICBmb3IoY29uc3Qga2V5IGluIHJhd0lucHV0KXtcbiAgICAgICAgY29uc3QgayA9IGtleTtcbiAgICAgICAgY29uc3QgcmF3VmFsdWUgPSByYXdJbnB1dFtrXTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBkZXNlcmlhbGl6ZUlucHV0VmFsdWUocmF3VmFsdWUsIHRyYW5zZm9ybWVyKTtcbiAgICAgICAgaW5wdXRba10gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGlucHV0O1xufTtcblxuZXhwb3J0IHsgZ2V0SnNvbkNvbnRlbnRUeXBlSW5wdXRzIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getCauseFromUnknown)\n/* harmony export */ });\n/**\n * @internal\n */ function isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\nclass UnknownCauseError extends Error {\n}\nfunction getCauseFromUnknown(cause) {\n    if (cause instanceof Error) {\n        return cause;\n    }\n    const type = typeof cause;\n    if (type === 'undefined' || type === 'function' || cause === null) {\n        return undefined;\n    }\n    // Primitive types just get wrapped in an error\n    if (type !== 'object') {\n        return new Error(String(cause));\n    }\n    // If it's an object, we'll create a synthetic error\n    if (isObject(cause)) {\n        const err = new UnknownCauseError();\n        for(const key in cause){\n            err[key] = cause[key];\n        }\n        return err;\n    }\n    return undefined;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanM/YWE3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gICAgLy8gY2hlY2sgdGhhdCB2YWx1ZSBpcyBvYmplY3RcbiAgICByZXR1cm4gISF2YWx1ZSAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jztcbn1cblxuY2xhc3MgVW5rbm93bkNhdXNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5mdW5jdGlvbiBnZXRDYXVzZUZyb21Vbmtub3duKGNhdXNlKSB7XG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGNhdXNlO1xuICAgIH1cbiAgICBjb25zdCB0eXBlID0gdHlwZW9mIGNhdXNlO1xuICAgIGlmICh0eXBlID09PSAndW5kZWZpbmVkJyB8fCB0eXBlID09PSAnZnVuY3Rpb24nIHx8IGNhdXNlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIFByaW1pdGl2ZSB0eXBlcyBqdXN0IGdldCB3cmFwcGVkIGluIGFuIGVycm9yXG4gICAgaWYgKHR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoU3RyaW5nKGNhdXNlKSk7XG4gICAgfVxuICAgIC8vIElmIGl0J3MgYW4gb2JqZWN0LCB3ZSdsbCBjcmVhdGUgYSBzeW50aGV0aWMgZXJyb3JcbiAgICBpZiAoaXNPYmplY3QoY2F1c2UpKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBVbmtub3duQ2F1c2VFcnJvcigpO1xuICAgICAgICBmb3IoY29uc3Qga2V5IGluIGNhdXNlKXtcbiAgICAgICAgICAgIGVycltrZXldID0gY2F1c2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgeyBnZXRDYXVzZUZyb21Vbmtub3duIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/index-f91d720c.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   a: () => (/* binding */ createRecursiveProxy),\n/* harmony export */   b: () => (/* binding */ getHTTPStatusCode),\n/* harmony export */   c: () => (/* binding */ createFlatProxy),\n/* harmony export */   g: () => (/* binding */ getHTTPStatusCodeFromError)\n/* harmony export */ });\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\nconst TRPC_ERROR_CODES_BY_NUMBER = (0,_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.i)(_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.T);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgtZjkxZDcyMGMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRjs7QUFFakYsbUNBQW1DLHNEQUFNLENBQUMsa0RBQXVCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRXFKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgtZjkxZDcyMGMubWpzP2U0ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaSBhcyBpbnZlcnQsIFQgYXMgVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgfSBmcm9tICcuL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG5cbmNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSID0gaW52ZXJ0KFRSUENfRVJST1JfQ09ERVNfQllfS0VZKTtcbmNvbnN0IEpTT05SUEMyX1RPX0hUVFBfQ09ERSA9IHtcbiAgICBQQVJTRV9FUlJPUjogNDAwLFxuICAgIEJBRF9SRVFVRVNUOiA0MDAsXG4gICAgVU5BVVRIT1JJWkVEOiA0MDEsXG4gICAgTk9UX0ZPVU5EOiA0MDQsXG4gICAgRk9SQklEREVOOiA0MDMsXG4gICAgTUVUSE9EX05PVF9TVVBQT1JURUQ6IDQwNSxcbiAgICBUSU1FT1VUOiA0MDgsXG4gICAgQ09ORkxJQ1Q6IDQwOSxcbiAgICBQUkVDT05ESVRJT05fRkFJTEVEOiA0MTIsXG4gICAgUEFZTE9BRF9UT09fTEFSR0U6IDQxMyxcbiAgICBVTlBST0NFU1NBQkxFX0NPTlRFTlQ6IDQyMixcbiAgICBUT09fTUFOWV9SRVFVRVNUUzogNDI5LFxuICAgIENMSUVOVF9DTE9TRURfUkVRVUVTVDogNDk5LFxuICAgIElOVEVSTkFMX1NFUlZFUl9FUlJPUjogNTAwLFxuICAgIE5PVF9JTVBMRU1FTlRFRDogNTAxXG59O1xuZnVuY3Rpb24gZ2V0U3RhdHVzQ29kZUZyb21LZXkoY29kZSkge1xuICAgIHJldHVybiBKU09OUlBDMl9UT19IVFRQX0NPREVbY29kZV0gPz8gNTAwO1xufVxuZnVuY3Rpb24gZ2V0SFRUUFN0YXR1c0NvZGUoanNvbikge1xuICAgIGNvbnN0IGFyciA9IEFycmF5LmlzQXJyYXkoanNvbikgPyBqc29uIDogW1xuICAgICAgICBqc29uXG4gICAgXTtcbiAgICBjb25zdCBodHRwU3RhdHVzZXMgPSBuZXcgU2V0KGFyci5tYXAoKHJlcyk9PntcbiAgICAgICAgaWYgKCdlcnJvcicgaW4gcmVzKSB7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmVycm9yLmRhdGE7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGRhdGEuaHR0cFN0YXR1cyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5odHRwU3RhdHVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgY29kZSA9IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSW3Jlcy5lcnJvci5jb2RlXTtcbiAgICAgICAgICAgIHJldHVybiBnZXRTdGF0dXNDb2RlRnJvbUtleShjb2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMjAwO1xuICAgIH0pKTtcbiAgICBpZiAoaHR0cFN0YXR1c2VzLnNpemUgIT09IDEpIHtcbiAgICAgICAgcmV0dXJuIDIwNztcbiAgICB9XG4gICAgY29uc3QgaHR0cFN0YXR1cyA9IGh0dHBTdGF0dXNlcy52YWx1ZXMoKS5uZXh0KCkudmFsdWU7XG4gICAgcmV0dXJuIGh0dHBTdGF0dXM7XG59XG5mdW5jdGlvbiBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvcihlcnJvcikge1xuICAgIHJldHVybiBnZXRTdGF0dXNDb2RlRnJvbUtleShlcnJvci5jb2RlKTtcbn1cblxuY29uc3Qgbm9vcCA9ICgpPT57XG4vLyBub29wXG59O1xuZnVuY3Rpb24gY3JlYXRlSW5uZXJQcm94eShjYWxsYmFjaywgcGF0aCkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KG5vb3AsIHtcbiAgICAgICAgZ2V0IChfb2JqLCBrZXkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJyB8fCBrZXkgPT09ICd0aGVuJykge1xuICAgICAgICAgICAgICAgIC8vIHNwZWNpYWwgY2FzZSBmb3IgaWYgdGhlIHByb3h5IGlzIGFjY2lkZW50YWxseSB0cmVhdGVkXG4gICAgICAgICAgICAgICAgLy8gbGlrZSBhIFByb21pc2VMaWtlIChsaWtlIGluIGBQcm9taXNlLnJlc29sdmUocHJveHkpYClcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIFtcbiAgICAgICAgICAgICAgICAuLi5wYXRoLFxuICAgICAgICAgICAgICAgIGtleVxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFwcGx5IChfMSwgXzIsIGFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzQXBwbHkgPSBwYXRoW3BhdGgubGVuZ3RoIC0gMV0gPT09ICdhcHBseSc7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIGFyZ3M6IGlzQXBwbHkgPyBhcmdzLmxlbmd0aCA+PSAyID8gYXJnc1sxXSA6IFtdIDogYXJncyxcbiAgICAgICAgICAgICAgICBwYXRoOiBpc0FwcGx5ID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBwcm94eTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIHByb3h5IHRoYXQgY2FsbHMgdGhlIGNhbGxiYWNrIHdpdGggdGhlIHBhdGggYW5kIGFyZ3VtZW50c1xuICpcbiAqIEBpbnRlcm5hbFxuICovIGNvbnN0IGNyZWF0ZVJlY3Vyc2l2ZVByb3h5ID0gKGNhbGxiYWNrKT0+Y3JlYXRlSW5uZXJQcm94eShjYWxsYmFjaywgW10pO1xuLyoqXG4gKiBVc2VkIGluIHBsYWNlIG9mIGBuZXcgUHJveHlgIHdoZXJlIGVhY2ggaGFuZGxlciB3aWxsIG1hcCAxIGxldmVsIGRlZXAgdG8gYW5vdGhlciB2YWx1ZS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqLyBjb25zdCBjcmVhdGVGbGF0UHJveHkgPSAoY2FsbGJhY2spPT57XG4gICAgcmV0dXJuIG5ldyBQcm94eShub29wLCB7XG4gICAgICAgIGdldCAoX29iaiwgbmFtZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyB8fCBuYW1lID09PSAndGhlbicpIHtcbiAgICAgICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgZm9yIGlmIHRoZSBwcm94eSBpcyBhY2NpZGVudGFsbHkgdHJlYXRlZFxuICAgICAgICAgICAgICAgIC8vIGxpa2UgYSBQcm9taXNlTGlrZSAobGlrZSBpbiBgUHJvbWlzZS5yZXNvbHZlKHByb3h5KWApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhuYW1lKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxuZXhwb3J0IHsgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgYXMgVCwgY3JlYXRlUmVjdXJzaXZlUHJveHkgYXMgYSwgZ2V0SFRUUFN0YXR1c0NvZGUgYXMgYiwgY3JlYXRlRmxhdFByb3h5IGFzIGMsIGdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@trpc/server/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCError: () => (/* reexport safe */ _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T),\n/* harmony export */   callProcedure: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   createCallerFactory: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   createInputMiddleware: () => (/* binding */ createInputMiddleware),\n/* harmony export */   createOutputMiddleware: () => (/* binding */ createOutputMiddleware),\n/* harmony export */   defaultTransformer: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   experimental_standaloneMiddleware: () => (/* binding */ experimental_standaloneMiddleware),\n/* harmony export */   getDataTransformer: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   getTRPCErrorFromUnknown: () => (/* reexport safe */ _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   initTRPC: () => (/* binding */ initTRPC),\n/* harmony export */   procedureTypes: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   router: () => (/* binding */ router)\n/* harmony export */ });\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-d5fdbd39.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n\n\n\n\n\n\n\n\n/**\n * @deprecated\n */ const middlewareMarker$1 = 'middlewareMarker';\n\nfunction getParseFn$1(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ProcedureParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ProcedureParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ProcedureParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @internal\n * @deprecated\n */ class Procedure {\n    _def() {\n        return {\n            middlewares: this.middlewares,\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        };\n    }\n    async parseInput(rawInput) {\n        try {\n            return await this.parseInputFn(rawInput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n    }\n    async parseOutput(rawOutput) {\n        try {\n            return await this.parseOutputFn(rawOutput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                cause,\n                message: 'Output validation failed'\n            });\n        }\n    }\n    /**\n   * Trigger middlewares in order, parse raw input, call resolver & parse raw output\n   * @internal\n   */ async call(opts) {\n        // wrap the actual resolver and treat as the last \"middleware\"\n        const middlewaresWithResolver = this.middlewares.concat([\n            async ({ ctx  })=>{\n                const input = await this.parseInput(opts.rawInput);\n                const rawOutput = await this.resolver({\n                    ...opts,\n                    ctx,\n                    input\n                });\n                const data = await this.parseOutput(rawOutput);\n                return {\n                    marker: middlewareMarker$1,\n                    ok: true,\n                    data,\n                    ctx\n                };\n            }\n        ]);\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const result = await middlewaresWithResolver[callOpts.index]({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: opts.rawInput,\n                    meta: this.meta,\n                    next: async (nextOpts)=>{\n                        return await callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts ? nextOpts.ctx : callOpts.ctx\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ctx: callOpts.ctx,\n                    ok: false,\n                    error: (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause),\n                    marker: middlewareMarker$1\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    }\n    /**\n   * Create new procedure with passed middlewares\n   * @param middlewares\n   */ inheritMiddlewares(middlewares) {\n        const Constructor = this.constructor;\n        const instance = new Constructor({\n            middlewares: [\n                ...middlewares,\n                ...this.middlewares\n            ],\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        });\n        return instance;\n    }\n    constructor(opts){\n        this.middlewares = opts.middlewares;\n        this.resolver = opts.resolver;\n        this.inputParser = opts.inputParser;\n        this.parseInputFn = getParseFn$1(this.inputParser);\n        this.outputParser = opts.outputParser;\n        this.parseOutputFn = getParseFn$1(this.outputParser);\n        this.meta = opts.meta;\n    }\n}\nfunction createProcedure(opts) {\n    const inputParser = 'input' in opts ? opts.input : (input)=>{\n        if (input != null) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                message: 'No input expected'\n            });\n        }\n        return undefined;\n    };\n    const outputParser = 'output' in opts && opts.output ? opts.output : (output)=>output;\n    return new Procedure({\n        inputParser: inputParser,\n        resolver: opts.resolve,\n        middlewares: [],\n        outputParser: outputParser,\n        meta: opts.meta\n    });\n}\n\nfunction getParseFn(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ParserZodEsque\n        // ParserValibotEsque (<= v0.12.X)\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    if (typeof parser.assert === 'function') {\n        // ParserScaleEsque\n        return (value)=>{\n            parser.assert(value);\n            return value;\n        };\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @deprecated only for backwards compat\n * @internal\n */ function getParseFnOrPassThrough(procedureParser) {\n    if (!procedureParser) {\n        return (v)=>v;\n    }\n    return getParseFn(procedureParser);\n}\n\n/**\n * Ensures there are no duplicate keys when building a procedure.\n */ function mergeWithoutOverrides(obj1, ...objs) {\n    const newObj = Object.assign(Object.create(null), obj1);\n    for (const overrides of objs){\n        for(const key in overrides){\n            if (key in newObj && newObj[key] !== overrides[key]) {\n                throw new Error(`Duplicate key ${key}`);\n            }\n            newObj[key] = overrides[key];\n        }\n    }\n    return newObj;\n}\n\n/**\n * @internal\n */ function createMiddlewareFactory() {\n    function createMiddlewareInner(middlewares) {\n        return {\n            _middlewares: middlewares,\n            unstable_pipe (middlewareBuilderOrFn) {\n                const pipedMiddleware = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                    middlewareBuilderOrFn\n                ];\n                return createMiddlewareInner([\n                    ...middlewares,\n                    ...pipedMiddleware\n                ]);\n            }\n        };\n    }\n    function createMiddleware(fn) {\n        return createMiddlewareInner([\n            fn\n        ]);\n    }\n    return createMiddleware;\n}\nconst experimental_standaloneMiddleware = ()=>({\n        create: createMiddlewareFactory()\n    });\nfunction isPlainObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n/**\n * @internal\n * Please note, `trpc-openapi` uses this function.\n */ function createInputMiddleware(parse) {\n    const inputMiddleware = async ({ next , rawInput , input ,  })=>{\n        let parsedInput;\n        try {\n            parsedInput = await parse(rawInput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n        // Multiple input parsers\n        const combinedInput = isPlainObject(input) && isPlainObject(parsedInput) ? {\n            ...input,\n            ...parsedInput\n        } : parsedInput;\n        // TODO fix this typing?\n        return next({\n            input: combinedInput\n        });\n    };\n    inputMiddleware._type = 'input';\n    return inputMiddleware;\n}\n/**\n * @internal\n */ function createOutputMiddleware(parse) {\n    const outputMiddleware = async ({ next  })=>{\n        const result = await next();\n        if (!result.ok) {\n            // pass through failures without validating\n            return result;\n        }\n        try {\n            const data = await parse(result.data);\n            return {\n                ...result,\n                data\n            };\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: 'Output validation failed',\n                code: 'INTERNAL_SERVER_ERROR',\n                cause\n            });\n        }\n    };\n    outputMiddleware._type = 'output';\n    return outputMiddleware;\n}\n\n/**\n * @internal\n */ const middlewareMarker = 'middlewareMarker';\n\nfunction createNewBuilder(def1, def2) {\n    const { middlewares =[] , inputs , meta , ...rest } = def2;\n    // TODO: maybe have a fn here to warn about calls\n    return createBuilder({\n        ...mergeWithoutOverrides(def1, rest),\n        inputs: [\n            ...def1.inputs,\n            ...inputs ?? []\n        ],\n        middlewares: [\n            ...def1.middlewares,\n            ...middlewares\n        ],\n        meta: def1.meta && meta ? {\n            ...def1.meta,\n            ...meta\n        } : meta ?? def1.meta\n    });\n}\nfunction createBuilder(initDef = {}) {\n    const _def = {\n        inputs: [],\n        middlewares: [],\n        ...initDef\n    };\n    return {\n        _def,\n        input (input) {\n            const parser = getParseFn(input);\n            return createNewBuilder(_def, {\n                inputs: [\n                    input\n                ],\n                middlewares: [\n                    createInputMiddleware(parser)\n                ]\n            });\n        },\n        output (output) {\n            const parseOutput = getParseFn(output);\n            return createNewBuilder(_def, {\n                output,\n                middlewares: [\n                    createOutputMiddleware(parseOutput)\n                ]\n            });\n        },\n        meta (meta) {\n            return createNewBuilder(_def, {\n                meta: meta\n            });\n        },\n        /**\n     * @deprecated\n     * This functionality is deprecated and will be removed in the next major version.\n     */ unstable_concat (builder) {\n            return createNewBuilder(_def, builder._def);\n        },\n        use (middlewareBuilderOrFn) {\n            // Distinguish between a middleware builder and a middleware function\n            const middlewares = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                middlewareBuilderOrFn\n            ];\n            return createNewBuilder(_def, {\n                middlewares: middlewares\n            });\n        },\n        query (resolver) {\n            return createResolver({\n                ..._def,\n                query: true\n            }, resolver);\n        },\n        mutation (resolver) {\n            return createResolver({\n                ..._def,\n                mutation: true\n            }, resolver);\n        },\n        subscription (resolver) {\n            return createResolver({\n                ..._def,\n                subscription: true\n            }, resolver);\n        }\n    };\n}\nfunction createResolver(_def, resolver) {\n    const finalBuilder = createNewBuilder(_def, {\n        resolver,\n        middlewares: [\n            async function resolveMiddleware(opts) {\n                const data = await resolver(opts);\n                return {\n                    marker: middlewareMarker,\n                    ok: true,\n                    data,\n                    ctx: opts.ctx\n                };\n            }\n        ]\n    });\n    return createProcedureCaller(finalBuilder._def);\n}\nconst codeblock = `\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/server/server-side-calls\n`.trim();\nfunction createProcedureCaller(_def) {\n    const procedure = async function resolve(opts) {\n        // is direct server-side call\n        if (!opts || !('rawInput' in opts)) {\n            throw new Error(codeblock);\n        }\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const middleware = _def.middlewares[callOpts.index];\n                const result = await middleware({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: callOpts.rawInput ?? opts.rawInput,\n                    meta: _def.meta,\n                    input: callOpts.input,\n                    next (_nextOpts) {\n                        const nextOpts = _nextOpts;\n                        return callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts && 'ctx' in nextOpts ? {\n                                ...callOpts.ctx,\n                                ...nextOpts.ctx\n                            } : callOpts.ctx,\n                            input: nextOpts && 'input' in nextOpts ? nextOpts.input : callOpts.input,\n                            rawInput: nextOpts && 'rawInput' in nextOpts ? nextOpts.rawInput : callOpts.rawInput\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ok: false,\n                    error: (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause),\n                    marker: middlewareMarker\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    };\n    procedure._def = _def;\n    procedure.meta = _def.meta;\n    return procedure;\n}\n\nfunction migrateProcedure(oldProc, type) {\n    const def = oldProc._def();\n    const inputParser = getParseFnOrPassThrough(def.inputParser);\n    const outputParser = getParseFnOrPassThrough(def.outputParser);\n    const inputMiddleware = createInputMiddleware(inputParser);\n    const builder = createBuilder({\n        inputs: [\n            def.inputParser\n        ],\n        middlewares: [\n            ...def.middlewares,\n            inputMiddleware,\n            createOutputMiddleware(outputParser)\n        ],\n        meta: def.meta,\n        output: def.outputParser,\n        mutation: type === 'mutation',\n        query: type === 'query',\n        subscription: type === 'subscription'\n    });\n    const proc = builder[type]((opts)=>def.resolver(opts));\n    return proc;\n}\nfunction migrateRouter(oldRouter) {\n    const errorFormatter = oldRouter._def.errorFormatter;\n    const transformer = oldRouter._def.transformer;\n    const queries = {};\n    const mutations = {};\n    const subscriptions = {};\n    for (const [name, procedure] of Object.entries(oldRouter._def.queries)){\n        queries[name] = migrateProcedure(procedure, 'query');\n    }\n    for (const [name1, procedure1] of Object.entries(oldRouter._def.mutations)){\n        mutations[name1] = migrateProcedure(procedure1, 'mutation');\n    }\n    for (const [name2, procedure2] of Object.entries(oldRouter._def.subscriptions)){\n        subscriptions[name2] = migrateProcedure(procedure2, 'subscription');\n    }\n    const procedures = mergeWithoutOverrides(queries, mutations, subscriptions);\n    const newRouter = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)({\n        transformer,\n        errorFormatter,\n        isDev: \"development\" !== 'production'\n    })(procedures);\n    return newRouter;\n}\n\nfunction getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\nconst PROCEDURE_DEFINITION_MAP = {\n    query: 'queries',\n    mutation: 'mutations',\n    subscription: 'subscriptions'\n};\nfunction safeObject(...args) {\n    return Object.assign(Object.create(null), ...args);\n}\n/**\n * @internal The type signature of this class may change without warning.\n * @deprecated\n */ class Router {\n    static prefixProcedures(procedures, prefix) {\n        const eps = safeObject();\n        for (const [key, procedure] of Object.entries(procedures)){\n            eps[prefix + key] = procedure;\n        }\n        return eps;\n    }\n    query(path, procedure) {\n        const router = new Router({\n            queries: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    mutation(path, procedure) {\n        const router = new Router({\n            mutations: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    subscription(path, procedure) {\n        const router = new Router({\n            subscriptions: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    merge(prefixOrRouter, maybeRouter) {\n        let prefix = '';\n        let childRouter;\n        if (typeof prefixOrRouter === 'string' && maybeRouter instanceof Router) {\n            prefix = prefixOrRouter;\n            childRouter = maybeRouter;\n        } else if (prefixOrRouter instanceof Router) {\n            childRouter = prefixOrRouter;\n        } else {\n            throw new Error('Invalid args');\n        }\n        const duplicateQueries = Object.keys(childRouter._def.queries).filter((key)=>!!this._def.queries[prefix + key]);\n        const duplicateMutations = Object.keys(childRouter._def.mutations).filter((key)=>!!this._def.mutations[prefix + key]);\n        const duplicateSubscriptions = Object.keys(childRouter._def.subscriptions).filter((key)=>!!this._def.subscriptions[prefix + key]);\n        const duplicates = [\n            ...duplicateQueries,\n            ...duplicateMutations,\n            ...duplicateSubscriptions\n        ];\n        if (duplicates.length) {\n            throw new Error(`Duplicate endpoint(s): ${duplicates.join(', ')}`);\n        }\n        const mergeProcedures = (defs)=>{\n            const newDefs = safeObject();\n            for (const [key, procedure] of Object.entries(defs)){\n                const newProcedure = procedure.inheritMiddlewares(this._def.middlewares);\n                newDefs[key] = newProcedure;\n            }\n            return Router.prefixProcedures(newDefs, prefix);\n        };\n        return new Router({\n            ...this._def,\n            queries: safeObject(this._def.queries, mergeProcedures(childRouter._def.queries)),\n            mutations: safeObject(this._def.mutations, mergeProcedures(childRouter._def.mutations)),\n            subscriptions: safeObject(this._def.subscriptions, mergeProcedures(childRouter._def.subscriptions))\n        });\n    }\n    /**\n   * Invoke procedure. Only for internal use within library.\n   */ async call(opts) {\n        const { type , path  } = opts;\n        const defTarget = PROCEDURE_DEFINITION_MAP[type];\n        const defs = this._def[defTarget];\n        const procedure = defs[path];\n        if (!procedure) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'NOT_FOUND',\n                message: `No \"${type}\"-procedure on path \"${path}\"`\n            });\n        }\n        return procedure.call(opts);\n    }\n    createCaller(ctx) {\n        return {\n            query: (path, ...args)=>{\n                return this.call({\n                    type: 'query',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            mutation: (path, ...args)=>{\n                return this.call({\n                    type: 'mutation',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            subscription: (path, ...args)=>{\n                return this.call({\n                    type: 'subscription',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            }\n        };\n    }\n    /**\n   * Function to be called before any procedure is invoked\n   * @link https://trpc.io/docs/middlewares\n   */ middleware(middleware) {\n        return new Router({\n            ...this._def,\n            middlewares: [\n                ...this._def.middlewares,\n                middleware\n            ]\n        });\n    }\n    /**\n   * Format errors\n   * @link https://trpc.io/docs/error-formatting\n   */ formatError(errorFormatter) {\n        if (this._def.errorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d) {\n            throw new Error('You seem to have double `formatError()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            errorFormatter: errorFormatter\n        });\n    }\n    getErrorShape(opts) {\n        const { path , error  } = opts;\n        const { code  } = opts.error;\n        const shape = {\n            message: error.message,\n            code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__.T[code],\n            data: {\n                code,\n                httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__.g)(error)\n            }\n        };\n        if (globalThis.process?.env?.NODE_ENV !== 'production' && typeof opts.error.stack === 'string') {\n            shape.data.stack = opts.error.stack;\n        }\n        if (typeof path === 'string') {\n            shape.data.path = path;\n        }\n        return this._def.errorFormatter({\n            ...opts,\n            shape\n        });\n    }\n    /**\n   * Add data transformer to serialize/deserialize input args + output\n   * @link https://trpc.io/docs/data-transformers\n   */ transformer(_transformer) {\n        const transformer = getDataTransformer(_transformer);\n        if (this._def.transformer !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a) {\n            throw new Error('You seem to have double `transformer()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            transformer\n        });\n    }\n    /**\n   * Flattens the generics of TQueries/TMutations/TSubscriptions.\n   * ⚠️ Experimental - might disappear. ⚠️\n   *\n   * @alpha\n   */ flat() {\n        return this;\n    }\n    /**\n   * Interop mode for v9.x -> v10.x\n   */ interop() {\n        return migrateRouter(this);\n    }\n    constructor(def){\n        this._def = {\n            queries: def?.queries ?? safeObject(),\n            mutations: def?.mutations ?? safeObject(),\n            subscriptions: def?.subscriptions ?? safeObject(),\n            middlewares: def?.middlewares ?? [],\n            errorFormatter: def?.errorFormatter ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d,\n            transformer: def?.transformer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a\n        };\n    }\n}\n/**\n * @deprecated\n */ function router() {\n    return new Router();\n}\n\nfunction mergeRouters(...routerList) {\n    const record = mergeWithoutOverrides({}, ...routerList.map((r)=>r._def.record));\n    const errorFormatter = routerList.reduce((currentErrorFormatter, nextRouter)=>{\n        if (nextRouter._def._config.errorFormatter && nextRouter._def._config.errorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d) {\n            if (currentErrorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d && currentErrorFormatter !== nextRouter._def._config.errorFormatter) {\n                throw new Error('You seem to have several error formatters');\n            }\n            return nextRouter._def._config.errorFormatter;\n        }\n        return currentErrorFormatter;\n    }, _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d);\n    const transformer = routerList.reduce((prev, current)=>{\n        if (current._def._config.transformer && current._def._config.transformer !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a) {\n            if (prev !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a && prev !== current._def._config.transformer) {\n                throw new Error('You seem to have several transformers');\n            }\n            return current._def._config.transformer;\n        }\n        return prev;\n    }, _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a);\n    const router = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)({\n        errorFormatter,\n        transformer,\n        isDev: routerList.some((r)=>r._def._config.isDev),\n        allowOutsideOfServer: routerList.some((r)=>r._def._config.allowOutsideOfServer),\n        isServer: routerList.some((r)=>r._def._config.isServer),\n        $types: routerList[0]?._def._config.$types\n    })(record);\n    return router;\n}\n\n/**\n * TODO: This can be improved:\n * - We should be able to chain `.meta()`/`.context()` only once\n * - Simplify typings\n * - Doesn't need to be a class but it doesn't really hurt either\n */ class TRPCBuilder {\n    context() {\n        return new TRPCBuilder();\n    }\n    meta() {\n        return new TRPCBuilder();\n    }\n    create(options) {\n        return createTRPCInner()(options);\n    }\n}\n/**\n * Initialize tRPC - done exactly once per backend\n */ const initTRPC = new TRPCBuilder();\nfunction createTRPCInner() {\n    return function initTRPCInner(runtime) {\n        const errorFormatter = runtime?.errorFormatter ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d;\n        const transformer = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(runtime?.transformer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a);\n        const config = {\n            transformer,\n            isDev: runtime?.isDev ?? globalThis.process?.env?.NODE_ENV !== 'production',\n            allowOutsideOfServer: runtime?.allowOutsideOfServer ?? false,\n            errorFormatter,\n            isServer: runtime?.isServer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.i,\n            /**\n       * @internal\n       */ $types: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__.c)((key)=>{\n                throw new Error(`Tried to access \"$types.${key}\" which is not available at runtime`);\n            })\n        };\n        {\n            // Server check\n            const isServer = runtime?.isServer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.i;\n            if (!isServer && runtime?.allowOutsideOfServer !== true) {\n                throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n            }\n        }\n        return {\n            /**\n       * These are just types, they can't be used\n       * @internal\n       */ _config: config,\n            /**\n       * Builder object for creating procedures\n       * @see https://trpc.io/docs/server/procedures\n       */ procedure: createBuilder({\n                meta: runtime?.defaultMeta\n            }),\n            /**\n       * Create reusable middlewares\n       * @see https://trpc.io/docs/server/middlewares\n       */ middleware: createMiddlewareFactory(),\n            /**\n       * Create a router\n       * @see https://trpc.io/docs/server/routers\n       */ router: (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)(config),\n            /**\n       * Merge Routers\n       * @see https://trpc.io/docs/server/merging-routers\n       */ mergeRouters,\n            /**\n       * Create a server-side caller for a router\n       * @see https://trpc.io/docs/server/server-side-calls\n       */ createCallerFactory: (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.b)()\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRMO0FBQ2hDO0FBQ3BFO0FBQ0E7QUFDSztBQUN6QjtBQUN4Qjs7QUFFNUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLHNCQUFzQixzREFBUztBQUMvQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0JBQXNCLHNEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQU07QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBEQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBUztBQUMvQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQVM7QUFDL0I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELElBQUk7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsNEJBQTRCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzQkFBc0Isc0RBQVM7QUFDL0I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxPQUFPO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0JBQXNCLHNEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksNENBQTRDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsS0FBSztBQUNMO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSwyQkFBMkIsMERBQXVCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFTO0FBQy9CO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1REFBbUI7QUFDekM7QUFDQTtBQUNBLGVBQWUsYUFBb0I7QUFDbkMsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxzQkFBc0I7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFTO0FBQy9CO0FBQ0EsZ0NBQWdDLEtBQUssdUJBQXVCLEtBQUs7QUFDakUsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsbURBQWdCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEMsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBLGtCQUFrQixrREFBdUI7QUFDekM7QUFDQTtBQUNBLDRCQUE0QixzREFBMEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsbURBQWtCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxtREFBZ0I7QUFDbkUsNkNBQTZDLG1EQUFrQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0EsaUdBQWlHLG1EQUFnQjtBQUNqSCwwQ0FBMEMsbURBQWdCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEVBQUUsbURBQWdCO0FBQ3ZCO0FBQ0EscUZBQXFGLG1EQUFrQjtBQUN2Ryx5QkFBeUIsbURBQWtCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEVBQUUsbURBQWtCO0FBQ3pCLG1CQUFtQix1REFBbUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELG1EQUFnQjtBQUMxRSw0QkFBNEIsdURBQW9CLHlCQUF5QixtREFBa0I7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtREFBZTtBQUMxRDtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFlO0FBQ2pDLDJEQUEyRCxJQUFJO0FBQy9ELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsbURBQWU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsdURBQW1CO0FBQ2xEO0FBQ0E7QUFDQTs7QUFFOEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90My10dXJzby10b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9pbmRleC5tanM/NjZlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjIGFzIGNyZWF0ZVJvdXRlckZhY3RvcnksIGQgYXMgZGVmYXVsdEZvcm1hdHRlciwgYSBhcyBkZWZhdWx0VHJhbnNmb3JtZXIsIGcgYXMgZ2V0RGF0YVRyYW5zZm9ybWVyJDEsIGkgYXMgaXNTZXJ2ZXJEZWZhdWx0LCBiIGFzIGNyZWF0ZUNhbGxlckZhY3RvcnkgfSBmcm9tICcuL2NvbmZpZy1kNWZkYmQzOS5tanMnO1xuZXhwb3J0IHsgZSBhcyBjYWxsUHJvY2VkdXJlLCBiIGFzIGNyZWF0ZUNhbGxlckZhY3RvcnksIGEgYXMgZGVmYXVsdFRyYW5zZm9ybWVyLCBnIGFzIGdldERhdGFUcmFuc2Zvcm1lciwgcCBhcyBwcm9jZWR1cmVUeXBlcyB9IGZyb20gJy4vY29uZmlnLWQ1ZmRiZDM5Lm1qcyc7XG5pbXBvcnQgeyBUIGFzIFRSUENFcnJvciwgZyBhcyBnZXRUUlBDRXJyb3JGcm9tVW5rbm93biB9IGZyb20gJy4vVFJQQ0Vycm9yLTk4ZDQ0NzU4Lm1qcyc7XG5leHBvcnQgeyBUIGFzIFRSUENFcnJvciwgZyBhcyBnZXRUUlBDRXJyb3JGcm9tVW5rbm93biB9IGZyb20gJy4vVFJQQ0Vycm9yLTk4ZDQ0NzU4Lm1qcyc7XG5pbXBvcnQgeyBnIGFzIGdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yLCBjIGFzIGNyZWF0ZUZsYXRQcm94eSB9IGZyb20gJy4vaW5kZXgtZjkxZDcyMGMubWpzJztcbmltcG9ydCB7IFQgYXMgVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgfSBmcm9tICcuL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG5pbXBvcnQgJy4vZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkXG4gKi8gY29uc3QgbWlkZGxld2FyZU1hcmtlciQxID0gJ21pZGRsZXdhcmVNYXJrZXInO1xuXG5mdW5jdGlvbiBnZXRQYXJzZUZuJDEocHJvY2VkdXJlUGFyc2VyKSB7XG4gICAgY29uc3QgcGFyc2VyID0gcHJvY2VkdXJlUGFyc2VyO1xuICAgIGlmICh0eXBlb2YgcGFyc2VyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIFByb2NlZHVyZVBhcnNlckN1c3RvbVZhbGlkYXRvckVzcXVlXG4gICAgICAgIHJldHVybiBwYXJzZXI7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyc2VyLnBhcnNlQXN5bmMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUHJvY2VkdXJlUGFyc2VyWm9kRXNxdWVcbiAgICAgICAgcmV0dXJuIHBhcnNlci5wYXJzZUFzeW5jLmJpbmQocGFyc2VyKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIucGFyc2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUHJvY2VkdXJlUGFyc2VyWm9kRXNxdWVcbiAgICAgICAgcmV0dXJuIHBhcnNlci5wYXJzZS5iaW5kKHBhcnNlcik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyc2VyLnZhbGlkYXRlU3luYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBQcm9jZWR1cmVQYXJzZXJZdXBFc3F1ZVxuICAgICAgICByZXR1cm4gcGFyc2VyLnZhbGlkYXRlU3luYy5iaW5kKHBhcnNlcik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyc2VyLmNyZWF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBQcm9jZWR1cmVQYXJzZXJTdXBlcnN0cnVjdEVzcXVlXG4gICAgICAgIHJldHVybiBwYXJzZXIuY3JlYXRlLmJpbmQocGFyc2VyKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBhIHZhbGlkYXRvciBmbicpO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEBkZXByZWNhdGVkXG4gKi8gY2xhc3MgUHJvY2VkdXJlIHtcbiAgICBfZGVmKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWlkZGxld2FyZXM6IHRoaXMubWlkZGxld2FyZXMsXG4gICAgICAgICAgICByZXNvbHZlcjogdGhpcy5yZXNvbHZlcixcbiAgICAgICAgICAgIGlucHV0UGFyc2VyOiB0aGlzLmlucHV0UGFyc2VyLFxuICAgICAgICAgICAgb3V0cHV0UGFyc2VyOiB0aGlzLm91dHB1dFBhcnNlcixcbiAgICAgICAgICAgIG1ldGE6IHRoaXMubWV0YVxuICAgICAgICB9O1xuICAgIH1cbiAgICBhc3luYyBwYXJzZUlucHV0KHJhd0lucHV0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJzZUlucHV0Rm4ocmF3SW5wdXQpO1xuICAgICAgICB9IGNhdGNoIChjYXVzZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogJ0JBRF9SRVFVRVNUJyxcbiAgICAgICAgICAgICAgICBjYXVzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcGFyc2VPdXRwdXQocmF3T3V0cHV0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJzZU91dHB1dEZuKHJhd091dHB1dCk7XG4gICAgICAgIH0gY2F0Y2ggKGNhdXNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgICAgICBjb2RlOiAnSU5URVJOQUxfU0VSVkVSX0VSUk9SJyxcbiAgICAgICAgICAgICAgICBjYXVzZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT3V0cHV0IHZhbGlkYXRpb24gZmFpbGVkJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAqIFRyaWdnZXIgbWlkZGxld2FyZXMgaW4gb3JkZXIsIHBhcnNlIHJhdyBpbnB1dCwgY2FsbCByZXNvbHZlciAmIHBhcnNlIHJhdyBvdXRwdXRcbiAgICogQGludGVybmFsXG4gICAqLyBhc3luYyBjYWxsKG9wdHMpIHtcbiAgICAgICAgLy8gd3JhcCB0aGUgYWN0dWFsIHJlc29sdmVyIGFuZCB0cmVhdCBhcyB0aGUgbGFzdCBcIm1pZGRsZXdhcmVcIlxuICAgICAgICBjb25zdCBtaWRkbGV3YXJlc1dpdGhSZXNvbHZlciA9IHRoaXMubWlkZGxld2FyZXMuY29uY2F0KFtcbiAgICAgICAgICAgIGFzeW5jICh7IGN0eCAgfSk9PntcbiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dCA9IGF3YWl0IHRoaXMucGFyc2VJbnB1dChvcHRzLnJhd0lucHV0KTtcbiAgICAgICAgICAgICAgICBjb25zdCByYXdPdXRwdXQgPSBhd2FpdCB0aGlzLnJlc29sdmVyKHtcbiAgICAgICAgICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgICAgICAgICAgICAgY3R4LFxuICAgICAgICAgICAgICAgICAgICBpbnB1dFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnBhcnNlT3V0cHV0KHJhd091dHB1dCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbWFya2VyOiBtaWRkbGV3YXJlTWFya2VyJDEsXG4gICAgICAgICAgICAgICAgICAgIG9rOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBjdHhcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICBdKTtcbiAgICAgICAgLy8gcnVuIHRoZSBtaWRkbGV3YXJlcyByZWN1cnNpdmVseSB3aXRoIHRoZSByZXNvbHZlciBhcyB0aGUgbGFzdCBvbmVcbiAgICAgICAgY29uc3QgY2FsbFJlY3Vyc2l2ZSA9IGFzeW5jIChjYWxsT3B0cyA9IHtcbiAgICAgICAgICAgIGluZGV4OiAwLFxuICAgICAgICAgICAgY3R4OiBvcHRzLmN0eFxuICAgICAgICB9KT0+e1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1pZGRsZXdhcmVzV2l0aFJlc29sdmVyW2NhbGxPcHRzLmluZGV4XSh7XG4gICAgICAgICAgICAgICAgICAgIGN0eDogY2FsbE9wdHMuY3R4LFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBvcHRzLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IG9wdHMucGF0aCxcbiAgICAgICAgICAgICAgICAgICAgcmF3SW5wdXQ6IG9wdHMucmF3SW5wdXQsXG4gICAgICAgICAgICAgICAgICAgIG1ldGE6IHRoaXMubWV0YSxcbiAgICAgICAgICAgICAgICAgICAgbmV4dDogYXN5bmMgKG5leHRPcHRzKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGNhbGxSZWN1cnNpdmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4OiBjYWxsT3B0cy5pbmRleCArIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R4OiBuZXh0T3B0cyA/IG5leHRPcHRzLmN0eCA6IGNhbGxPcHRzLmN0eFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSBjYXRjaCAoY2F1c2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBjdHg6IGNhbGxPcHRzLmN0eCxcbiAgICAgICAgICAgICAgICAgICAgb2s6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24oY2F1c2UpLFxuICAgICAgICAgICAgICAgICAgICBtYXJrZXI6IG1pZGRsZXdhcmVNYXJrZXIkMVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8vIHRoZXJlJ3MgYWx3YXlzIGF0IGxlYXN0IG9uZSBcIm5leHRcIiBzaW5jZSB3ZSB3cmFwIHRoaXMucmVzb2x2ZXIgaW4gYSBtaWRkbGV3YXJlXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNhbGxSZWN1cnNpdmUoKTtcbiAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6ICdJTlRFUk5BTF9TRVJWRVJfRVJST1InLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdObyByZXN1bHQgZnJvbSBtaWRkbGV3YXJlcyAtIGRpZCB5b3UgZm9yZ2V0IHRvIGByZXR1cm4gbmV4dCgpYD8nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJlc3VsdC5vaykge1xuICAgICAgICAgICAgLy8gcmUtdGhyb3cgb3JpZ2luYWwgZXJyb3JcbiAgICAgICAgICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGE7XG4gICAgfVxuICAgIC8qKlxuICAgKiBDcmVhdGUgbmV3IHByb2NlZHVyZSB3aXRoIHBhc3NlZCBtaWRkbGV3YXJlc1xuICAgKiBAcGFyYW0gbWlkZGxld2FyZXNcbiAgICovIGluaGVyaXRNaWRkbGV3YXJlcyhtaWRkbGV3YXJlcykge1xuICAgICAgICBjb25zdCBDb25zdHJ1Y3RvciA9IHRoaXMuY29uc3RydWN0b3I7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKHtcbiAgICAgICAgICAgIG1pZGRsZXdhcmVzOiBbXG4gICAgICAgICAgICAgICAgLi4ubWlkZGxld2FyZXMsXG4gICAgICAgICAgICAgICAgLi4udGhpcy5taWRkbGV3YXJlc1xuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIHJlc29sdmVyOiB0aGlzLnJlc29sdmVyLFxuICAgICAgICAgICAgaW5wdXRQYXJzZXI6IHRoaXMuaW5wdXRQYXJzZXIsXG4gICAgICAgICAgICBvdXRwdXRQYXJzZXI6IHRoaXMub3V0cHV0UGFyc2VyLFxuICAgICAgICAgICAgbWV0YTogdGhpcy5tZXRhXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG9wdHMpe1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVzID0gb3B0cy5taWRkbGV3YXJlcztcbiAgICAgICAgdGhpcy5yZXNvbHZlciA9IG9wdHMucmVzb2x2ZXI7XG4gICAgICAgIHRoaXMuaW5wdXRQYXJzZXIgPSBvcHRzLmlucHV0UGFyc2VyO1xuICAgICAgICB0aGlzLnBhcnNlSW5wdXRGbiA9IGdldFBhcnNlRm4kMSh0aGlzLmlucHV0UGFyc2VyKTtcbiAgICAgICAgdGhpcy5vdXRwdXRQYXJzZXIgPSBvcHRzLm91dHB1dFBhcnNlcjtcbiAgICAgICAgdGhpcy5wYXJzZU91dHB1dEZuID0gZ2V0UGFyc2VGbiQxKHRoaXMub3V0cHV0UGFyc2VyKTtcbiAgICAgICAgdGhpcy5tZXRhID0gb3B0cy5tZXRhO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZVByb2NlZHVyZShvcHRzKSB7XG4gICAgY29uc3QgaW5wdXRQYXJzZXIgPSAnaW5wdXQnIGluIG9wdHMgPyBvcHRzLmlucHV0IDogKGlucHV0KT0+e1xuICAgICAgICBpZiAoaW5wdXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogJ0JBRF9SRVFVRVNUJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gaW5wdXQgZXhwZWN0ZWQnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH07XG4gICAgY29uc3Qgb3V0cHV0UGFyc2VyID0gJ291dHB1dCcgaW4gb3B0cyAmJiBvcHRzLm91dHB1dCA/IG9wdHMub3V0cHV0IDogKG91dHB1dCk9Pm91dHB1dDtcbiAgICByZXR1cm4gbmV3IFByb2NlZHVyZSh7XG4gICAgICAgIGlucHV0UGFyc2VyOiBpbnB1dFBhcnNlcixcbiAgICAgICAgcmVzb2x2ZXI6IG9wdHMucmVzb2x2ZSxcbiAgICAgICAgbWlkZGxld2FyZXM6IFtdLFxuICAgICAgICBvdXRwdXRQYXJzZXI6IG91dHB1dFBhcnNlcixcbiAgICAgICAgbWV0YTogb3B0cy5tZXRhXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFBhcnNlRm4ocHJvY2VkdXJlUGFyc2VyKSB7XG4gICAgY29uc3QgcGFyc2VyID0gcHJvY2VkdXJlUGFyc2VyO1xuICAgIGlmICh0eXBlb2YgcGFyc2VyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIFBhcnNlckN1c3RvbVZhbGlkYXRvckVzcXVlXG4gICAgICAgIHJldHVybiBwYXJzZXI7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyc2VyLnBhcnNlQXN5bmMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUGFyc2VyWm9kRXNxdWVcbiAgICAgICAgcmV0dXJuIHBhcnNlci5wYXJzZUFzeW5jLmJpbmQocGFyc2VyKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIucGFyc2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUGFyc2VyWm9kRXNxdWVcbiAgICAgICAgLy8gUGFyc2VyVmFsaWJvdEVzcXVlICg8PSB2MC4xMi5YKVxuICAgICAgICByZXR1cm4gcGFyc2VyLnBhcnNlLmJpbmQocGFyc2VyKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIudmFsaWRhdGVTeW5jID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIFBhcnNlcll1cEVzcXVlXG4gICAgICAgIHJldHVybiBwYXJzZXIudmFsaWRhdGVTeW5jLmJpbmQocGFyc2VyKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIFBhcnNlclN1cGVyc3RydWN0RXNxdWVcbiAgICAgICAgcmV0dXJuIHBhcnNlci5jcmVhdGUuYmluZChwYXJzZXIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhcnNlci5hc3NlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gUGFyc2VyU2NhbGVFc3F1ZVxuICAgICAgICByZXR1cm4gKHZhbHVlKT0+e1xuICAgICAgICAgICAgcGFyc2VyLmFzc2VydCh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGZpbmQgYSB2YWxpZGF0b3IgZm4nKTtcbn1cbi8qKlxuICogQGRlcHJlY2F0ZWQgb25seSBmb3IgYmFja3dhcmRzIGNvbXBhdFxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gZ2V0UGFyc2VGbk9yUGFzc1Rocm91Z2gocHJvY2VkdXJlUGFyc2VyKSB7XG4gICAgaWYgKCFwcm9jZWR1cmVQYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuICh2KT0+djtcbiAgICB9XG4gICAgcmV0dXJuIGdldFBhcnNlRm4ocHJvY2VkdXJlUGFyc2VyKTtcbn1cblxuLyoqXG4gKiBFbnN1cmVzIHRoZXJlIGFyZSBubyBkdXBsaWNhdGUga2V5cyB3aGVuIGJ1aWxkaW5nIGEgcHJvY2VkdXJlLlxuICovIGZ1bmN0aW9uIG1lcmdlV2l0aG91dE92ZXJyaWRlcyhvYmoxLCAuLi5vYmpzKSB7XG4gICAgY29uc3QgbmV3T2JqID0gT2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKG51bGwpLCBvYmoxKTtcbiAgICBmb3IgKGNvbnN0IG92ZXJyaWRlcyBvZiBvYmpzKXtcbiAgICAgICAgZm9yKGNvbnN0IGtleSBpbiBvdmVycmlkZXMpe1xuICAgICAgICAgICAgaWYgKGtleSBpbiBuZXdPYmogJiYgbmV3T2JqW2tleV0gIT09IG92ZXJyaWRlc1trZXldKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUga2V5ICR7a2V5fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvdmVycmlkZXNba2V5XTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3T2JqO1xufVxuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGNyZWF0ZU1pZGRsZXdhcmVGYWN0b3J5KCkge1xuICAgIGZ1bmN0aW9uIGNyZWF0ZU1pZGRsZXdhcmVJbm5lcihtaWRkbGV3YXJlcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgX21pZGRsZXdhcmVzOiBtaWRkbGV3YXJlcyxcbiAgICAgICAgICAgIHVuc3RhYmxlX3BpcGUgKG1pZGRsZXdhcmVCdWlsZGVyT3JGbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBpcGVkTWlkZGxld2FyZSA9ICdfbWlkZGxld2FyZXMnIGluIG1pZGRsZXdhcmVCdWlsZGVyT3JGbiA/IG1pZGRsZXdhcmVCdWlsZGVyT3JGbi5fbWlkZGxld2FyZXMgOiBbXG4gICAgICAgICAgICAgICAgICAgIG1pZGRsZXdhcmVCdWlsZGVyT3JGblxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1pZGRsZXdhcmVJbm5lcihbXG4gICAgICAgICAgICAgICAgICAgIC4uLm1pZGRsZXdhcmVzLFxuICAgICAgICAgICAgICAgICAgICAuLi5waXBlZE1pZGRsZXdhcmVcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlTWlkZGxld2FyZShmbikge1xuICAgICAgICByZXR1cm4gY3JlYXRlTWlkZGxld2FyZUlubmVyKFtcbiAgICAgICAgICAgIGZuXG4gICAgICAgIF0pO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlTWlkZGxld2FyZTtcbn1cbmNvbnN0IGV4cGVyaW1lbnRhbF9zdGFuZGFsb25lTWlkZGxld2FyZSA9ICgpPT4oe1xuICAgICAgICBjcmVhdGU6IGNyZWF0ZU1pZGRsZXdhcmVGYWN0b3J5KClcbiAgICB9KTtcbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvYmopO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIFBsZWFzZSBub3RlLCBgdHJwYy1vcGVuYXBpYCB1c2VzIHRoaXMgZnVuY3Rpb24uXG4gKi8gZnVuY3Rpb24gY3JlYXRlSW5wdXRNaWRkbGV3YXJlKHBhcnNlKSB7XG4gICAgY29uc3QgaW5wdXRNaWRkbGV3YXJlID0gYXN5bmMgKHsgbmV4dCAsIHJhd0lucHV0ICwgaW5wdXQgLCAgfSk9PntcbiAgICAgICAgbGV0IHBhcnNlZElucHV0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcGFyc2VkSW5wdXQgPSBhd2FpdCBwYXJzZShyYXdJbnB1dCk7XG4gICAgICAgIH0gY2F0Y2ggKGNhdXNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgICAgICBjb2RlOiAnQkFEX1JFUVVFU1QnLFxuICAgICAgICAgICAgICAgIGNhdXNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBNdWx0aXBsZSBpbnB1dCBwYXJzZXJzXG4gICAgICAgIGNvbnN0IGNvbWJpbmVkSW5wdXQgPSBpc1BsYWluT2JqZWN0KGlucHV0KSAmJiBpc1BsYWluT2JqZWN0KHBhcnNlZElucHV0KSA/IHtcbiAgICAgICAgICAgIC4uLmlucHV0LFxuICAgICAgICAgICAgLi4ucGFyc2VkSW5wdXRcbiAgICAgICAgfSA6IHBhcnNlZElucHV0O1xuICAgICAgICAvLyBUT0RPIGZpeCB0aGlzIHR5cGluZz9cbiAgICAgICAgcmV0dXJuIG5leHQoe1xuICAgICAgICAgICAgaW5wdXQ6IGNvbWJpbmVkSW5wdXRcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBpbnB1dE1pZGRsZXdhcmUuX3R5cGUgPSAnaW5wdXQnO1xuICAgIHJldHVybiBpbnB1dE1pZGRsZXdhcmU7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGNyZWF0ZU91dHB1dE1pZGRsZXdhcmUocGFyc2UpIHtcbiAgICBjb25zdCBvdXRwdXRNaWRkbGV3YXJlID0gYXN5bmMgKHsgbmV4dCAgfSk9PntcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbmV4dCgpO1xuICAgICAgICBpZiAoIXJlc3VsdC5vaykge1xuICAgICAgICAgICAgLy8gcGFzcyB0aHJvdWdoIGZhaWx1cmVzIHdpdGhvdXQgdmFsaWRhdGluZ1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHBhcnNlKHJlc3VsdC5kYXRhKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICAgICAgICAgIGRhdGFcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gY2F0Y2ggKGNhdXNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT3V0cHV0IHZhbGlkYXRpb24gZmFpbGVkJyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnSU5URVJOQUxfU0VSVkVSX0VSUk9SJyxcbiAgICAgICAgICAgICAgICBjYXVzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIG91dHB1dE1pZGRsZXdhcmUuX3R5cGUgPSAnb3V0cHV0JztcbiAgICByZXR1cm4gb3V0cHV0TWlkZGxld2FyZTtcbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBjb25zdCBtaWRkbGV3YXJlTWFya2VyID0gJ21pZGRsZXdhcmVNYXJrZXInO1xuXG5mdW5jdGlvbiBjcmVhdGVOZXdCdWlsZGVyKGRlZjEsIGRlZjIpIHtcbiAgICBjb25zdCB7IG1pZGRsZXdhcmVzID1bXSAsIGlucHV0cyAsIG1ldGEgLCAuLi5yZXN0IH0gPSBkZWYyO1xuICAgIC8vIFRPRE86IG1heWJlIGhhdmUgYSBmbiBoZXJlIHRvIHdhcm4gYWJvdXQgY2FsbHNcbiAgICByZXR1cm4gY3JlYXRlQnVpbGRlcih7XG4gICAgICAgIC4uLm1lcmdlV2l0aG91dE92ZXJyaWRlcyhkZWYxLCByZXN0KSxcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICAuLi5kZWYxLmlucHV0cyxcbiAgICAgICAgICAgIC4uLmlucHV0cyA/PyBbXVxuICAgICAgICBdLFxuICAgICAgICBtaWRkbGV3YXJlczogW1xuICAgICAgICAgICAgLi4uZGVmMS5taWRkbGV3YXJlcyxcbiAgICAgICAgICAgIC4uLm1pZGRsZXdhcmVzXG4gICAgICAgIF0sXG4gICAgICAgIG1ldGE6IGRlZjEubWV0YSAmJiBtZXRhID8ge1xuICAgICAgICAgICAgLi4uZGVmMS5tZXRhLFxuICAgICAgICAgICAgLi4ubWV0YVxuICAgICAgICB9IDogbWV0YSA/PyBkZWYxLm1ldGFcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUJ1aWxkZXIoaW5pdERlZiA9IHt9KSB7XG4gICAgY29uc3QgX2RlZiA9IHtcbiAgICAgICAgaW5wdXRzOiBbXSxcbiAgICAgICAgbWlkZGxld2FyZXM6IFtdLFxuICAgICAgICAuLi5pbml0RGVmXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBfZGVmLFxuICAgICAgICBpbnB1dCAoaW5wdXQpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlciA9IGdldFBhcnNlRm4oaW5wdXQpO1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5ld0J1aWxkZXIoX2RlZiwge1xuICAgICAgICAgICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAgICAgICAgICBpbnB1dFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgbWlkZGxld2FyZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlSW5wdXRNaWRkbGV3YXJlKHBhcnNlcilcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb3V0cHV0IChvdXRwdXQpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlT3V0cHV0ID0gZ2V0UGFyc2VGbihvdXRwdXQpO1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5ld0J1aWxkZXIoX2RlZiwge1xuICAgICAgICAgICAgICAgIG91dHB1dCxcbiAgICAgICAgICAgICAgICBtaWRkbGV3YXJlczogW1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGVPdXRwdXRNaWRkbGV3YXJlKHBhcnNlT3V0cHV0KVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBtZXRhIChtZXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTmV3QnVpbGRlcihfZGVmLCB7XG4gICAgICAgICAgICAgICAgbWV0YTogbWV0YVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICogVGhpcyBmdW5jdGlvbmFsaXR5IGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLlxuICAgICAqLyB1bnN0YWJsZV9jb25jYXQgKGJ1aWxkZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXdCdWlsZGVyKF9kZWYsIGJ1aWxkZXIuX2RlZik7XG4gICAgICAgIH0sXG4gICAgICAgIHVzZSAobWlkZGxld2FyZUJ1aWxkZXJPckZuKSB7XG4gICAgICAgICAgICAvLyBEaXN0aW5ndWlzaCBiZXR3ZWVuIGEgbWlkZGxld2FyZSBidWlsZGVyIGFuZCBhIG1pZGRsZXdhcmUgZnVuY3Rpb25cbiAgICAgICAgICAgIGNvbnN0IG1pZGRsZXdhcmVzID0gJ19taWRkbGV3YXJlcycgaW4gbWlkZGxld2FyZUJ1aWxkZXJPckZuID8gbWlkZGxld2FyZUJ1aWxkZXJPckZuLl9taWRkbGV3YXJlcyA6IFtcbiAgICAgICAgICAgICAgICBtaWRkbGV3YXJlQnVpbGRlck9yRm5cbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTmV3QnVpbGRlcihfZGVmLCB7XG4gICAgICAgICAgICAgICAgbWlkZGxld2FyZXM6IG1pZGRsZXdhcmVzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnkgKHJlc29sdmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlUmVzb2x2ZXIoe1xuICAgICAgICAgICAgICAgIC4uLl9kZWYsXG4gICAgICAgICAgICAgICAgcXVlcnk6IHRydWVcbiAgICAgICAgICAgIH0sIHJlc29sdmVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgbXV0YXRpb24gKHJlc29sdmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlUmVzb2x2ZXIoe1xuICAgICAgICAgICAgICAgIC4uLl9kZWYsXG4gICAgICAgICAgICAgICAgbXV0YXRpb246IHRydWVcbiAgICAgICAgICAgIH0sIHJlc29sdmVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgc3Vic2NyaXB0aW9uIChyZXNvbHZlcikge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVJlc29sdmVyKHtcbiAgICAgICAgICAgICAgICAuLi5fZGVmLFxuICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbjogdHJ1ZVxuICAgICAgICAgICAgfSwgcmVzb2x2ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVJlc29sdmVyKF9kZWYsIHJlc29sdmVyKSB7XG4gICAgY29uc3QgZmluYWxCdWlsZGVyID0gY3JlYXRlTmV3QnVpbGRlcihfZGVmLCB7XG4gICAgICAgIHJlc29sdmVyLFxuICAgICAgICBtaWRkbGV3YXJlczogW1xuICAgICAgICAgICAgYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZU1pZGRsZXdhcmUob3B0cykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNvbHZlcihvcHRzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBtYXJrZXI6IG1pZGRsZXdhcmVNYXJrZXIsXG4gICAgICAgICAgICAgICAgICAgIG9rOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBjdHg6IG9wdHMuY3R4XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0pO1xuICAgIHJldHVybiBjcmVhdGVQcm9jZWR1cmVDYWxsZXIoZmluYWxCdWlsZGVyLl9kZWYpO1xufVxuY29uc3QgY29kZWJsb2NrID0gYFxuVGhpcyBpcyBhIGNsaWVudC1vbmx5IGZ1bmN0aW9uLlxuSWYgeW91IHdhbnQgdG8gY2FsbCB0aGlzIGZ1bmN0aW9uIG9uIHRoZSBzZXJ2ZXIsIHNlZSBodHRwczovL3RycGMuaW8vZG9jcy9zZXJ2ZXIvc2VydmVyLXNpZGUtY2FsbHNcbmAudHJpbSgpO1xuZnVuY3Rpb24gY3JlYXRlUHJvY2VkdXJlQ2FsbGVyKF9kZWYpIHtcbiAgICBjb25zdCBwcm9jZWR1cmUgPSBhc3luYyBmdW5jdGlvbiByZXNvbHZlKG9wdHMpIHtcbiAgICAgICAgLy8gaXMgZGlyZWN0IHNlcnZlci1zaWRlIGNhbGxcbiAgICAgICAgaWYgKCFvcHRzIHx8ICEoJ3Jhd0lucHV0JyBpbiBvcHRzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGNvZGVibG9jayk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcnVuIHRoZSBtaWRkbGV3YXJlcyByZWN1cnNpdmVseSB3aXRoIHRoZSByZXNvbHZlciBhcyB0aGUgbGFzdCBvbmVcbiAgICAgICAgY29uc3QgY2FsbFJlY3Vyc2l2ZSA9IGFzeW5jIChjYWxsT3B0cyA9IHtcbiAgICAgICAgICAgIGluZGV4OiAwLFxuICAgICAgICAgICAgY3R4OiBvcHRzLmN0eFxuICAgICAgICB9KT0+e1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICAgICAgICAgIGNvbnN0IG1pZGRsZXdhcmUgPSBfZGVmLm1pZGRsZXdhcmVzW2NhbGxPcHRzLmluZGV4XTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtaWRkbGV3YXJlKHtcbiAgICAgICAgICAgICAgICAgICAgY3R4OiBjYWxsT3B0cy5jdHgsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IG9wdHMudHlwZSxcbiAgICAgICAgICAgICAgICAgICAgcGF0aDogb3B0cy5wYXRoLFxuICAgICAgICAgICAgICAgICAgICByYXdJbnB1dDogY2FsbE9wdHMucmF3SW5wdXQgPz8gb3B0cy5yYXdJbnB1dCxcbiAgICAgICAgICAgICAgICAgICAgbWV0YTogX2RlZi5tZXRhLFxuICAgICAgICAgICAgICAgICAgICBpbnB1dDogY2FsbE9wdHMuaW5wdXQsXG4gICAgICAgICAgICAgICAgICAgIG5leHQgKF9uZXh0T3B0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV4dE9wdHMgPSBfbmV4dE9wdHM7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbFJlY3Vyc2l2ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg6IGNhbGxPcHRzLmluZGV4ICsgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHg6IG5leHRPcHRzICYmICdjdHgnIGluIG5leHRPcHRzID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5jYWxsT3B0cy5jdHgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLm5leHRPcHRzLmN0eFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gOiBjYWxsT3B0cy5jdHgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IG5leHRPcHRzICYmICdpbnB1dCcgaW4gbmV4dE9wdHMgPyBuZXh0T3B0cy5pbnB1dCA6IGNhbGxPcHRzLmlucHV0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd0lucHV0OiBuZXh0T3B0cyAmJiAncmF3SW5wdXQnIGluIG5leHRPcHRzID8gbmV4dE9wdHMucmF3SW5wdXQgOiBjYWxsT3B0cy5yYXdJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSBjYXRjaCAoY2F1c2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBvazogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBnZXRUUlBDRXJyb3JGcm9tVW5rbm93bihjYXVzZSksXG4gICAgICAgICAgICAgICAgICAgIG1hcmtlcjogbWlkZGxld2FyZU1hcmtlclxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8vIHRoZXJlJ3MgYWx3YXlzIGF0IGxlYXN0IG9uZSBcIm5leHRcIiBzaW5jZSB3ZSB3cmFwIHRoaXMucmVzb2x2ZXIgaW4gYSBtaWRkbGV3YXJlXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNhbGxSZWN1cnNpdmUoKTtcbiAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGNvZGU6ICdJTlRFUk5BTF9TRVJWRVJfRVJST1InLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdObyByZXN1bHQgZnJvbSBtaWRkbGV3YXJlcyAtIGRpZCB5b3UgZm9yZ2V0IHRvIGByZXR1cm4gbmV4dCgpYD8nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJlc3VsdC5vaykge1xuICAgICAgICAgICAgLy8gcmUtdGhyb3cgb3JpZ2luYWwgZXJyb3JcbiAgICAgICAgICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGE7XG4gICAgfTtcbiAgICBwcm9jZWR1cmUuX2RlZiA9IF9kZWY7XG4gICAgcHJvY2VkdXJlLm1ldGEgPSBfZGVmLm1ldGE7XG4gICAgcmV0dXJuIHByb2NlZHVyZTtcbn1cblxuZnVuY3Rpb24gbWlncmF0ZVByb2NlZHVyZShvbGRQcm9jLCB0eXBlKSB7XG4gICAgY29uc3QgZGVmID0gb2xkUHJvYy5fZGVmKCk7XG4gICAgY29uc3QgaW5wdXRQYXJzZXIgPSBnZXRQYXJzZUZuT3JQYXNzVGhyb3VnaChkZWYuaW5wdXRQYXJzZXIpO1xuICAgIGNvbnN0IG91dHB1dFBhcnNlciA9IGdldFBhcnNlRm5PclBhc3NUaHJvdWdoKGRlZi5vdXRwdXRQYXJzZXIpO1xuICAgIGNvbnN0IGlucHV0TWlkZGxld2FyZSA9IGNyZWF0ZUlucHV0TWlkZGxld2FyZShpbnB1dFBhcnNlcik7XG4gICAgY29uc3QgYnVpbGRlciA9IGNyZWF0ZUJ1aWxkZXIoe1xuICAgICAgICBpbnB1dHM6IFtcbiAgICAgICAgICAgIGRlZi5pbnB1dFBhcnNlclxuICAgICAgICBdLFxuICAgICAgICBtaWRkbGV3YXJlczogW1xuICAgICAgICAgICAgLi4uZGVmLm1pZGRsZXdhcmVzLFxuICAgICAgICAgICAgaW5wdXRNaWRkbGV3YXJlLFxuICAgICAgICAgICAgY3JlYXRlT3V0cHV0TWlkZGxld2FyZShvdXRwdXRQYXJzZXIpXG4gICAgICAgIF0sXG4gICAgICAgIG1ldGE6IGRlZi5tZXRhLFxuICAgICAgICBvdXRwdXQ6IGRlZi5vdXRwdXRQYXJzZXIsXG4gICAgICAgIG11dGF0aW9uOiB0eXBlID09PSAnbXV0YXRpb24nLFxuICAgICAgICBxdWVyeTogdHlwZSA9PT0gJ3F1ZXJ5JyxcbiAgICAgICAgc3Vic2NyaXB0aW9uOiB0eXBlID09PSAnc3Vic2NyaXB0aW9uJ1xuICAgIH0pO1xuICAgIGNvbnN0IHByb2MgPSBidWlsZGVyW3R5cGVdKChvcHRzKT0+ZGVmLnJlc29sdmVyKG9wdHMpKTtcbiAgICByZXR1cm4gcHJvYztcbn1cbmZ1bmN0aW9uIG1pZ3JhdGVSb3V0ZXIob2xkUm91dGVyKSB7XG4gICAgY29uc3QgZXJyb3JGb3JtYXR0ZXIgPSBvbGRSb3V0ZXIuX2RlZi5lcnJvckZvcm1hdHRlcjtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IG9sZFJvdXRlci5fZGVmLnRyYW5zZm9ybWVyO1xuICAgIGNvbnN0IHF1ZXJpZXMgPSB7fTtcbiAgICBjb25zdCBtdXRhdGlvbnMgPSB7fTtcbiAgICBjb25zdCBzdWJzY3JpcHRpb25zID0ge307XG4gICAgZm9yIChjb25zdCBbbmFtZSwgcHJvY2VkdXJlXSBvZiBPYmplY3QuZW50cmllcyhvbGRSb3V0ZXIuX2RlZi5xdWVyaWVzKSl7XG4gICAgICAgIHF1ZXJpZXNbbmFtZV0gPSBtaWdyYXRlUHJvY2VkdXJlKHByb2NlZHVyZSwgJ3F1ZXJ5Jyk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgW25hbWUxLCBwcm9jZWR1cmUxXSBvZiBPYmplY3QuZW50cmllcyhvbGRSb3V0ZXIuX2RlZi5tdXRhdGlvbnMpKXtcbiAgICAgICAgbXV0YXRpb25zW25hbWUxXSA9IG1pZ3JhdGVQcm9jZWR1cmUocHJvY2VkdXJlMSwgJ211dGF0aW9uJyk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgW25hbWUyLCBwcm9jZWR1cmUyXSBvZiBPYmplY3QuZW50cmllcyhvbGRSb3V0ZXIuX2RlZi5zdWJzY3JpcHRpb25zKSl7XG4gICAgICAgIHN1YnNjcmlwdGlvbnNbbmFtZTJdID0gbWlncmF0ZVByb2NlZHVyZShwcm9jZWR1cmUyLCAnc3Vic2NyaXB0aW9uJyk7XG4gICAgfVxuICAgIGNvbnN0IHByb2NlZHVyZXMgPSBtZXJnZVdpdGhvdXRPdmVycmlkZXMocXVlcmllcywgbXV0YXRpb25zLCBzdWJzY3JpcHRpb25zKTtcbiAgICBjb25zdCBuZXdSb3V0ZXIgPSBjcmVhdGVSb3V0ZXJGYWN0b3J5KHtcbiAgICAgICAgdHJhbnNmb3JtZXIsXG4gICAgICAgIGVycm9yRm9ybWF0dGVyLFxuICAgICAgICBpc0RldjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJ1xuICAgIH0pKHByb2NlZHVyZXMpO1xuICAgIHJldHVybiBuZXdSb3V0ZXI7XG59XG5cbmZ1bmN0aW9uIGdldERhdGFUcmFuc2Zvcm1lcih0cmFuc2Zvcm1lcikge1xuICAgIGlmICgnaW5wdXQnIGluIHRyYW5zZm9ybWVyKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1lcjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5wdXQ6IHRyYW5zZm9ybWVyLFxuICAgICAgICBvdXRwdXQ6IHRyYW5zZm9ybWVyXG4gICAgfTtcbn1cbmNvbnN0IFBST0NFRFVSRV9ERUZJTklUSU9OX01BUCA9IHtcbiAgICBxdWVyeTogJ3F1ZXJpZXMnLFxuICAgIG11dGF0aW9uOiAnbXV0YXRpb25zJyxcbiAgICBzdWJzY3JpcHRpb246ICdzdWJzY3JpcHRpb25zJ1xufTtcbmZ1bmN0aW9uIHNhZmVPYmplY3QoLi4uYXJncykge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobnVsbCksIC4uLmFyZ3MpO1xufVxuLyoqXG4gKiBAaW50ZXJuYWwgVGhlIHR5cGUgc2lnbmF0dXJlIG9mIHRoaXMgY2xhc3MgbWF5IGNoYW5nZSB3aXRob3V0IHdhcm5pbmcuXG4gKiBAZGVwcmVjYXRlZFxuICovIGNsYXNzIFJvdXRlciB7XG4gICAgc3RhdGljIHByZWZpeFByb2NlZHVyZXMocHJvY2VkdXJlcywgcHJlZml4KSB7XG4gICAgICAgIGNvbnN0IGVwcyA9IHNhZmVPYmplY3QoKTtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCBwcm9jZWR1cmVdIG9mIE9iamVjdC5lbnRyaWVzKHByb2NlZHVyZXMpKXtcbiAgICAgICAgICAgIGVwc1twcmVmaXggKyBrZXldID0gcHJvY2VkdXJlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlcHM7XG4gICAgfVxuICAgIHF1ZXJ5KHBhdGgsIHByb2NlZHVyZSkge1xuICAgICAgICBjb25zdCByb3V0ZXIgPSBuZXcgUm91dGVyKHtcbiAgICAgICAgICAgIHF1ZXJpZXM6IHNhZmVPYmplY3Qoe1xuICAgICAgICAgICAgICAgIFtwYXRoXTogY3JlYXRlUHJvY2VkdXJlKHByb2NlZHVyZSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5tZXJnZShyb3V0ZXIpO1xuICAgIH1cbiAgICBtdXRhdGlvbihwYXRoLCBwcm9jZWR1cmUpIHtcbiAgICAgICAgY29uc3Qgcm91dGVyID0gbmV3IFJvdXRlcih7XG4gICAgICAgICAgICBtdXRhdGlvbnM6IHNhZmVPYmplY3Qoe1xuICAgICAgICAgICAgICAgIFtwYXRoXTogY3JlYXRlUHJvY2VkdXJlKHByb2NlZHVyZSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5tZXJnZShyb3V0ZXIpO1xuICAgIH1cbiAgICBzdWJzY3JpcHRpb24ocGF0aCwgcHJvY2VkdXJlKSB7XG4gICAgICAgIGNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoe1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uczogc2FmZU9iamVjdCh7XG4gICAgICAgICAgICAgICAgW3BhdGhdOiBjcmVhdGVQcm9jZWR1cmUocHJvY2VkdXJlKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLm1lcmdlKHJvdXRlcik7XG4gICAgfVxuICAgIG1lcmdlKHByZWZpeE9yUm91dGVyLCBtYXliZVJvdXRlcikge1xuICAgICAgICBsZXQgcHJlZml4ID0gJyc7XG4gICAgICAgIGxldCBjaGlsZFJvdXRlcjtcbiAgICAgICAgaWYgKHR5cGVvZiBwcmVmaXhPclJvdXRlciA9PT0gJ3N0cmluZycgJiYgbWF5YmVSb3V0ZXIgaW5zdGFuY2VvZiBSb3V0ZXIpIHtcbiAgICAgICAgICAgIHByZWZpeCA9IHByZWZpeE9yUm91dGVyO1xuICAgICAgICAgICAgY2hpbGRSb3V0ZXIgPSBtYXliZVJvdXRlcjtcbiAgICAgICAgfSBlbHNlIGlmIChwcmVmaXhPclJvdXRlciBpbnN0YW5jZW9mIFJvdXRlcikge1xuICAgICAgICAgICAgY2hpbGRSb3V0ZXIgPSBwcmVmaXhPclJvdXRlcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBhcmdzJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZHVwbGljYXRlUXVlcmllcyA9IE9iamVjdC5rZXlzKGNoaWxkUm91dGVyLl9kZWYucXVlcmllcykuZmlsdGVyKChrZXkpPT4hIXRoaXMuX2RlZi5xdWVyaWVzW3ByZWZpeCArIGtleV0pO1xuICAgICAgICBjb25zdCBkdXBsaWNhdGVNdXRhdGlvbnMgPSBPYmplY3Qua2V5cyhjaGlsZFJvdXRlci5fZGVmLm11dGF0aW9ucykuZmlsdGVyKChrZXkpPT4hIXRoaXMuX2RlZi5tdXRhdGlvbnNbcHJlZml4ICsga2V5XSk7XG4gICAgICAgIGNvbnN0IGR1cGxpY2F0ZVN1YnNjcmlwdGlvbnMgPSBPYmplY3Qua2V5cyhjaGlsZFJvdXRlci5fZGVmLnN1YnNjcmlwdGlvbnMpLmZpbHRlcigoa2V5KT0+ISF0aGlzLl9kZWYuc3Vic2NyaXB0aW9uc1twcmVmaXggKyBrZXldKTtcbiAgICAgICAgY29uc3QgZHVwbGljYXRlcyA9IFtcbiAgICAgICAgICAgIC4uLmR1cGxpY2F0ZVF1ZXJpZXMsXG4gICAgICAgICAgICAuLi5kdXBsaWNhdGVNdXRhdGlvbnMsXG4gICAgICAgICAgICAuLi5kdXBsaWNhdGVTdWJzY3JpcHRpb25zXG4gICAgICAgIF07XG4gICAgICAgIGlmIChkdXBsaWNhdGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUgZW5kcG9pbnQocyk6ICR7ZHVwbGljYXRlcy5qb2luKCcsICcpfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1lcmdlUHJvY2VkdXJlcyA9IChkZWZzKT0+e1xuICAgICAgICAgICAgY29uc3QgbmV3RGVmcyA9IHNhZmVPYmplY3QoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgcHJvY2VkdXJlXSBvZiBPYmplY3QuZW50cmllcyhkZWZzKSl7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3UHJvY2VkdXJlID0gcHJvY2VkdXJlLmluaGVyaXRNaWRkbGV3YXJlcyh0aGlzLl9kZWYubWlkZGxld2FyZXMpO1xuICAgICAgICAgICAgICAgIG5ld0RlZnNba2V5XSA9IG5ld1Byb2NlZHVyZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBSb3V0ZXIucHJlZml4UHJvY2VkdXJlcyhuZXdEZWZzLCBwcmVmaXgpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IFJvdXRlcih7XG4gICAgICAgICAgICAuLi50aGlzLl9kZWYsXG4gICAgICAgICAgICBxdWVyaWVzOiBzYWZlT2JqZWN0KHRoaXMuX2RlZi5xdWVyaWVzLCBtZXJnZVByb2NlZHVyZXMoY2hpbGRSb3V0ZXIuX2RlZi5xdWVyaWVzKSksXG4gICAgICAgICAgICBtdXRhdGlvbnM6IHNhZmVPYmplY3QodGhpcy5fZGVmLm11dGF0aW9ucywgbWVyZ2VQcm9jZWR1cmVzKGNoaWxkUm91dGVyLl9kZWYubXV0YXRpb25zKSksXG4gICAgICAgICAgICBzdWJzY3JpcHRpb25zOiBzYWZlT2JqZWN0KHRoaXMuX2RlZi5zdWJzY3JpcHRpb25zLCBtZXJnZVByb2NlZHVyZXMoY2hpbGRSb3V0ZXIuX2RlZi5zdWJzY3JpcHRpb25zKSlcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBJbnZva2UgcHJvY2VkdXJlLiBPbmx5IGZvciBpbnRlcm5hbCB1c2Ugd2l0aGluIGxpYnJhcnkuXG4gICAqLyBhc3luYyBjYWxsKG9wdHMpIHtcbiAgICAgICAgY29uc3QgeyB0eXBlICwgcGF0aCAgfSA9IG9wdHM7XG4gICAgICAgIGNvbnN0IGRlZlRhcmdldCA9IFBST0NFRFVSRV9ERUZJTklUSU9OX01BUFt0eXBlXTtcbiAgICAgICAgY29uc3QgZGVmcyA9IHRoaXMuX2RlZltkZWZUYXJnZXRdO1xuICAgICAgICBjb25zdCBwcm9jZWR1cmUgPSBkZWZzW3BhdGhdO1xuICAgICAgICBpZiAoIXByb2NlZHVyZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgY29kZTogJ05PVF9GT1VORCcsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogYE5vIFwiJHt0eXBlfVwiLXByb2NlZHVyZSBvbiBwYXRoIFwiJHtwYXRofVwiYFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByb2NlZHVyZS5jYWxsKG9wdHMpO1xuICAgIH1cbiAgICBjcmVhdGVDYWxsZXIoY3R4KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBxdWVyeTogKHBhdGgsIC4uLmFyZ3MpPT57XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2FsbCh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdxdWVyeScsXG4gICAgICAgICAgICAgICAgICAgIGN0eCxcbiAgICAgICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgcmF3SW5wdXQ6IGFyZ3NbMF1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtdXRhdGlvbjogKHBhdGgsIC4uLmFyZ3MpPT57XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2FsbCh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdtdXRhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgIGN0eCxcbiAgICAgICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgcmF3SW5wdXQ6IGFyZ3NbMF1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWJzY3JpcHRpb246IChwYXRoLCAuLi5hcmdzKT0+e1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNhbGwoe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3Vic2NyaXB0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgY3R4LFxuICAgICAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgICAgICByYXdJbnB1dDogYXJnc1swXVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICogRnVuY3Rpb24gdG8gYmUgY2FsbGVkIGJlZm9yZSBhbnkgcHJvY2VkdXJlIGlzIGludm9rZWRcbiAgICogQGxpbmsgaHR0cHM6Ly90cnBjLmlvL2RvY3MvbWlkZGxld2FyZXNcbiAgICovIG1pZGRsZXdhcmUobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbmV3IFJvdXRlcih7XG4gICAgICAgICAgICAuLi50aGlzLl9kZWYsXG4gICAgICAgICAgICBtaWRkbGV3YXJlczogW1xuICAgICAgICAgICAgICAgIC4uLnRoaXMuX2RlZi5taWRkbGV3YXJlcyxcbiAgICAgICAgICAgICAgICBtaWRkbGV3YXJlXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICogRm9ybWF0IGVycm9yc1xuICAgKiBAbGluayBodHRwczovL3RycGMuaW8vZG9jcy9lcnJvci1mb3JtYXR0aW5nXG4gICAqLyBmb3JtYXRFcnJvcihlcnJvckZvcm1hdHRlcikge1xuICAgICAgICBpZiAodGhpcy5fZGVmLmVycm9yRm9ybWF0dGVyICE9PSBkZWZhdWx0Rm9ybWF0dGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBzZWVtIHRvIGhhdmUgZG91YmxlIGBmb3JtYXRFcnJvcigpYC1jYWxscyBpbiB5b3VyIHJvdXRlciB0cmVlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSb3V0ZXIoe1xuICAgICAgICAgICAgLi4udGhpcy5fZGVmLFxuICAgICAgICAgICAgZXJyb3JGb3JtYXR0ZXI6IGVycm9yRm9ybWF0dGVyXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRFcnJvclNoYXBlKG9wdHMpIHtcbiAgICAgICAgY29uc3QgeyBwYXRoICwgZXJyb3IgIH0gPSBvcHRzO1xuICAgICAgICBjb25zdCB7IGNvZGUgIH0gPSBvcHRzLmVycm9yO1xuICAgICAgICBjb25zdCBzaGFwZSA9IHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICBjb2RlOiBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWVtjb2RlXSxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBjb2RlLFxuICAgICAgICAgICAgICAgIGh0dHBTdGF0dXM6IGdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yKGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpZiAoZ2xvYmFsVGhpcy5wcm9jZXNzPy5lbnY/Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIG9wdHMuZXJyb3Iuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzaGFwZS5kYXRhLnN0YWNrID0gb3B0cy5lcnJvci5zdGFjaztcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzaGFwZS5kYXRhLnBhdGggPSBwYXRoO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9kZWYuZXJyb3JGb3JtYXR0ZXIoe1xuICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgICAgIHNoYXBlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICogQWRkIGRhdGEgdHJhbnNmb3JtZXIgdG8gc2VyaWFsaXplL2Rlc2VyaWFsaXplIGlucHV0IGFyZ3MgKyBvdXRwdXRcbiAgICogQGxpbmsgaHR0cHM6Ly90cnBjLmlvL2RvY3MvZGF0YS10cmFuc2Zvcm1lcnNcbiAgICovIHRyYW5zZm9ybWVyKF90cmFuc2Zvcm1lcikge1xuICAgICAgICBjb25zdCB0cmFuc2Zvcm1lciA9IGdldERhdGFUcmFuc2Zvcm1lcihfdHJhbnNmb3JtZXIpO1xuICAgICAgICBpZiAodGhpcy5fZGVmLnRyYW5zZm9ybWVyICE9PSBkZWZhdWx0VHJhbnNmb3JtZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWW91IHNlZW0gdG8gaGF2ZSBkb3VibGUgYHRyYW5zZm9ybWVyKClgLWNhbGxzIGluIHlvdXIgcm91dGVyIHRyZWUnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFJvdXRlcih7XG4gICAgICAgICAgICAuLi50aGlzLl9kZWYsXG4gICAgICAgICAgICB0cmFuc2Zvcm1lclxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEZsYXR0ZW5zIHRoZSBnZW5lcmljcyBvZiBUUXVlcmllcy9UTXV0YXRpb25zL1RTdWJzY3JpcHRpb25zLlxuICAgKiDimqDvuI8gRXhwZXJpbWVudGFsIC0gbWlnaHQgZGlzYXBwZWFyLiDimqDvuI9cbiAgICpcbiAgICogQGFscGhhXG4gICAqLyBmbGF0KCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAqIEludGVyb3AgbW9kZSBmb3IgdjkueCAtPiB2MTAueFxuICAgKi8gaW50ZXJvcCgpIHtcbiAgICAgICAgcmV0dXJuIG1pZ3JhdGVSb3V0ZXIodGhpcyk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGRlZil7XG4gICAgICAgIHRoaXMuX2RlZiA9IHtcbiAgICAgICAgICAgIHF1ZXJpZXM6IGRlZj8ucXVlcmllcyA/PyBzYWZlT2JqZWN0KCksXG4gICAgICAgICAgICBtdXRhdGlvbnM6IGRlZj8ubXV0YXRpb25zID8/IHNhZmVPYmplY3QoKSxcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbnM6IGRlZj8uc3Vic2NyaXB0aW9ucyA/PyBzYWZlT2JqZWN0KCksXG4gICAgICAgICAgICBtaWRkbGV3YXJlczogZGVmPy5taWRkbGV3YXJlcyA/PyBbXSxcbiAgICAgICAgICAgIGVycm9yRm9ybWF0dGVyOiBkZWY/LmVycm9yRm9ybWF0dGVyID8/IGRlZmF1bHRGb3JtYXR0ZXIsXG4gICAgICAgICAgICB0cmFuc2Zvcm1lcjogZGVmPy50cmFuc2Zvcm1lciA/PyBkZWZhdWx0VHJhbnNmb3JtZXJcbiAgICAgICAgfTtcbiAgICB9XG59XG4vKipcbiAqIEBkZXByZWNhdGVkXG4gKi8gZnVuY3Rpb24gcm91dGVyKCkge1xuICAgIHJldHVybiBuZXcgUm91dGVyKCk7XG59XG5cbmZ1bmN0aW9uIG1lcmdlUm91dGVycyguLi5yb3V0ZXJMaXN0KSB7XG4gICAgY29uc3QgcmVjb3JkID0gbWVyZ2VXaXRob3V0T3ZlcnJpZGVzKHt9LCAuLi5yb3V0ZXJMaXN0Lm1hcCgocik9PnIuX2RlZi5yZWNvcmQpKTtcbiAgICBjb25zdCBlcnJvckZvcm1hdHRlciA9IHJvdXRlckxpc3QucmVkdWNlKChjdXJyZW50RXJyb3JGb3JtYXR0ZXIsIG5leHRSb3V0ZXIpPT57XG4gICAgICAgIGlmIChuZXh0Um91dGVyLl9kZWYuX2NvbmZpZy5lcnJvckZvcm1hdHRlciAmJiBuZXh0Um91dGVyLl9kZWYuX2NvbmZpZy5lcnJvckZvcm1hdHRlciAhPT0gZGVmYXVsdEZvcm1hdHRlcikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRFcnJvckZvcm1hdHRlciAhPT0gZGVmYXVsdEZvcm1hdHRlciAmJiBjdXJyZW50RXJyb3JGb3JtYXR0ZXIgIT09IG5leHRSb3V0ZXIuX2RlZi5fY29uZmlnLmVycm9yRm9ybWF0dGVyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3Ugc2VlbSB0byBoYXZlIHNldmVyYWwgZXJyb3IgZm9ybWF0dGVycycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHRSb3V0ZXIuX2RlZi5fY29uZmlnLmVycm9yRm9ybWF0dGVyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjdXJyZW50RXJyb3JGb3JtYXR0ZXI7XG4gICAgfSwgZGVmYXVsdEZvcm1hdHRlcik7XG4gICAgY29uc3QgdHJhbnNmb3JtZXIgPSByb3V0ZXJMaXN0LnJlZHVjZSgocHJldiwgY3VycmVudCk9PntcbiAgICAgICAgaWYgKGN1cnJlbnQuX2RlZi5fY29uZmlnLnRyYW5zZm9ybWVyICYmIGN1cnJlbnQuX2RlZi5fY29uZmlnLnRyYW5zZm9ybWVyICE9PSBkZWZhdWx0VHJhbnNmb3JtZXIpIHtcbiAgICAgICAgICAgIGlmIChwcmV2ICE9PSBkZWZhdWx0VHJhbnNmb3JtZXIgJiYgcHJldiAhPT0gY3VycmVudC5fZGVmLl9jb25maWcudHJhbnNmb3JtZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBzZWVtIHRvIGhhdmUgc2V2ZXJhbCB0cmFuc2Zvcm1lcnMnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50Ll9kZWYuX2NvbmZpZy50cmFuc2Zvcm1lcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJldjtcbiAgICB9LCBkZWZhdWx0VHJhbnNmb3JtZXIpO1xuICAgIGNvbnN0IHJvdXRlciA9IGNyZWF0ZVJvdXRlckZhY3Rvcnkoe1xuICAgICAgICBlcnJvckZvcm1hdHRlcixcbiAgICAgICAgdHJhbnNmb3JtZXIsXG4gICAgICAgIGlzRGV2OiByb3V0ZXJMaXN0LnNvbWUoKHIpPT5yLl9kZWYuX2NvbmZpZy5pc0RldiksXG4gICAgICAgIGFsbG93T3V0c2lkZU9mU2VydmVyOiByb3V0ZXJMaXN0LnNvbWUoKHIpPT5yLl9kZWYuX2NvbmZpZy5hbGxvd091dHNpZGVPZlNlcnZlciksXG4gICAgICAgIGlzU2VydmVyOiByb3V0ZXJMaXN0LnNvbWUoKHIpPT5yLl9kZWYuX2NvbmZpZy5pc1NlcnZlciksXG4gICAgICAgICR0eXBlczogcm91dGVyTGlzdFswXT8uX2RlZi5fY29uZmlnLiR0eXBlc1xuICAgIH0pKHJlY29yZCk7XG4gICAgcmV0dXJuIHJvdXRlcjtcbn1cblxuLyoqXG4gKiBUT0RPOiBUaGlzIGNhbiBiZSBpbXByb3ZlZDpcbiAqIC0gV2Ugc2hvdWxkIGJlIGFibGUgdG8gY2hhaW4gYC5tZXRhKClgL2AuY29udGV4dCgpYCBvbmx5IG9uY2VcbiAqIC0gU2ltcGxpZnkgdHlwaW5nc1xuICogLSBEb2Vzbid0IG5lZWQgdG8gYmUgYSBjbGFzcyBidXQgaXQgZG9lc24ndCByZWFsbHkgaHVydCBlaXRoZXJcbiAqLyBjbGFzcyBUUlBDQnVpbGRlciB7XG4gICAgY29udGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUUlBDQnVpbGRlcigpO1xuICAgIH1cbiAgICBtZXRhKCkge1xuICAgICAgICByZXR1cm4gbmV3IFRSUENCdWlsZGVyKCk7XG4gICAgfVxuICAgIGNyZWF0ZShvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVUUlBDSW5uZXIoKShvcHRpb25zKTtcbiAgICB9XG59XG4vKipcbiAqIEluaXRpYWxpemUgdFJQQyAtIGRvbmUgZXhhY3RseSBvbmNlIHBlciBiYWNrZW5kXG4gKi8gY29uc3QgaW5pdFRSUEMgPSBuZXcgVFJQQ0J1aWxkZXIoKTtcbmZ1bmN0aW9uIGNyZWF0ZVRSUENJbm5lcigpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gaW5pdFRSUENJbm5lcihydW50aW1lKSB7XG4gICAgICAgIGNvbnN0IGVycm9yRm9ybWF0dGVyID0gcnVudGltZT8uZXJyb3JGb3JtYXR0ZXIgPz8gZGVmYXVsdEZvcm1hdHRlcjtcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtZXIgPSBnZXREYXRhVHJhbnNmb3JtZXIkMShydW50aW1lPy50cmFuc2Zvcm1lciA/PyBkZWZhdWx0VHJhbnNmb3JtZXIpO1xuICAgICAgICBjb25zdCBjb25maWcgPSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm1lcixcbiAgICAgICAgICAgIGlzRGV2OiBydW50aW1lPy5pc0RldiA/PyBnbG9iYWxUaGlzLnByb2Nlc3M/LmVudj8uTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyxcbiAgICAgICAgICAgIGFsbG93T3V0c2lkZU9mU2VydmVyOiBydW50aW1lPy5hbGxvd091dHNpZGVPZlNlcnZlciA/PyBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yRm9ybWF0dGVyLFxuICAgICAgICAgICAgaXNTZXJ2ZXI6IHJ1bnRpbWU/LmlzU2VydmVyID8/IGlzU2VydmVyRGVmYXVsdCxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICogQGludGVybmFsXG4gICAgICAgKi8gJHR5cGVzOiBjcmVhdGVGbGF0UHJveHkoKGtleSk9PntcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRyaWVkIHRvIGFjY2VzcyBcIiR0eXBlcy4ke2tleX1cIiB3aGljaCBpcyBub3QgYXZhaWxhYmxlIGF0IHJ1bnRpbWVgKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH07XG4gICAgICAgIHtcbiAgICAgICAgICAgIC8vIFNlcnZlciBjaGVja1xuICAgICAgICAgICAgY29uc3QgaXNTZXJ2ZXIgPSBydW50aW1lPy5pc1NlcnZlciA/PyBpc1NlcnZlckRlZmF1bHQ7XG4gICAgICAgICAgICBpZiAoIWlzU2VydmVyICYmIHJ1bnRpbWU/LmFsbG93T3V0c2lkZU9mU2VydmVyICE9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UncmUgdHJ5aW5nIHRvIHVzZSBAdHJwYy9zZXJ2ZXIgaW4gYSBub24tc2VydmVyIGVudmlyb25tZW50LiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQgYnkgZGVmYXVsdC5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgKiBUaGVzZSBhcmUganVzdCB0eXBlcywgdGhleSBjYW4ndCBiZSB1c2VkXG4gICAgICAgKiBAaW50ZXJuYWxcbiAgICAgICAqLyBfY29uZmlnOiBjb25maWcsXG4gICAgICAgICAgICAvKipcbiAgICAgICAqIEJ1aWxkZXIgb2JqZWN0IGZvciBjcmVhdGluZyBwcm9jZWR1cmVzXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdHJwYy5pby9kb2NzL3NlcnZlci9wcm9jZWR1cmVzXG4gICAgICAgKi8gcHJvY2VkdXJlOiBjcmVhdGVCdWlsZGVyKHtcbiAgICAgICAgICAgICAgICBtZXRhOiBydW50aW1lPy5kZWZhdWx0TWV0YVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAvKipcbiAgICAgICAqIENyZWF0ZSByZXVzYWJsZSBtaWRkbGV3YXJlc1xuICAgICAgICogQHNlZSBodHRwczovL3RycGMuaW8vZG9jcy9zZXJ2ZXIvbWlkZGxld2FyZXNcbiAgICAgICAqLyBtaWRkbGV3YXJlOiBjcmVhdGVNaWRkbGV3YXJlRmFjdG9yeSgpLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgKiBDcmVhdGUgYSByb3V0ZXJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90cnBjLmlvL2RvY3Mvc2VydmVyL3JvdXRlcnNcbiAgICAgICAqLyByb3V0ZXI6IGNyZWF0ZVJvdXRlckZhY3RvcnkoY29uZmlnKSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICogTWVyZ2UgUm91dGVyc1xuICAgICAgICogQHNlZSBodHRwczovL3RycGMuaW8vZG9jcy9zZXJ2ZXIvbWVyZ2luZy1yb3V0ZXJzXG4gICAgICAgKi8gbWVyZ2VSb3V0ZXJzLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgKiBDcmVhdGUgYSBzZXJ2ZXItc2lkZSBjYWxsZXIgZm9yIGEgcm91dGVyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdHJwYy5pby9kb2NzL3NlcnZlci9zZXJ2ZXItc2lkZS1jYWxsc1xuICAgICAgICovIGNyZWF0ZUNhbGxlckZhY3Rvcnk6IGNyZWF0ZUNhbGxlckZhY3RvcnkoKVxuICAgICAgICB9O1xuICAgIH07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUlucHV0TWlkZGxld2FyZSwgY3JlYXRlT3V0cHV0TWlkZGxld2FyZSwgZXhwZXJpbWVudGFsX3N0YW5kYWxvbmVNaWRkbGV3YXJlLCBpbml0VFJQQywgcm91dGVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   r: () => (/* binding */ resolveHTTPResponse)\n/* harmony export */ });\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-d5fdbd39.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformTRPCResponse-1153b421.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contentType-9fd995d3.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n\n\n\n\n\n\nconst HTTP_METHOD_PROCEDURE_TYPE_MAP = {\n    GET: 'query',\n    POST: 'mutation'\n};\nconst fallbackContentTypeHandler = {\n    getInputs: _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_3__.g\n};\nfunction initResponse(initOpts) {\n    const { ctx , paths , type , responseMeta , untransformedJSON , errors =[] ,  } = initOpts;\n    let status = untransformedJSON ? (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_4__.b)(untransformedJSON) : 200;\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n    const eagerGeneration = !untransformedJSON;\n    const data = eagerGeneration ? [] : Array.isArray(untransformedJSON) ? untransformedJSON : [\n        untransformedJSON\n    ];\n    const meta = responseMeta?.({\n        ctx,\n        paths,\n        type,\n        data,\n        errors,\n        eagerGeneration\n    }) ?? {};\n    for (const [key, value] of Object.entries(meta.headers ?? {})){\n        headers[key] = value;\n    }\n    if (meta.status) {\n        status = meta.status;\n    }\n    return {\n        status,\n        headers\n    };\n}\nasync function inputToProcedureCall(procedureOpts) {\n    const { opts , ctx , type , input , path  } = procedureOpts;\n    try {\n        const data = await (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.e)({\n            procedures: opts.router._def.procedures,\n            path,\n            rawInput: input,\n            ctx,\n            type\n        });\n        return {\n            result: {\n                data\n            }\n        };\n    } catch (cause) {\n        const error = (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause);\n        opts.onError?.({\n            error,\n            path,\n            input,\n            ctx,\n            type: type,\n            req: opts.req\n        });\n        return {\n            error: (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n                config: opts.router._def._config,\n                error,\n                type,\n                path,\n                input,\n                ctx\n            })\n        };\n    }\n}\nfunction caughtErrorToData(cause, errorOpts) {\n    const { router , req , onError  } = errorOpts.opts;\n    const error = (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause);\n    onError?.({\n        error,\n        path: errorOpts.path,\n        input: errorOpts.input,\n        ctx: errorOpts.ctx,\n        type: errorOpts.type,\n        req\n    });\n    const untransformedJSON = {\n        error: (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n            config: router._def._config,\n            error,\n            type: errorOpts.type,\n            path: errorOpts.path,\n            input: errorOpts.input,\n            ctx: errorOpts.ctx\n        })\n    };\n    const transformedJSON = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, untransformedJSON);\n    const body = JSON.stringify(transformedJSON);\n    return {\n        error,\n        untransformedJSON,\n        body\n    };\n}\n// implementation\nasync function resolveHTTPResponse(opts) {\n    const { router , req , unstable_onHead , unstable_onChunk  } = opts;\n    if (req.method === 'HEAD') {\n        // can be used for lambda warmup\n        const headResponse = {\n            status: 204\n        };\n        unstable_onHead?.(headResponse, false);\n        unstable_onChunk?.([\n            -1,\n            ''\n        ]);\n        return headResponse;\n    }\n    const contentTypeHandler = opts.contentTypeHandler ?? fallbackContentTypeHandler;\n    const batchingEnabled = opts.batching?.enabled ?? true;\n    const type = HTTP_METHOD_PROCEDURE_TYPE_MAP[req.method] ?? 'unknown';\n    let ctx = undefined;\n    let paths;\n    const isBatchCall = !!req.query.get('batch');\n    const isStreamCall = isBatchCall && unstable_onHead && unstable_onChunk && req.headers['trpc-batch-mode'] === 'stream';\n    try {\n        // we create context first so that (unless `createContext()` throws)\n        // error handler may access context information\n        //\n        // this way even if the client sends malformed input that might cause an exception:\n        //  - `opts.error` has value,\n        //  - batching is not enabled,\n        //  - `type` is unknown,\n        //  - `getInputs` throws because of malformed JSON,\n        // context value is still available to the error handler\n        ctx = await opts.createContext();\n        if (opts.error) {\n            throw opts.error;\n        }\n        if (isBatchCall && !batchingEnabled) {\n            throw new Error(`Batching is not enabled on the server`);\n        }\n        /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: 'Subscriptions should use wsLink',\n                code: 'METHOD_NOT_SUPPORTED'\n            });\n        }\n        if (type === 'unknown') {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: `Unexpected request method ${req.method}`,\n                code: 'METHOD_NOT_SUPPORTED'\n            });\n        }\n        const inputs = await contentTypeHandler.getInputs({\n            isBatchCall,\n            req,\n            router,\n            preprocessedBody: opts.preprocessedBody ?? false\n        });\n        paths = isBatchCall ? decodeURIComponent(opts.path).split(',') : [\n            opts.path\n        ];\n        const promises = paths.map((path, index)=>inputToProcedureCall({\n                opts,\n                ctx,\n                type,\n                input: inputs[index],\n                path\n            }));\n        if (!isStreamCall) {\n            /**\n       * Non-streaming response:\n       * - await all responses in parallel, blocking on the slowest one\n       * - create headers with known response body\n       * - return a complete HTTPResponse\n       */ const untransformedJSON = await Promise.all(promises);\n            const errors = untransformedJSON.flatMap((response)=>'error' in response ? [\n                    response.error\n                ] : []);\n            const headResponse1 = initResponse({\n                ctx,\n                paths,\n                type,\n                responseMeta: opts.responseMeta,\n                untransformedJSON,\n                errors\n            });\n            unstable_onHead?.(headResponse1, false);\n            // return body stuff\n            const result = isBatchCall ? untransformedJSON : untransformedJSON[0]; // eslint-disable-line @typescript-eslint/no-non-null-assertion -- `untransformedJSON` should be the length of `paths` which should be at least 1 otherwise there wouldn't be a request at all\n            const transformedJSON = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, result);\n            const body = JSON.stringify(transformedJSON);\n            unstable_onChunk?.([\n                -1,\n                body\n            ]);\n            return {\n                status: headResponse1.status,\n                headers: headResponse1.headers,\n                body\n            };\n        }\n        /**\n     * Streaming response:\n     * - block on none, call `onChunk` as soon as each response is ready\n     * - create headers with minimal data (cannot know the response body in advance)\n     * - return void\n     */ const headResponse2 = initResponse({\n            ctx,\n            paths,\n            type,\n            responseMeta: opts.responseMeta\n        });\n        unstable_onHead(headResponse2, true);\n        const indexedPromises = new Map(promises.map((promise, index)=>[\n                index,\n                promise.then((r)=>[\n                        index,\n                        r\n                    ])\n            ]));\n        for (const _ of paths){\n            const [index, untransformedJSON1] = await Promise.race(indexedPromises.values());\n            indexedPromises.delete(index);\n            try {\n                const transformedJSON1 = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, untransformedJSON1);\n                const body1 = JSON.stringify(transformedJSON1);\n                unstable_onChunk([\n                    index,\n                    body1\n                ]);\n            } catch (cause) {\n                const path = paths[index];\n                const input = inputs[index];\n                const { body: body2  } = caughtErrorToData(cause, {\n                    opts,\n                    ctx,\n                    type,\n                    path,\n                    input\n                });\n                unstable_onChunk([\n                    index,\n                    body2\n                ]);\n            }\n        }\n        return;\n    } catch (cause1) {\n        // we get here if\n        // - batching is called when it's not enabled\n        // - `createContext()` throws\n        // - `router._def._config.transformer.output.serialize()` throws\n        // - post body is too large\n        // - input deserialization fails\n        // - `errorFormatter` return value is malformed\n        const { error , untransformedJSON: untransformedJSON2 , body: body3  } = caughtErrorToData(cause1, {\n            opts,\n            ctx,\n            type\n        });\n        const headResponse3 = initResponse({\n            ctx,\n            paths,\n            type,\n            responseMeta: opts.responseMeta,\n            untransformedJSON: untransformedJSON2,\n            errors: [\n                error\n            ]\n        });\n        unstable_onHead?.(headResponse3, false);\n        unstable_onChunk?.([\n            -1,\n            body3\n        ]);\n        return {\n            status: headResponse3.status,\n            headers: headResponse3.headers,\n            body: body3\n        };\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   t: () => (/* binding */ toURL)\n/* harmony export */ });\nfunction toURL(urlOrPathname) {\n    const url = urlOrPathname.startsWith('/') ? `http://127.0.0.1${urlOrPathname}` : urlOrPathname;\n    return new URL(url);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdG9VUkwtOGYwZWEyMjgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLG1FQUFtRSxjQUFjO0FBQ2pGO0FBQ0E7O0FBRXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdDMtdHVyc28tdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdG9VUkwtOGYwZWEyMjgubWpzPzRiODQiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdG9VUkwodXJsT3JQYXRobmFtZSkge1xuICAgIGNvbnN0IHVybCA9IHVybE9yUGF0aG5hbWUuc3RhcnRzV2l0aCgnLycpID8gYGh0dHA6Ly8xMjcuMC4wLjEke3VybE9yUGF0aG5hbWV9YCA6IHVybE9yUGF0aG5hbWU7XG4gICAgcmV0dXJuIG5ldyBVUkwodXJsKTtcbn1cblxuZXhwb3J0IHsgdG9VUkwgYXMgdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getErrorShape),\n/* harmony export */   t: () => (/* binding */ transformTRPCResponse)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n/**\n * @internal\n */ function getErrorShape(opts) {\n    const { path , error , config  } = opts;\n    const { code  } = opts.error;\n    const shape = {\n        message: error.message,\n        code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__.T[code],\n        data: {\n            code,\n            httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(error)\n        }\n    };\n    if (config.isDev && typeof opts.error.stack === 'string') {\n        shape.data.stack = opts.error.stack;\n    }\n    if (typeof path === 'string') {\n        shape.data.path = path;\n    }\n    return config.errorFormatter({\n        ...opts,\n        shape\n    });\n}\n\nfunction transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n        return {\n            ...item,\n            error: config.transformer.output.serialize(item.error)\n        };\n    }\n    if ('data' in item.result) {\n        return {\n            ...item,\n            result: {\n                ...item.result,\n                data: config.transformer.output.serialize(item.result.data)\n            }\n        };\n    }\n    return item;\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/ function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map((item)=>transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTExNTNiNDIxLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ0g7O0FBRXBFO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0EsY0FBYyxrREFBdUI7QUFDckM7QUFDQTtBQUNBLHdCQUF3QixzREFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRCIsInNvdXJjZXMiOlsid2VicGFjazovL3QzLXR1cnNvLXRvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3RyYW5zZm9ybVRSUENSZXNwb25zZS0xMTUzYjQyMS5tanM/ZGEwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnIGFzIGdldEhUVFBTdGF0dXNDb2RlRnJvbUVycm9yIH0gZnJvbSAnLi9pbmRleC1mOTFkNzIwYy5tanMnO1xuaW1wb3J0IHsgVCBhcyBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSB9IGZyb20gJy4vY29kZXMtYzkyNGMzZGIubWpzJztcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiBnZXRFcnJvclNoYXBlKG9wdHMpIHtcbiAgICBjb25zdCB7IHBhdGggLCBlcnJvciAsIGNvbmZpZyAgfSA9IG9wdHM7XG4gICAgY29uc3QgeyBjb2RlICB9ID0gb3B0cy5lcnJvcjtcbiAgICBjb25zdCBzaGFwZSA9IHtcbiAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgY29kZTogVFJQQ19FUlJPUl9DT0RFU19CWV9LRVlbY29kZV0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGNvZGUsXG4gICAgICAgICAgICBodHRwU3RhdHVzOiBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvcihlcnJvcilcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKGNvbmZpZy5pc0RldiAmJiB0eXBlb2Ygb3B0cy5lcnJvci5zdGFjayA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2hhcGUuZGF0YS5zdGFjayA9IG9wdHMuZXJyb3Iuc3RhY2s7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2hhcGUuZGF0YS5wYXRoID0gcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZy5lcnJvckZvcm1hdHRlcih7XG4gICAgICAgIC4uLm9wdHMsXG4gICAgICAgIHNoYXBlXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVRSUENSZXNwb25zZUl0ZW0oY29uZmlnLCBpdGVtKSB7XG4gICAgaWYgKCdlcnJvcicgaW4gaXRlbSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIGVycm9yOiBjb25maWcudHJhbnNmb3JtZXIub3V0cHV0LnNlcmlhbGl6ZShpdGVtLmVycm9yKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoJ2RhdGEnIGluIGl0ZW0ucmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5pdGVtLFxuICAgICAgICAgICAgcmVzdWx0OiB7XG4gICAgICAgICAgICAgICAgLi4uaXRlbS5yZXN1bHQsXG4gICAgICAgICAgICAgICAgZGF0YTogY29uZmlnLnRyYW5zZm9ybWVyLm91dHB1dC5zZXJpYWxpemUoaXRlbS5yZXN1bHQuZGF0YSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW07XG59XG4vKipcbiAqIFRha2VzIGEgdW5zZXJpYWxpemVkIGBUUlBDUmVzcG9uc2VgIGFuZCBzZXJpYWxpemVzIGl0IHdpdGggdGhlIHJvdXRlcidzIHRyYW5zZm9ybWVyc1xuICoqLyBmdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UoY29uZmlnLCBpdGVtT3JJdGVtcykge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGl0ZW1Pckl0ZW1zKSA/IGl0ZW1Pckl0ZW1zLm1hcCgoaXRlbSk9PnRyYW5zZm9ybVRSUENSZXNwb25zZUl0ZW0oY29uZmlnLCBpdGVtKSkgOiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbU9ySXRlbXMpO1xufVxuXG5leHBvcnQgeyBnZXRFcnJvclNoYXBlIGFzIGcsIHRyYW5zZm9ybVRSUENSZXNwb25zZSBhcyB0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\n");

/***/ })

};
;